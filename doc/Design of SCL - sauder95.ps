%!PS-Adobe-3.0
%%BoundingBox: (atend)
%%Pages: (atend)
%%PageOrder: (atend)
%%DocumentFonts: (atend)
%%Creator: Frame 5.0
%%DocumentData: Clean7Bit
%%EndComments
%%BeginProlog
%
% Frame ps_prolog 5.0, for use with Frame 5.0 products
% This ps_prolog file is Copyright (c) 1986-1995 Frame Technology
% Corporation.  All rights reserved.  This ps_prolog file may be
% freely copied and distributed in conjunction with documents created
% using FrameMaker, FrameMaker/SGML and FrameViewer as long as this 
% copyright notice is preserved.
%
% FrameMaker users specify the proper paper size for each print job in the
% "Print" dialog's "Printer Paper Size" "Width" and "Height~ fields.  If the
% printer that the PS file is sent to does not support the requested paper
% size, or if there is no paper tray of the proper size currently installed, 
% then the job will not be printed.  The following flag, if set to true, will
% cause the job to print on the default paper in such cases.
/FMAllowPaperSizeMismatch            false def
%
% Frame products normally print colors as their true color on a color printer
% or as shades of gray, based on luminance, on a black-and white printer. The
% following flag, if set to true, forces all non-white colors to print as pure
% black. This has no effect on bitmap images.
/FMPrintAllColorsAsBlack             false def
%
% Frame products can either set their own line screens or use a printer's 
% default settings. Three flags below control this separately for no 
% separations, spot separations and process separations. If a flag
% is true, then the default printer settings will not be changed. If it is
% false, Frame products will use their own settings from a table based on
% the printer's resolution.
/FMUseDefaultNoSeparationScreen      true  def
/FMUseDefaultSpotSeparationScreen    true  def
/FMUseDefaultProcessSeparationScreen false def
%
% For any given PostScript printer resolution, Frame products have two sets of 
% screen angles and frequencies for printing process separations, which are 
% recomended by Adobe. The following variable chooses the higher frequencies
% when set to true or the lower frequencies when set to false. This is only
% effective if the appropriate FMUseDefault...SeparationScreen flag is false.
/FMUseHighFrequencyScreens true def
%
% The following is a set of predefined optimal frequencies and angles for various
% common dpi settings. This is taken from "Advances in Color Separation Using
% PostScript Software Technology," from Adobe Systems (3/13/89 P.N. LPS 0043)
% and corrolated with information which is in various PPD (4.0) files.
%
% The "dpiranges" figure is the minimum dots per inch device resolution which
% can support this setting. The "low" and "high" values are controlled by the
% setting of the FMUseHighFrequencyScreens flag above. The "TDot" flags control
% the use of the "Yellow Triple Dot" feature whereby the frequency id divided by
% three, but the dot function is "trippled" giving a block of 3x3 dots per cell.
%
% PatFreq is a compromise pattern frequency for ps Level 2 printers which is close
% to the ideal WYSIWYG pattern frequency of 9 repetitions/inch but does not beat
% (too badly) against the screen frequencies of any separations for that DPI.
/dpiranges   [  2540    2400    1693     1270    1200     635      600      0      ] def
/CMLowFreqs  [ 100.402  94.8683 89.2289 100.402  94.8683  66.9349  63.2456 47.4342 ] def
/YLowFreqs   [  95.25   90.0    84.65    95.25   90.0     70.5556  66.6667 50.0    ] def
/KLowFreqs   [  89.8026 84.8528 79.8088  89.8026 84.8528  74.8355  70.7107 53.033  ] def
/CLowAngles  [  71.5651 71.5651 71.5651 71.5651  71.5651  71.5651  71.5651 71.5651 ] def
/MLowAngles  [  18.4349 18.4349 18.4349 18.4349  18.4349  18.4349  18.4349 18.4349 ] def
/YLowTDot    [  true    true    false    true    true     false    false   false   ] def
/CMHighFreqs [ 133.87  126.491 133.843  108.503 102.523  100.402   94.8683 63.2456 ] def
/YHighFreqs  [ 127.0   120.0   126.975  115.455 109.091   95.25    90.0    60.0    ] def
/KHighFreqs  [ 119.737 113.137 119.713  128.289 121.218   89.8026  84.8528 63.6395 ] def
/CHighAngles [  71.5651 71.5651 71.5651  70.0169 70.0169  71.5651  71.5651 71.5651 ] def
/MHighAngles [  18.4349 18.4349 18.4349  19.9831 19.9831  18.4349  18.4349 18.4349 ] def
/YHighTDot   [  false   false   true     false   false    true     true    false   ] def
/PatFreq     [	10.5833 10.0     9.4055  10.5833 10.0	  10.5833  10.0	   9.375   ] def
%
% PostScript Level 2 printers contain an "Accurate Screens" feature which can
% improve process separation rendering at the expense of compute time. This 
% flag is ignored by PostScript Level 1 printers.
/FMUseAcccurateScreens true def
%
% The following PostScript procedure defines the spot function that Frame
% products will use for process separations. You may un-comment-out one of
% the alternative functions below, or use your own.
%
% Dot function
/FMSpotFunction {abs exch abs 2 copy add 1 gt 
		{1 sub dup mul exch 1 sub dup mul add 1 sub }
		{dup mul exch dup mul add 1 exch sub }ifelse } def
%
% Line function
% /FMSpotFunction { pop } def
%
% Elipse function
% /FMSpotFunction { dup 5 mul 8 div mul exch dup mul exch add 
%		sqrt 1 exch sub } def
%
%
/FMversion (5.0) def 
/fMLevel1 /languagelevel where {pop languagelevel} {1} ifelse 2 lt def
/FMPColor
	fMLevel1 {
		false
		/colorimage where {pop pop true} if
	} {
		true
	} ifelse
def
/FrameDict 400 dict def 
systemdict /errordict known not {/errordict 10 dict def
		errordict /rangecheck {stop} put} if
% The readline in PS 23.0 doesn't recognize cr's as nl's on AppleTalk
FrameDict /tmprangecheck errordict /rangecheck get put 
errordict /rangecheck {FrameDict /bug true put} put 
FrameDict /bug false put 
mark 
% Some PS machines read past the CR, so keep the following 3 lines together!
currentfile 5 string readline
00
0000000000
cleartomark 
errordict /rangecheck FrameDict /tmprangecheck get put 
FrameDict /bug get { 
	/readline {
		/gstring exch def
		/gfile exch def
		/gindex 0 def
		{
			gfile read pop 
			dup 10 eq {exit} if 
			dup 13 eq {exit} if 
			gstring exch gindex exch put 
			/gindex gindex 1 add def 
		} loop
		pop 
		gstring 0 gindex getinterval true 
		} bind def
	} if
/FMshowpage /showpage load def
/FMquit /quit load def
/FMFAILURE { 
	dup = flush 
	FMshowpage 
	/Helvetica findfont 12 scalefont setfont
	72 200 moveto show
	72 220 moveto show
	FMshowpage 
	FMquit 
	} def 
/FMVERSION {
	FMversion ne {
		(Frame product version does not match ps_prolog!  Check installation;)
		(also check ~/fminit and ./fminit for old versions) FMFAILURE
		} if
	} def 
/FMBADEPSF { 
	(Adobe's PostScript Language Reference Manual, 2nd Edition, section H.2.4)
	(says your EPS file is not valid, as it calls X              )
	dup dup (X) search pop exch pop exch pop length 
	5 -1 roll 
	putinterval 
	FMFAILURE
	} def
/fmConcatProcs
	{
	/proc2 exch cvlit def/proc1 exch cvlit def/newproc proc1 length proc2 length add array def
	newproc 0 proc1 putinterval newproc proc1 length proc2 putinterval newproc cvx
}def
FrameDict begin [
	/ALDsave
	/FMdicttop
	/FMoptop
	/FMpointsize
	/FMsaveobject
	/b
	/bitmapsave
	/blut
	/bpside
	/bs
	/bstring
	/bwidth
	/c
	/cf
	/cs
	/cynu
	/depth
	/edown
	/fh
	/fillvals
	/fw
	/fx
	/fy
	/g
	/gfile
	/gindex
	/grnt
	/gryt
	/gstring
	/height
	/hh
	/i
	/im
	/indx
	/is
	/k
	/kk
	/landscape
	/lb
	/len
	/llx
	/lly
	/m
	/magu
	/manualfeed
	/n
	/offbits
	/onbits
	/organgle
	/orgbangle
	/orgbfreq
	/orgbproc
	/orgbxfer
	/orgfreq
	/orggangle
	/orggfreq
	/orggproc
	/orggxfer
	/orgmatrix
	/orgproc
	/orgrangle
	/orgrfreq
	/orgrproc
	/orgrxfer
	/orgxfer
	/pagesave
	/paperheight
	/papersizedict
	/paperwidth
	/pos
	/pwid
	/r
	/rad
	/redt
	/sl
	/str
	/tran
	/u
	/urx
	/ury
	/val
	/width
	/width
	/ws
	/ww
	/x
	/x1
	/x2
	/xindex
	/xpoint
	/xscale
	/xx
	/y
	/y1
	/y2
	/yelu
	/yindex
	/ypoint
	/yscale
	/yy
] { 0 def } forall
/FmBD {bind def} bind def
systemdict /pdfmark known {
	/fMAcrobat true def
	
	/FmPD /pdfmark load def
	
	
	/FmPT /show load def
	
	
	currentdistillerparams /CoreDistVersion get 2000 ge {
	
		
		/FmPD2 /pdfmark load def
		
		
		
		
		
		/FmPA { mark exch /Dest exch 5 3 roll 
				/View [ /XYZ null 6 -2 roll FmDC exch pop null] /DEST FmPD 
		}FmBD
	} {
		
		/FmPD2 /cleartomark load def
		/FmPA {pop pop pop}FmBD
	} ifelse
} {
	
	/fMAcrobat false def
	/FmPD /cleartomark load def
	/FmPD2 /cleartomark load def
	/FmPT /pop load def
	/FmPA {pop pop pop}FmBD
} ifelse
/FmDC {
	transform fMDefaultMatrix itransform cvi exch cvi exch
}FmBD
/FmBx {
	dup 3 index lt {3 1 roll exch} if 
	1 index 4 index lt {4 -1 roll 3 1 roll exch 4 1 roll} if
}FmBD
/FMnone 0 def
/FMcyan 1 def
/FMmagenta 2 def
/FMyellow 3 def
/FMblack 4 def
/FMcustom 5 def
/fMNegative false def 
/FrameSepIs FMnone def 
/FrameSepBlack 0 def
/FrameSepYellow 0 def
/FrameSepMagenta 0 def
/FrameSepCyan 0 def
/FrameSepRed 1 def
/FrameSepGreen 1 def
/FrameSepBlue 1 def
/FrameCurGray 1 def
/FrameCurPat null def
/FrameCurColors [ 0 0 0 1 0 0 0 ] def 
/FrameColorEpsilon .001 def	
/eqepsilon {		
	sub dup 0 lt {neg} if
	FrameColorEpsilon le
} bind def
/FrameCmpColorsCMYK { 
	2 copy 0 get exch 0 get eqepsilon {
		2 copy 1 get exch 1 get eqepsilon {
			2 copy 2 get exch 2 get eqepsilon {
				3 get exch 3 get eqepsilon
			} {pop pop false} ifelse
		}{pop pop false} ifelse
	} {pop pop false} ifelse
} bind def
/FrameCmpColorsRGB { 
	2 copy 4 get exch 0 get eqepsilon {
		2 copy 5 get exch 1 get eqepsilon {
			6 get exch 2 get eqepsilon
		}{pop pop false} ifelse
	} {pop pop false} ifelse
} bind def
/RGBtoCMYK { 
	1 exch sub 
	3 1 roll 
	1 exch sub 
	3 1 roll 
	1 exch sub 
	3 1 roll 
	3 copy 
	2 copy 
	le { pop } { exch pop } ifelse 
	2 copy 
	le { pop } { exch pop } ifelse 
	dup dup dup 
	6 1 roll 
	4 1 roll 
	7 1 roll 
	sub 
	6 1 roll 
	sub 
	5 1 roll 
	sub 
	4 1 roll 
} bind def
/CMYKtoRGB { 
	dup dup 4 -1 roll add 						  
	5 1 roll 3 -1 roll add 						  
	4 1 roll add 								  
	1 exch sub dup 0 lt {pop 0} if 3 1 roll 	  
	1 exch sub dup 0 lt {pop 0} if exch 	      
	1 exch sub dup 0 lt {pop 0} if exch	  		  
} bind def
/FrameSepInit {
	1.0 RealSetgray
} bind def
/FrameSetSepColor { 
	/FrameSepBlue exch def
	/FrameSepGreen exch def
	/FrameSepRed exch def
	/FrameSepBlack exch def
	/FrameSepYellow exch def
	/FrameSepMagenta exch def
	/FrameSepCyan exch def
	/FrameSepIs FMcustom def
	setCurrentScreen	
} bind def
/FrameSetCyan {
	/FrameSepBlue 1.0 def
	/FrameSepGreen 1.0 def
	/FrameSepRed 0.0 def
	/FrameSepBlack 0.0 def
	/FrameSepYellow 0.0 def
	/FrameSepMagenta 0.0 def
	/FrameSepCyan 1.0 def
	/FrameSepIs FMcyan def
	setCurrentScreen	
} bind def
 
/FrameSetMagenta {
	/FrameSepBlue 1.0 def
	/FrameSepGreen 0.0 def
	/FrameSepRed 1.0 def
	/FrameSepBlack 0.0 def
	/FrameSepYellow 0.0 def
	/FrameSepMagenta 1.0 def
	/FrameSepCyan 0.0 def
	/FrameSepIs FMmagenta def
	setCurrentScreen
} bind def
 
/FrameSetYellow {
	/FrameSepBlue 0.0 def
	/FrameSepGreen 1.0 def
	/FrameSepRed 1.0 def
	/FrameSepBlack 0.0 def
	/FrameSepYellow 1.0 def
	/FrameSepMagenta 0.0 def
	/FrameSepCyan 0.0 def
	/FrameSepIs FMyellow def
	setCurrentScreen
} bind def
 
/FrameSetBlack {
	/FrameSepBlue 0.0 def
	/FrameSepGreen 0.0 def
	/FrameSepRed 0.0 def
	/FrameSepBlack 1.0 def
	/FrameSepYellow 0.0 def
	/FrameSepMagenta 0.0 def
	/FrameSepCyan 0.0 def
	/FrameSepIs FMblack def
	setCurrentScreen
} bind def
 
/FrameNoSep { 
	/FrameSepIs FMnone def
	setCurrentScreen
} bind def
/FrameSetSepColors { 
	FrameDict begin
	[ exch 1 add 1 roll ]
	/FrameSepColors  
	exch def end
	} bind def
/FrameColorInSepListCMYK { 
	FrameSepColors {  
       		exch dup 3 -1 roll 
       		FrameCmpColorsCMYK 
       		{ pop true exit } if
    	} forall 
	dup true ne {pop false} if
	} bind def
/FrameColorInSepListRGB { 
	FrameSepColors {  
       		exch dup 3 -1 roll 
       		FrameCmpColorsRGB 
       		{ pop true exit } if
    	} forall 
	dup true ne {pop false} if
	} bind def
/RealSetgray /setgray load def
/RealSetrgbcolor /setrgbcolor load def
/RealSethsbcolor /sethsbcolor load def
end 
/setgray { 
	FrameDict begin
	FrameSepIs FMnone eq
		{ RealSetgray } 
		{ 
		FrameSepIs FMblack eq 
			{ RealSetgray } 
			{ FrameSepIs FMcustom eq 
			  FrameSepRed 0 eq and
			  FrameSepGreen 0 eq and
			  FrameSepBlue 0 eq and {
			  	RealSetgray
			  } {
				1 RealSetgray pop 
			  } ifelse
			} ifelse
		} ifelse
	end
} bind def
/setrgbcolor { 
	FrameDict begin
	FrameSepIs FMnone eq
	{  RealSetrgbcolor }
	{
		3 copy [ 4 1 roll ] 
		FrameColorInSepListRGB
		{
				FrameSepBlue eq exch 
			 	FrameSepGreen eq and exch 
			 	FrameSepRed eq and
			 	{ 0 } { 1 } ifelse
		}
		{
			FMPColor {
				RealSetrgbcolor
				currentcmykcolor
			} {
				RGBtoCMYK
			} ifelse
			FrameSepIs FMblack eq
			{1.0 exch sub 4 1 roll pop pop pop} {
			FrameSepIs FMyellow eq
			{pop 1.0 exch sub 3 1 roll pop pop} {
			FrameSepIs FMmagenta eq
			{pop pop 1.0 exch sub exch pop } {
			FrameSepIs FMcyan eq
			{pop pop pop 1.0 exch sub } 
			{pop pop pop pop 1} ifelse } ifelse } ifelse } ifelse 
		} ifelse
		RealSetgray
	} 
	ifelse
	end
} bind def
/sethsbcolor {
	FrameDict begin
	FrameSepIs FMnone eq 
	{ RealSethsbcolor } 
	{
		RealSethsbcolor 
		currentrgbcolor  
		setrgbcolor 
	} 
	ifelse
	end
} bind def
FrameDict begin
/setcmykcolor where {
	pop /RealSetcmykcolor /setcmykcolor load def
} {
	/RealSetcmykcolor {
		4 1 roll
		3 { 3 index add 0 max 1 min 1 exch sub 3 1 roll} repeat 
		RealSetrgbcolor pop
	} bind def
} ifelse
userdict /setcmykcolor { 
		FrameDict begin
		FrameSepIs FMnone eq
		{ RealSetcmykcolor } 
		{
			4 copy [ 5 1 roll ]
			FrameColorInSepListCMYK
			{
				FrameSepBlack eq exch 
				FrameSepYellow eq and exch 
				FrameSepMagenta eq and exch 
				FrameSepCyan eq and 
				{ 0 } { 1 } ifelse
			}
			{
				FrameSepIs FMblack eq
				{1.0 exch sub 4 1 roll pop pop pop} {
				FrameSepIs FMyellow eq
				{pop 1.0 exch sub 3 1 roll pop pop} {
				FrameSepIs FMmagenta eq
				{pop pop 1.0 exch sub exch pop } {
				FrameSepIs FMcyan eq
				{pop pop pop 1.0 exch sub } 
				{pop pop pop pop 1} ifelse } ifelse } ifelse } ifelse 
			} ifelse
			RealSetgray
		}
		ifelse
		end
	} bind put
fMLevel1 { 
	
	
	
	/patScreenDict 7 dict dup begin
		<0f1e3c78f0e1c387> [ 45  { pop } {exch pop} 		.5   2 sqrt] FmBD
		<0f87c3e1f0783c1e> [ 135 { pop } {exch pop}			.5   2 sqrt] FmBD
		<cccccccccccccccc> [ 0   { pop } dup				.5   2	   ] FmBD
		<ffff0000ffff0000> [ 90  { pop } dup				.5   2	   ] FmBD
		<8142241818244281> [ 45  { 2 copy lt {exch} if pop}	dup .75  2 sqrt] FmBD
		<03060c183060c081> [ 45  { pop } {exch pop}			.875 2 sqrt] FmBD
		<8040201008040201> [ 135 { pop } {exch pop}			.875 2 sqrt] FmBD
	end def
} { 
	
	/patProcDict 5 dict dup begin
		<0f1e3c78f0e1c387> { 3 setlinewidth -1 -1 moveto 9 9 lineto stroke 
											4 -4 moveto 12 4 lineto stroke
											-4 4 moveto 4 12 lineto stroke} bind def
		<0f87c3e1f0783c1e> { 3 setlinewidth -1 9 moveto 9 -1 lineto stroke 
											-4 4 moveto 4 -4 lineto stroke
											4 12 moveto 12 4 lineto stroke} bind def
		<8142241818244281> { 1 setlinewidth -1 9 moveto 9 -1 lineto stroke
											-1 -1 moveto 9 9 lineto stroke } bind def
		<03060c183060c081> { 1 setlinewidth -1 -1 moveto 9 9 lineto stroke 
											4 -4 moveto 12 4 lineto stroke
											-4 4 moveto 4 12 lineto stroke} bind def
		<8040201008040201> { 1 setlinewidth -1 9 moveto 9 -1 lineto stroke 
											-4 4 moveto 4 -4 lineto stroke
											4 12 moveto 12 4 lineto stroke} bind def
	end def
	/patDict 15 dict dup begin
		/PatternType 1 def		
		/PaintType 2 def		
		/TilingType 3 def		
		/BBox [ 0 0 8 8 ] def 	
		/XStep 8 def			
		/YStep 8 def			
		/PaintProc {
			begin
			patProcDict bstring known {
				patProcDict bstring get exec
			} {
				8 8 true [1 0 0 -1 0 8] bstring imagemask
			} ifelse
			end
		} bind def
	end def
} ifelse
/combineColor {
    FrameSepIs FMnone eq
	{
		graymode fMLevel1 or not {
			
			[/Pattern [/DeviceCMYK]] setcolorspace
			FrameCurColors 0 4 getinterval aload pop FrameCurPat setcolor
		} {
			FrameCurColors 3 get 1.0 ge {
				FrameCurGray RealSetgray
			} {
				fMAcrobat not FMPColor graymode and and {
					0 1 3 { 
						FrameCurColors exch get
						1 FrameCurGray sub mul
					} for
					RealSetcmykcolor
				} {
					4 1 6 {
						FrameCurColors exch get
						graymode {
							1 exch sub 1 FrameCurGray sub mul 1 exch sub
						} {
							1.0 lt {FrameCurGray} {1} ifelse
						} ifelse
					} for
					RealSetrgbcolor
				} ifelse
			} ifelse
		} ifelse
	} { 
		FrameCurColors 0 4 getinterval aload
		FrameColorInSepListCMYK {
			FrameSepBlack eq exch 
			FrameSepYellow eq and exch 
			FrameSepMagenta eq and exch 
			FrameSepCyan eq and
			FrameSepIs FMcustom eq and
			{ FrameCurGray } { 1 } ifelse
		} {
			FrameSepIs FMblack eq
			{FrameCurGray 1.0 exch sub mul 1.0 exch sub 4 1 roll pop pop pop} {
			FrameSepIs FMyellow eq
			{pop FrameCurGray 1.0 exch sub mul 1.0 exch sub 3 1 roll pop pop} {
			FrameSepIs FMmagenta eq
			{pop pop FrameCurGray 1.0 exch sub mul 1.0 exch sub exch pop } {
			FrameSepIs FMcyan eq
			{pop pop pop FrameCurGray 1.0 exch sub mul 1.0 exch sub } 
			{pop pop pop pop 1} ifelse } ifelse } ifelse } ifelse 
		} ifelse
		graymode fMLevel1 or not {
			
			[/Pattern [/DeviceGray]] setcolorspace
			FrameCurPat setcolor
		} { 
			graymode not fMLevel1 and {
				
				dup 1 lt {pop FrameCurGray} if
			} if
			RealSetgray
		} ifelse
	} ifelse
} bind def
/savematrix {
	orgmatrix currentmatrix pop
	} bind def
/restorematrix {
	orgmatrix setmatrix
	} bind def
/fMDefaultMatrix matrix defaultmatrix def
/fMatrix2 matrix def
/dpi    72 0 fMDefaultMatrix dtransform
    dup mul exch   dup mul add   sqrt def
	
/freq dpi dup 72 div round dup 0 eq {pop 1} if 8 mul div def
/sangle 1 0 fMDefaultMatrix dtransform exch atan def
	sangle fMatrix2 rotate 
	fMDefaultMatrix fMatrix2 concatmatrix 
	dup 0 get /sflipx exch def
	    3 get /sflipy exch def
/screenIndex {
	0 1 dpiranges length 1 sub { dup dpiranges exch get 1 sub dpi le {exit} {pop} ifelse } for
} bind def
/getCyanScreen {
	FMUseHighFrequencyScreens { CHighAngles CMHighFreqs} {CLowAngles CMLowFreqs} ifelse
		screenIndex dup 3 1 roll get 3 1 roll get /FMSpotFunction load
} bind def
/getMagentaScreen {
	FMUseHighFrequencyScreens { MHighAngles CMHighFreqs } {MLowAngles CMLowFreqs} ifelse
		screenIndex dup 3 1 roll get 3 1 roll get /FMSpotFunction load
} bind def
/getYellowScreen {
	FMUseHighFrequencyScreens { YHighTDot YHighFreqs} { YLowTDot YLowFreqs } ifelse
		screenIndex dup 3 1 roll get 3 1 roll get { 3 div
			{2 { 1 add 2 div 3 mul dup floor sub 2 mul 1 sub exch} repeat
			FMSpotFunction } } {/FMSpotFunction load } ifelse
			0.0 exch
} bind def
/getBlackScreen  {
	FMUseHighFrequencyScreens { KHighFreqs } { KLowFreqs } ifelse
		screenIndex get 45.0 /FMSpotFunction load 
} bind def
/getSpotScreen {
	getBlackScreen
} bind def
/getCompositeScreen {
	getBlackScreen
} bind def
/FMSetScreen 
	fMLevel1 { /setscreen load 
	}{ {
		8 dict begin
		/HalftoneType 1 def
		/SpotFunction exch def
		/Angle exch def
		/Frequency exch def
		/AccurateScreens FMUseAcccurateScreens def
		currentdict end sethalftone
	} bind } ifelse
def
/setDefaultScreen {
	FMPColor {
		orgrxfer cvx orggxfer cvx orgbxfer cvx orgxfer cvx setcolortransfer
	}
	{
		orgxfer cvx settransfer
	} ifelse
	orgfreq organgle orgproc cvx setscreen
} bind def
/setCurrentScreen {
	FrameSepIs FMnone eq {
		FMUseDefaultNoSeparationScreen {
			setDefaultScreen
		} {
			getCompositeScreen FMSetScreen
		} ifelse
	} {
		FrameSepIs FMcustom eq {
			FMUseDefaultSpotSeparationScreen {
				setDefaultScreen
			} {
				getSpotScreen FMSetScreen
			} ifelse
		} {
			FMUseDefaultProcessSeparationScreen {
				setDefaultScreen
			} {
				FrameSepIs FMcyan eq {
					getCyanScreen FMSetScreen
				} {
					FrameSepIs FMmagenta eq {
						getMagentaScreen FMSetScreen
					} {
						FrameSepIs FMyellow eq {
							getYellowScreen FMSetScreen
						} {
							getBlackScreen FMSetScreen
						} ifelse
					} ifelse
				} ifelse
			} ifelse
		} ifelse
	} ifelse 
} bind def
end
	
/FMDOCUMENT { 
	array /FMfonts exch def 
	/#copies exch def
	FrameDict begin
	0 ne /manualfeed exch def
	/paperheight exch def
	/paperwidth exch def
	0 ne /fMNegative exch def 
	0 ne /edown exch def 
	/yscale exch def
	/xscale exch def
	fMLevel1 {
		manualfeed {setmanualfeed} if
		/FMdicttop countdictstack 1 add def 
		/FMoptop count def 
		setpapername 
		manualfeed {true} {papersize} ifelse 
		{manualpapersize} {false} ifelse 
		{desperatepapersize} {false} ifelse 
		{papersizefailure} if
		count -1 FMoptop {pop pop} for
		countdictstack -1 FMdicttop {pop end} for 
		}
		{2 dict
		 dup /PageSize [paperwidth paperheight] put
		 manualfeed {dup /ManualFeed manualfeed put} if
		 {setpagedevice} stopped {papersizefailure} if
		}
	ifelse 
	
	FMPColor {
		currentcolorscreen
			cvlit /orgproc exch def
				  /organgle exch def 
				  /orgfreq exch def
			cvlit /orgbproc exch def
				  /orgbangle exch def 
				  /orgbfreq exch def
			cvlit /orggproc exch def
				  /orggangle exch def 
				  /orggfreq exch def
			cvlit /orgrproc exch def
				  /orgrangle exch def 
				  /orgrfreq exch def
			currentcolortransfer 
			fMNegative {
				1 1 4 { 
					pop { 1 exch sub } fmConcatProcs 4 1 roll
				} for
				4 copy
				setcolortransfer
			} if
			cvlit /orgxfer exch def
			cvlit /orgbxfer exch def
			cvlit /orggxfer exch def
			cvlit /orgrxfer exch def
	} {
		currentscreen 
			cvlit /orgproc exch def
				  /organgle exch def 
				  /orgfreq exch def
				  
		currenttransfer 
		fMNegative {
			{ 1 exch sub } fmConcatProcs
			dup settransfer
		} if 
		cvlit /orgxfer exch def
	} ifelse
	end 
} def 
/FMBEGINPAGE { 
	FrameDict begin 
	/pagesave save def
	3.86 setmiterlimit
	/landscape exch 0 ne def
	landscape { 
		90 rotate 0 exch dup /pwid exch def neg translate pop 
	}{
		pop /pwid exch def
	} ifelse
	edown { [-1 0 0 1 pwid 0] concat } if
	0 0 moveto paperwidth 0 lineto paperwidth paperheight lineto 
	0 paperheight lineto 0 0 lineto 1 setgray fill
	xscale yscale scale
	/orgmatrix matrix def
	gsave 
} def 
/FMENDPAGE {
	grestore 
	pagesave restore
	end 
	showpage
	} def 
/FMFONTDEFINE { 
	FrameDict begin
	findfont 
	ReEncode 
	1 index exch 
	definefont 
	FMfonts 3 1 roll 
	put
	end 
	} def 
/FMFILLS {
	FrameDict begin dup
	array /fillvals exch def
	dict /patCache exch def
	end 
	} def 
/FMFILL {
	FrameDict begin
	 fillvals 3 1 roll put
	end 
	} def 
/FMNORMALIZEGRAPHICS { 
	newpath
	1 setlinewidth
	0 setlinecap
	0 0 0 sethsbcolor
	0 setgray 
	} bind def
/FMBEGINEPSF { 
	end 
	/FMEPSF save def 
	/showpage {} def 
% See Adobe's "PostScript Language Reference Manual, 2nd Edition", page 714.
% "...the following operators MUST NOT be used in an EPS file:" (emphasis ours)
	/banddevice {(banddevice) FMBADEPSF} def
	/clear {(clear) FMBADEPSF} def
	/cleardictstack {(cleardictstack) FMBADEPSF} def 
	/copypage {(copypage) FMBADEPSF} def
	/erasepage {(erasepage) FMBADEPSF} def
	/exitserver {(exitserver) FMBADEPSF} def
	/framedevice {(framedevice) FMBADEPSF} def
	/grestoreall {(grestoreall) FMBADEPSF} def
	/initclip {(initclip) FMBADEPSF} def
	/initgraphics {(initgraphics) FMBADEPSF} def
	/quit {(quit) FMBADEPSF} def
	/renderbands {(renderbands) FMBADEPSF} def
	/setglobal {(setglobal) FMBADEPSF} def
	/setpagedevice {(setpagedevice) FMBADEPSF} def
	/setshared {(setshared) FMBADEPSF} def
	/startjob {(startjob) FMBADEPSF} def
	/lettertray {(lettertray) FMBADEPSF} def
	/letter {(letter) FMBADEPSF} def
	/lettersmall {(lettersmall) FMBADEPSF} def
	/11x17tray {(11x17tray) FMBADEPSF} def
	/11x17 {(11x17) FMBADEPSF} def
	/ledgertray {(ledgertray) FMBADEPSF} def
	/ledger {(ledger) FMBADEPSF} def
	/legaltray {(legaltray) FMBADEPSF} def
	/legal {(legal) FMBADEPSF} def
	/statementtray {(statementtray) FMBADEPSF} def
	/statement {(statement) FMBADEPSF} def
	/executivetray {(executivetray) FMBADEPSF} def
	/executive {(executive) FMBADEPSF} def
	/a3tray {(a3tray) FMBADEPSF} def
	/a3 {(a3) FMBADEPSF} def
	/a4tray {(a4tray) FMBADEPSF} def
	/a4 {(a4) FMBADEPSF} def
	/a4small {(a4small) FMBADEPSF} def
	/b4tray {(b4tray) FMBADEPSF} def
	/b4 {(b4) FMBADEPSF} def
	/b5tray {(b5tray) FMBADEPSF} def
	/b5 {(b5) FMBADEPSF} def
	FMNORMALIZEGRAPHICS 
	[/fy /fx /fh /fw /ury /urx /lly /llx] {exch def} forall 
	fx fw 2 div add fy fh 2 div add  translate
	rotate
	fw 2 div neg fh 2 div neg translate
	fw urx llx sub div fh ury lly sub div scale 
	llx neg lly neg translate 
	/FMdicttop countdictstack 1 add def 
	/FMoptop count def 
	} bind def
/FMENDEPSF {
	count -1 FMoptop {pop pop} for 
	countdictstack -1 FMdicttop {pop end} for 
	FMEPSF restore
	FrameDict begin 
	} bind def
FrameDict begin 
/setmanualfeed {
%%BeginFeature *ManualFeed True
	 statusdict /manualfeed true put
%%EndFeature
	} bind def
/max {2 copy lt {exch} if pop} bind def
/min {2 copy gt {exch} if pop} bind def
/inch {72 mul} def
/pagedimen { 
	paperheight sub abs 16 lt exch 
	paperwidth sub abs 16 lt and
	{/papername exch def} {pop} ifelse
	} bind def
/setpapername { 
	/papersizedict 14 dict def 
	papersizedict begin
	/papername /unknown def 
		/Letter 8.5 inch 11.0 inch pagedimen
		/LetterSmall 7.68 inch 10.16 inch pagedimen
		/Tabloid 11.0 inch 17.0 inch pagedimen
		/Ledger 17.0 inch 11.0 inch pagedimen
		/Legal 8.5 inch 14.0 inch pagedimen
		/Statement 5.5 inch 8.5 inch pagedimen
		/Executive 7.5 inch 10.0 inch pagedimen
		/A3 11.69 inch 16.5 inch pagedimen
		/A4 8.26 inch 11.69 inch pagedimen
		/A4Small 7.47 inch 10.85 inch pagedimen
		/B4 10.125 inch 14.33 inch pagedimen
		/B5 7.16 inch 10.125 inch pagedimen
	end
	} bind def
/papersize {
	papersizedict begin
		/Letter {lettertray letter} def
		/LetterSmall {lettertray lettersmall} def
		/Tabloid {11x17tray 11x17} def
		/Ledger {ledgertray ledger} def
		/Legal {legaltray legal} def
		/Statement {statementtray statement} def
		/Executive {executivetray executive} def
		/A3 {a3tray a3} def
		/A4 {a4tray a4} def
		/A4Small {a4tray a4small} def
		/B4 {b4tray b4} def
		/B5 {b5tray b5} def
		/unknown {unknown} def
	papersizedict dup papername known {papername} {/unknown} ifelse get
	end
	statusdict begin stopped end 
	} bind def
/manualpapersize {
	papersizedict begin
		/Letter {letter} def
		/LetterSmall {lettersmall} def
		/Tabloid {11x17} def
		/Ledger {ledger} def
		/Legal {legal} def
		/Statement {statement} def
		/Executive {executive} def
		/A3 {a3} def
		/A4 {a4} def
		/A4Small {a4small} def
		/B4 {b4} def
		/B5 {b5} def
		/unknown {unknown} def
	papersizedict dup papername known {papername} {/unknown} ifelse get
	end
	stopped 
	} bind def
/desperatepapersize {
	statusdict /setpageparams known
		{
		paperwidth paperheight 0 1 
		statusdict begin
		{setpageparams} stopped 
		end
		} {true} ifelse 
	} bind def
/papersizefailure {
	FMAllowPaperSizeMismatch not
		{
(The requested paper size is not available in any currently-installed tray)
(Edit the PS file to "FMAllowPaperSizeMismatch true" to use default tray)
		 FMFAILURE } if
	} def
/DiacriticEncoding [
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /space /exclam /quotedbl
/numbersign /dollar /percent /ampersand /quotesingle /parenleft
/parenright /asterisk /plus /comma /hyphen /period /slash /zero /one
/two /three /four /five /six /seven /eight /nine /colon /semicolon
/less /equal /greater /question /at /A /B /C /D /E /F /G /H /I /J /K
/L /M /N /O /P /Q /R /S /T /U /V /W /X /Y /Z /bracketleft /backslash
/bracketright /asciicircum /underscore /grave /a /b /c /d /e /f /g /h
/i /j /k /l /m /n /o /p /q /r /s /t /u /v /w /x /y /z /braceleft /bar
/braceright /asciitilde /.notdef /Adieresis /Aring /Ccedilla /Eacute
/Ntilde /Odieresis /Udieresis /aacute /agrave /acircumflex /adieresis
/atilde /aring /ccedilla /eacute /egrave /ecircumflex /edieresis
/iacute /igrave /icircumflex /idieresis /ntilde /oacute /ograve
/ocircumflex /odieresis /otilde /uacute /ugrave /ucircumflex
/udieresis /dagger /.notdef /cent /sterling /section /bullet
/paragraph /germandbls /registered /copyright /trademark /acute
/dieresis /.notdef /AE /Oslash /.notdef /.notdef /.notdef /.notdef
/yen /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/ordfeminine /ordmasculine /.notdef /ae /oslash /questiondown
/exclamdown /logicalnot /.notdef /florin /.notdef /.notdef
/guillemotleft /guillemotright /ellipsis /.notdef /Agrave /Atilde
/Otilde /OE /oe /endash /emdash /quotedblleft /quotedblright
/quoteleft /quoteright /.notdef /.notdef /ydieresis /Ydieresis
/fraction /currency /guilsinglleft /guilsinglright /fi /fl /daggerdbl
/periodcentered /quotesinglbase /quotedblbase /perthousand
/Acircumflex /Ecircumflex /Aacute /Edieresis /Egrave /Iacute
/Icircumflex /Idieresis /Igrave /Oacute /Ocircumflex /.notdef /Ograve
/Uacute /Ucircumflex /Ugrave /dotlessi /circumflex /tilde /macron
/breve /dotaccent /ring /cedilla /hungarumlaut /ogonek /caron
] def
/ReEncode { 
	dup 
	length 
	dict begin 
	{
	1 index /FID ne 
		{def} 
		{pop pop} ifelse 
	} forall 
	0 eq {/Encoding DiacriticEncoding def} if 
	currentdict 
	end 
	} bind def
FMPColor 
	
	{
	/BEGINBITMAPCOLOR { 
		BITMAPCOLOR} def
	/BEGINBITMAPCOLORc { 
		BITMAPCOLORc} def
	/BEGINBITMAPTRUECOLOR { 
		BITMAPTRUECOLOR } def
	/BEGINBITMAPTRUECOLORc { 
		BITMAPTRUECOLORc } def
	/BEGINBITMAPCMYK { 
		BITMAPCMYK } def
	/BEGINBITMAPCMYKc { 
		BITMAPCMYKc } def
	}
	
	{
	/BEGINBITMAPCOLOR { 
		BITMAPGRAY} def
	/BEGINBITMAPCOLORc { 
		BITMAPGRAYc} def
	/BEGINBITMAPTRUECOLOR { 
		BITMAPTRUEGRAY } def
	/BEGINBITMAPTRUECOLORc { 
		BITMAPTRUEGRAYc } def
	/BEGINBITMAPCMYK { 
		BITMAPCMYKGRAY } def
	/BEGINBITMAPCMYKc { 
		BITMAPCMYKGRAYc } def
	}
ifelse
/K { 
	FMPrintAllColorsAsBlack {
		dup 1 eq 2 index 1 eq and 3 index 1 eq and not
			{7 {pop} repeat 0 0 0 1 0 0 0} if
	} if 
	FrameCurColors astore 
	pop combineColor
} bind def
/graymode true def
fMLevel1 {
	/fmGetFlip {
		fMatrix2 exch get mul 0 lt { -1 } { 1 } ifelse
	} FmBD
} if
/setPatternMode {
	fMLevel1 {
		2 index patScreenDict exch known {
			pop pop
			patScreenDict exch get aload pop 
			freq 								
			mul									
			5 2 roll							
			fMatrix2 currentmatrix 1 get 0 ne {
				3 -1 roll 90 add 3 1 roll 		
				sflipx 1 fmGetFlip sflipy 2 fmGetFlip neg mul
			} {  								
				sflipx 0 fmGetFlip sflipy 3 fmGetFlip mul 
			} ifelse
			0 lt {exch pop} {pop} ifelse 		
			fMNegative { 
				{neg} fmConcatProcs 			
			} if
			bind
			
			
			
			systemdict /setscreen get exec		
			/FrameCurGray exch def
		} {
			/bwidth  exch def
			/bpside  exch def
			/bstring exch def
			/onbits 0 def  /offbits 0 def
			freq sangle landscape {90 add} if 
				{/ypoint exch def
				 /xpoint exch def
				 /xindex xpoint 1 add 2 div bpside mul cvi def
				 /yindex ypoint 1 add 2 div bpside mul cvi def
				 bstring yindex bwidth mul xindex 8 idiv add get
				 1 7 xindex 8 mod sub bitshift and 0 ne fMNegative {not} if
				 {/onbits  onbits  1 add def 1}
				 {/offbits offbits 1 add def 0}
				 ifelse
				}
				setscreen
			offbits offbits onbits add div fMNegative {1.0 exch sub} if
			/FrameCurGray exch def
		} ifelse
	} { 
		pop pop
		dup patCache exch known {
			patCache exch get
		} { 
			dup
			patDict /bstring 3 -1 roll put
			patDict 
			9 PatFreq screenIndex get div dup matrix scale
			makepattern
			dup 
			patCache 4 -1 roll 3 -1 roll put
		} ifelse
		/FrameCurGray 0 def
		/FrameCurPat exch def
	} ifelse
	/graymode false def
	combineColor
} bind def
/setGrayScaleMode {
	graymode not {
		/graymode true def
		fMLevel1 {
			setCurrentScreen
		} if
	} if
	/FrameCurGray exch def
	combineColor
} bind def
/normalize {
	transform round exch round exch itransform
	} bind def
/dnormalize {
	dtransform round exch round exch idtransform
	} bind def
/lnormalize { 
	0 dtransform exch cvi 2 idiv 2 mul 1 add exch idtransform pop
	} bind def
/H { 
	lnormalize setlinewidth
	} bind def
/Z {
	setlinecap
	} bind def
	
/PFill {
	graymode fMLevel1 or not {
		gsave 1 setgray eofill grestore
	} if
} bind def
/PStroke {
	graymode fMLevel1 or not {
		gsave 1 setgray stroke grestore
	} if
	stroke
} bind def
/X { 
	fillvals exch get
	dup type /stringtype eq
	{8 1 setPatternMode} 
	{setGrayScaleMode}
	ifelse
	} bind def
/V { 
	PFill gsave eofill grestore
	} bind def
/Vclip {
	clip
	} bind def
/Vstrk {
	currentlinewidth exch setlinewidth PStroke setlinewidth
	} bind def
/N { 
	PStroke
	} bind def
/Nclip {
	strokepath clip newpath
	} bind def
/Nstrk {
	currentlinewidth exch setlinewidth PStroke setlinewidth
	} bind def
/M {newpath moveto} bind def
/E {lineto} bind def
/D {curveto} bind def
/O {closepath} bind def
/L { 
 	/n exch def
	newpath
	normalize
	moveto 
	2 1 n {pop normalize lineto} for
	} bind def
/Y { 
	L 
	closepath
	} bind def
/R { 
	/y2 exch def
	/x2 exch def
	/y1 exch def
	/x1 exch def
	x1 y1
	x2 y1
	x2 y2
	x1 y2
	4 Y 
	} bind def
/rarc 
	{rad 
	 arcto
	} bind def
/RR { 
	/rad exch def
	normalize
	/y2 exch def
	/x2 exch def
	normalize
	/y1 exch def
	/x1 exch def
	mark
	newpath
	{
	x1 y1 rad add moveto
	x1 y2 x2 y2 rarc
	x2 y2 x2 y1 rarc
	x2 y1 x1 y1 rarc
	x1 y1 x1 y2 rarc
	closepath
	} stopped {x1 y1 x2 y2 R} if 
	cleartomark
	} bind def
/RRR { 
	/rad exch def
	normalize /y4 exch def /x4 exch def
	normalize /y3 exch def /x3 exch def
	normalize /y2 exch def /x2 exch def
	normalize /y1 exch def /x1 exch def
	newpath
	normalize moveto 
	mark
	{
	x2 y2 x3 y3 rarc
	x3 y3 x4 y4 rarc
	x4 y4 x1 y1 rarc
	x1 y1 x2 y2 rarc
	closepath
	} stopped
	 {x1 y1 x2 y2 x3 y3 x4 y4 newpath moveto lineto lineto lineto closepath} if
	cleartomark
	} bind def
/C { 
	grestore
	gsave
	R 
	clip
	setCurrentScreen
} bind def
/CP { 
	grestore
	gsave
	Y 
	clip
	setCurrentScreen
} bind def
/F { 
	FMfonts exch get
	FMpointsize scalefont
	setfont
	} bind def
/Q { 
	/FMpointsize exch def
	F 
	} bind def
/T { 
	moveto show
	} bind def
/RF { 
	rotate
	0 ne {-1 1 scale} if
	} bind def
/TF { 
	gsave
	moveto 
	RF
	show
	grestore
	} bind def
/P { 
	moveto
	0 32 3 2 roll widthshow
	} bind def
/PF { 
	gsave
	moveto 
	RF
	0 32 3 2 roll widthshow
	grestore
	} bind def
/S { 
	moveto
	0 exch ashow
	} bind def
/SF { 
	gsave
	moveto
	RF
	0 exch ashow
	grestore
	} bind def
/B { 
	moveto
	0 32 4 2 roll 0 exch awidthshow
	} bind def
/BF { 
	gsave
	moveto
	RF
	0 32 4 2 roll 0 exch awidthshow
	grestore
	} bind def
/G { 
	gsave
	newpath
	normalize translate 0.0 0.0 moveto 
	dnormalize scale 
	0.0 0.0 1.0 5 3 roll arc 
	closepath 
	PFill fill
	grestore
	} bind def
/Gstrk {
	savematrix
    newpath
    2 index 2 div add exch 3 index 2 div sub exch 
    normalize 2 index 2 div sub exch 3 index 2 div add exch 
    translate
    scale 
    0.0 0.0 1.0 5 3 roll arc 
    restorematrix
    currentlinewidth exch setlinewidth PStroke setlinewidth
    } bind def
/Gclip { 
	newpath
	savematrix
	normalize translate 0.0 0.0 moveto 
	dnormalize scale 
	0.0 0.0 1.0 5 3 roll arc 
	closepath 
	clip newpath
	restorematrix
	} bind def
/GG { 
	gsave
	newpath
	normalize translate 0.0 0.0 moveto 
	rotate 
	dnormalize scale 
	0.0 0.0 1.0 5 3 roll arc 
	closepath
	PFill
	fill
	grestore
	} bind def
/GGclip { 
	savematrix
	newpath
    normalize translate 0.0 0.0 moveto 
    rotate 
    dnormalize scale 
    0.0 0.0 1.0 5 3 roll arc 
    closepath
	clip newpath
	restorematrix
	} bind def
/GGstrk { 
	savematrix
    newpath
    normalize translate 0.0 0.0 moveto 
    rotate 
    dnormalize scale 
    0.0 0.0 1.0 5 3 roll arc 
    closepath 
	restorematrix
    currentlinewidth exch setlinewidth PStroke setlinewidth
	} bind def
/A { 
	gsave
	savematrix
	newpath
	2 index 2 div add exch 3 index 2 div sub exch 
	normalize 2 index 2 div sub exch 3 index 2 div add exch 
	translate 
	scale 
	0.0 0.0 1.0 5 3 roll arc 
	restorematrix
	PStroke
	grestore
	} bind def
/Aclip {
	newpath
	savematrix
	normalize translate 0.0 0.0 moveto 
	dnormalize scale 
	0.0 0.0 1.0 5 3 roll arc 
	closepath 
	strokepath clip newpath
	restorematrix
} bind def
/Astrk {
	Gstrk
} bind def
/AA { 
	gsave
	savematrix
	newpath
	
	3 index 2 div add exch 4 index 2 div sub exch 
	
	normalize 3 index 2 div sub exch 4 index 2 div add exch
	translate 
	rotate 
	scale 
	0.0 0.0 1.0 5 3 roll arc 
	restorematrix
	PStroke
	grestore
	} bind def
/AAclip {
	savematrix
	newpath
    normalize translate 0.0 0.0 moveto 
    rotate 
    dnormalize scale 
    0.0 0.0 1.0 5 3 roll arc 
    closepath
	strokepath clip newpath
	restorematrix
} bind def
/AAstrk {
	GGstrk
} bind def
/BEGINPRINTCODE { 
	/FMdicttop countdictstack 1 add def 
	/FMoptop count 7 sub def 
	/FMsaveobject save def
	userdict begin 
	/showpage {} def 
	FMNORMALIZEGRAPHICS 
	3 index neg 3 index neg translate
	} bind def
/ENDPRINTCODE {
	count -1 FMoptop {pop pop} for 
	countdictstack -1 FMdicttop {pop end} for 
	FMsaveobject restore 
	} bind def
/gn { 
	0 
	{	46 mul 
		cf read pop 
		32 sub 
		dup 46 lt {exit} if 
		46 sub add 
		} loop
	add 
	} bind def
/cfs { 
	/str sl string def 
	0 1 sl 1 sub {str exch val put} for 
	str def 
	} bind def
/ic [ 
	0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0223
	0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0223
	0
	{0 hx} {1 hx} {2 hx} {3 hx} {4 hx} {5 hx} {6 hx} {7 hx} {8 hx} {9 hx}
	{10 hx} {11 hx} {12 hx} {13 hx} {14 hx} {15 hx} {16 hx} {17 hx} {18 hx}
	{19 hx} {gn hx} {0} {1} {2} {3} {4} {5} {6} {7} {8} {9} {10} {11} {12}
	{13} {14} {15} {16} {17} {18} {19} {gn} {0 wh} {1 wh} {2 wh} {3 wh}
	{4 wh} {5 wh} {6 wh} {7 wh} {8 wh} {9 wh} {10 wh} {11 wh} {12 wh}
	{13 wh} {14 wh} {gn wh} {0 bl} {1 bl} {2 bl} {3 bl} {4 bl} {5 bl} {6 bl}
	{7 bl} {8 bl} {9 bl} {10 bl} {11 bl} {12 bl} {13 bl} {14 bl} {gn bl}
	{0 fl} {1 fl} {2 fl} {3 fl} {4 fl} {5 fl} {6 fl} {7 fl} {8 fl} {9 fl}
	{10 fl} {11 fl} {12 fl} {13 fl} {14 fl} {gn fl}
	] def
/ms { 
	/sl exch def 
	/val 255 def 
	/ws cfs 
	/im cfs 
	/val 0 def 
	/bs cfs 
	/cs cfs 
	} bind def
400 ms 
/ip { 
	is 
	0 
	cf cs readline pop 
	{	ic exch get exec 
		add 
		} forall 
	pop 
	
	} bind def
/rip { 
	   
	  
	  bis ris copy pop 
      is
      0
      cf cs readline pop 
      {       ic exch get exec 
              add 
              } forall 
	  pop pop 
	  ris gis copy pop 
	  dup is exch 
	  
      cf cs readline pop 
      {       ic exch get exec 
              add 
              } forall 
	  pop pop
	  gis bis copy pop 
	  dup add is exch 
	  
      cf cs readline pop 
      {       ic exch get exec 
              add 
              } forall 
      pop 
      
      } bind def
/rip4 { 
	   
	  
	  kis cis copy pop 
      is
      0
      cf cs readline pop 
      {       ic exch get exec 
              add 
              } forall 
	  pop pop 
	  cis mis copy pop 
	  dup is exch 
	  
      cf cs readline pop 
      {       ic exch get exec 
              add 
              } forall 
	  pop pop
	  mis yis copy pop 
	  dup dup add is exch 
	  
      cf cs readline pop 
      {       ic exch get exec 
              add 
              } forall 
	  pop pop
	  yis kis copy pop 
	  3 mul is exch 
	  
      cf cs readline pop 
      {       ic exch get exec 
              add 
              } forall 
      pop 
      
      } bind def
/wh { 
	/len exch def 
	/pos exch def 
	ws 0 len getinterval im pos len getinterval copy pop
	pos len 
	} bind def
/bl { 
	/len exch def 
	/pos exch def 
	bs 0 len getinterval im pos len getinterval copy pop
	pos len 
	} bind def
/s1 1 string def
/fl { 
	/len exch def 
	/pos exch def 
	/val cf s1 readhexstring pop 0 get def
	pos 1 pos len add 1 sub {im exch val put} for
	pos len 
	} bind def
/hx { 
	3 copy getinterval 
	cf exch readhexstring pop pop 
	} bind def
/wbytes { 
      dup dup
      8 gt { pop 8 idiv mul }
      { 8 eq {pop} {1 eq {7 add 8 idiv} {3 add 4 idiv} ifelse} ifelse } ifelse
	} bind def
/BEGINBITMAPBWc { 
	1 {} COMMONBITMAPc
	} bind def
/BEGINBITMAPGRAYc { 
	8 {} COMMONBITMAPc
	} bind def
/BEGINBITMAP2BITc { 
	2 {} COMMONBITMAPc
	} bind def
/COMMONBITMAPc { 
		 
	/cvtProc exch def
	/depth exch def
	gsave
	
	3 index 2 div add exch	
	4 index 2 div add exch	
	translate		
	rotate			
	1 index 2 div neg	
	1 index 2 div neg	
	translate		
	scale			
	/height exch def /width exch def
	/lb width depth wbytes def 
	sl lb lt {lb ms} if 
	/bitmapsave save def 
	cvtProc                
	/is im 0 lb getinterval def 
	ws 0 lb getinterval is copy pop 
	/cf currentfile def 
	width height depth [width 0 0 height neg 0 height] 
	{ip} image 
	bitmapsave restore 
	grestore
	} bind def
/BEGINBITMAPBW { 
	1 {} COMMONBITMAP
	} bind def
/BEGINBITMAPGRAY { 
	8 {} COMMONBITMAP
	} bind def
/BEGINBITMAP2BIT { 
	2 {} COMMONBITMAP
	} bind def
/COMMONBITMAP { 
	/cvtProc exch def
	/depth exch def
	gsave
	
	3 index 2 div add exch	
	4 index 2 div add exch	
	translate		
	rotate			
	1 index 2 div neg	
	1 index 2 div neg	
	translate		
	scale			
	/height exch def /width exch def
	/bitmapsave save def 
	cvtProc              
	/is width depth wbytes string def
	/cf currentfile def 
	width height depth [width 0 0 height neg 0 height] 
	{cf is readhexstring pop} image
	bitmapsave restore 
	grestore
	} bind def
/ngrayt 256 array def
/nredt 256 array def
/nbluet 256 array def
/ngreent 256 array def
fMLevel1 {
/colorsetup {
	currentcolortransfer
	/gryt exch def
	/blut exch def
	/grnt exch def
	/redt exch def
	0 1 255 {
		/indx exch def
		/cynu 1 red indx get 255 div sub def
		/magu 1 green indx get 255 div sub def
		/yelu 1 blue indx get 255 div sub def
		/kk cynu magu min yelu min def
		/u kk currentundercolorremoval exec def
%		/u 0 def
		nredt indx 1 0 cynu u sub max sub redt exec put
		ngreent indx 1 0 magu u sub max sub grnt exec put
		nbluet indx 1 0 yelu u sub max sub blut exec put
		ngrayt indx 1 kk currentblackgeneration exec sub gryt exec put
	} for
	{255 mul cvi nredt exch get}
	{255 mul cvi ngreent exch get}
	{255 mul cvi nbluet exch get}
	{255 mul cvi ngrayt exch get}
	setcolortransfer
	{pop 0} setundercolorremoval
	{} setblackgeneration
	} bind def
}
{
/colorSetup2 {
	[ /Indexed /DeviceRGB 255 
		{dup red exch get 255 div 
		 exch dup green exch get 255 div 
		 exch blue exch get 255 div}
	] setcolorspace
} bind def
} ifelse
/fakecolorsetup {
	/tran 256 string def
	0 1 255 {/indx exch def 
		tran indx
		red indx get 77 mul
		green indx get 151 mul
		blue indx get 28 mul
		add add 256 idiv put} for
	currenttransfer
	{255 mul cvi tran exch get 255.0 div}
	exch fmConcatProcs settransfer
} bind def
/BITMAPCOLOR { 
	/depth 8 def
	gsave
	
	3 index 2 div add exch	
	4 index 2 div add exch	
	translate		
	rotate			
	1 index 2 div neg	
	1 index 2 div neg	
	translate		
	scale			
	/height exch def /width exch def
	/bitmapsave save def
	fMLevel1 {	
		colorsetup
		/is width depth wbytes string def
		/cf currentfile def 
		width height depth [width 0 0 height neg 0 height] 
		{cf is readhexstring pop} {is} {is} true 3 colorimage 
	} {
		colorSetup2
		/is width depth wbytes string def
		/cf currentfile def 
		7 dict dup begin
			/ImageType 1 def
			/Width width def
			/Height height def
			/ImageMatrix [width 0 0 height neg 0 height] def
			/DataSource {cf is readhexstring pop} bind def
			/BitsPerComponent depth def
			/Decode [0 255] def
		end image	
	} ifelse
	bitmapsave restore 
	grestore
	} bind def
/BITMAPCOLORc { 
	/depth 8 def
	gsave
	
	3 index 2 div add exch	
	4 index 2 div add exch	
	translate		
	rotate			
	1 index 2 div neg	
	1 index 2 div neg	
	translate		
	scale			
	/height exch def /width exch def
	/lb width depth wbytes def 
	sl lb lt {lb ms} if 
	/bitmapsave save def 
	fMLevel1 {	
		colorsetup
		/is im 0 lb getinterval def 
		ws 0 lb getinterval is copy pop 
		/cf currentfile def 
		width height depth [width 0 0 height neg 0 height] 
		{ip} {is} {is} true 3 colorimage
	} {
		colorSetup2
		/is im 0 lb getinterval def 
		ws 0 lb getinterval is copy pop 
		/cf currentfile def 
		7 dict dup begin
			/ImageType 1 def
			/Width width def
			/Height height def
			/ImageMatrix [width 0 0 height neg 0 height] def
			/DataSource {ip} bind def
			/BitsPerComponent depth def
			/Decode [0 255] def
		end image	
	} ifelse
	bitmapsave restore 
	grestore
	} bind def
/BITMAPTRUECOLORc { 
	/depth 24 def
        gsave
 	
	3 index 2 div add exch	
	4 index 2 div add exch	
	translate		
	rotate			
	1 index 2 div neg	
	1 index 2 div neg	
	translate		
	scale			
	/height exch def /width exch def
	/lb width depth wbytes def 
	sl lb lt {lb ms} if 
	/bitmapsave save def 
        
	/is im 0 lb getinterval def	
	/ris im 0 width getinterval def	
	/gis im width width getinterval def	
	/bis im width 2 mul width getinterval def 
        
	ws 0 lb getinterval is copy pop 
	/cf currentfile def 
	width height 8 [width 0 0 height neg 0 height] 
	{width rip pop ris} {gis} {bis} true 3 colorimage
	bitmapsave restore 
	grestore
	} bind def
/BITMAPCMYKc { 
	/depth 32 def
        gsave
 	
	3 index 2 div add exch	
	4 index 2 div add exch	
	translate		
	rotate			
	1 index 2 div neg	
	1 index 2 div neg	
	translate		
	scale			
	/height exch def /width exch def
	/lb width depth wbytes def 
	sl lb lt {lb ms} if 
	/bitmapsave save def 
        
	/is im 0 lb getinterval def	
	/cis im 0 width getinterval def	
	/mis im width width getinterval def	
	/yis im width 2 mul width getinterval def 
	/kis im width 3 mul width getinterval def 
        
	ws 0 lb getinterval is copy pop 
	/cf currentfile def 
	width height 8 [width 0 0 height neg 0 height] 
	{width rip4 pop cis} {mis} {yis} {kis} true 4 colorimage
	bitmapsave restore 
	grestore
	} bind def
/BITMAPTRUECOLOR { 
        gsave
		
		3 index 2 div add exch	
		4 index 2 div add exch	
		translate		
		rotate			
		1 index 2 div neg	
		1 index 2 div neg	
		translate		
		scale			
		/height exch def /width exch def
        /bitmapsave save def 
        /is width string def
        /gis width string def
        /bis width string def
        /cf currentfile def 
        width height 8 [width 0 0 height neg 0 height] 
        { cf is readhexstring pop } 
        { cf gis readhexstring pop } 
        { cf bis readhexstring pop } 
        true 3 colorimage 
        bitmapsave restore 
        grestore
        } bind def
/BITMAPCMYK { 
        gsave
		
		3 index 2 div add exch	
		4 index 2 div add exch	
		translate		
		rotate			
		1 index 2 div neg	
		1 index 2 div neg	
		translate		
		scale			
		/height exch def /width exch def
        /bitmapsave save def 
        /is width string def
        /mis width string def
        /yis width string def
        /kis width string def
        /cf currentfile def 
        width height 8 [width 0 0 height neg 0 height] 
        { cf is readhexstring pop } 
        { cf mis readhexstring pop } 
        { cf yis readhexstring pop } 
        { cf kis readhexstring pop } 
        true 4 colorimage 
        bitmapsave restore 
        grestore
        } bind def
/BITMAPTRUEGRAYc { 
	/depth 24 def
        gsave
	
	3 index 2 div add exch	
	4 index 2 div add exch	
	translate		
	rotate			
	1 index 2 div neg	
	1 index 2 div neg	
	translate		
	scale			
	/height exch def /width exch def
	/lb width depth wbytes def 
	sl lb lt {lb ms} if 
        /bitmapsave save def 
        
	/is im 0 lb getinterval def	
	/ris im 0 width getinterval def	
	/gis im width width getinterval def	
	/bis im width 2 mul width getinterval def 
        ws 0 lb getinterval is copy pop 
        /cf currentfile def 
        width height 8 [width 0 0 height neg 0 height] 
        {width rip pop ris gis bis width gray} image
        bitmapsave restore 
        grestore
        } bind def
/BITMAPCMYKGRAYc { 
	/depth 32 def
        gsave
	
	3 index 2 div add exch	
	4 index 2 div add exch	
	translate		
	rotate			
	1 index 2 div neg	
	1 index 2 div neg	
	translate		
	scale			
	/height exch def /width exch def
	/lb width depth wbytes def 
	sl lb lt {lb ms} if 
        /bitmapsave save def 
        
	/is im 0 lb getinterval def	
	/cis im 0 width getinterval def	
	/mis im width width getinterval def	
	/yis im width 2 mul width getinterval def 
	/kis im width 3 mul width getinterval def 
        ws 0 lb getinterval is copy pop 
        /cf currentfile def 
        width height 8 [width 0 0 height neg 0 height] 
        {width rip pop cis mis yis kis width cgray} image
        bitmapsave restore 
        grestore
        } bind def
/cgray { 
        /ww exch def
        /k exch def
        /y exch def
        /m exch def
        /c exch def
        0 1 ww 1 sub { /i exch def c i get m i get y i get k i get CMYKtoRGB
				.144 mul 3 1 roll .587 mul 3 1 roll .299 mul add add
				c i 3 -1 roll floor cvi put } for
        c
 		} bind def
/gray { 
        /ww exch def
        /b exch def
        /g exch def
        /r exch def
        0 1 ww 1 sub { /i exch def r i get .299 mul g i get .587 mul
			b i get .114 mul add add r i 3 -1 roll floor cvi put } for
        r
        } bind def
/BITMAPTRUEGRAY { 
        gsave
		
		3 index 2 div add exch	
		4 index 2 div add exch	
		translate		
		rotate			
		1 index 2 div neg	
		1 index 2 div neg	
		translate		
		scale			
		/height exch def /width exch def
        /bitmapsave save def 
        /is width string def
        /gis width string def
        /bis width string def
        /cf currentfile def 
        width height 8 [width 0 0 height neg 0 height] 
        { cf is readhexstring pop 
          cf gis readhexstring pop 
          cf bis readhexstring pop width gray}  image
        bitmapsave restore 
        grestore
        } bind def
/BITMAPCMYKGRAY { 
        gsave
		
		3 index 2 div add exch	
		4 index 2 div add exch	
		translate		
		rotate			
		1 index 2 div neg	
		1 index 2 div neg	
		translate		
		scale			
		/height exch def /width exch def
        /bitmapsave save def 
        /is width string def
        /yis width string def
        /mis width string def
        /kis width string def
        /cf currentfile def 
        width height 8 [width 0 0 height neg 0 height] 
        { cf is readhexstring pop 
          cf mis readhexstring pop 
          cf yis readhexstring pop 
          cf kis readhexstring pop width cgray}  image
        bitmapsave restore 
        grestore
        } bind def
/BITMAPGRAY { 
	8 {fakecolorsetup} COMMONBITMAP
	} bind def
/BITMAPGRAYc { 
	8 {fakecolorsetup} COMMONBITMAPc
	} bind def
/ENDBITMAP {
	} bind def
end 
	/ALDmatrix matrix def ALDmatrix currentmatrix pop
/StartALD {
	/ALDsave save def
	 savematrix
	 ALDmatrix setmatrix
	} bind def
/InALD {
	 restorematrix
	} bind def
/DoneALD {
	 ALDsave restore
	} bind def
/I { setdash } bind def
/J { [] 0 setdash } bind def
%%EndProlog
%%BeginSetup
(5.0) FMVERSION
1 1 0 0 612 792 0 1 17 FMDOCUMENT
0 0 /Helvetica-Bold FMFONTDEFINE
1 0 /Helvetica FMFONTDEFINE
2 0 /Times-Roman FMFONTDEFINE
3 1 /ZapfDingbats FMFONTDEFINE
4 0 /Times-Bold FMFONTDEFINE
5 0 /Times-Italic FMFONTDEFINE
32 FMFILLS
0 0 FMFILL
1 0.1 FMFILL
2 0.3 FMFILL
3 0.5 FMFILL
4 0.7 FMFILL
5 0.9 FMFILL
6 0.97 FMFILL
7 1 FMFILL
8 <0f1e3c78f0e1c387> FMFILL
9 <0f87c3e1f0783c1e> FMFILL
10 <cccccccccccccccc> FMFILL
11 <ffff0000ffff0000> FMFILL
12 <8142241818244281> FMFILL
13 <03060c183060c081> FMFILL
14 <8040201008040201> FMFILL
16 1 FMFILL
17 0.9 FMFILL
18 0.7 FMFILL
19 0.5 FMFILL
20 0.3 FMFILL
21 0.1 FMFILL
22 0.03 FMFILL
23 0 FMFILL
24 <f0e1c3870f1e3c78> FMFILL
25 <f0783c1e0f87c3e1> FMFILL
26 <3333333333333333> FMFILL
27 <0000ffff0000ffff> FMFILL
28 <7ebddbe7e7dbbd7e> FMFILL
29 <fcf9f3e7cf9f3f7e> FMFILL
30 <7fbfdfeff7fbfdfe> FMFILL
%%EndSetup
%%Page: "1" 1
%%BeginPaperSize: Letter
%%EndPaperSize
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
J
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
72 750.02 558 750.02 2 L
7 X
0 0 0 1 0 0 0 K
V
2 H
0 Z
0 X
N
72 531 558 531 2 L
7 X
V
2 Z
0 X
N
72 74.02 558 74.02 2 L
7 X
V
0.25 H
0 X
N
133 55.01 539 66.96 R
7 X
V
0 9 Q
0 X
(EXPRESS User Gr) 241 60.96 T
(oup: October 1995) 318.85 60.96 T
(1) 553 60.96 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
72 540 558 738 R
7 X
V
1 24 Q
0 X
-0.24 (Design of a C++) 207 722 S
-0.24 (Softw) 207 692 S
-0.24 (are Libr) 265.46 692 S
-0.24 (ar) 344.67 692 S
-0.24 (y f) 366.24 692 S
-0.24 (or) 390.15 692 S
-0.24 (Implementing) 207 662 S
-0.24 (EXPRESS: The NIST) 207 632 S
-0.24 (STEP Class Libr) 207 602 S
-0.24 (ar) 379.2 602 S
-0.24 (y) 400.78 602 S
0 12 Q
(Da) 207 580 T
(vid A. Sauder - sauder) 222.16 580 T
(d@cme) 348.62 580 T
(.nist.go) 391.91 580 T
(v) 434.34 580 T
(K. C. Morris - kc@nist.go) 207 565 T
(v) 349.15 565 T
72 87.98 558 522 R
7 X
V
72 506.98 558 510 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
207 508.49 558 508.49 2 L
0.25 H
2 Z
0 X
0 0 0 1 0 0 0 K
N
72 508.49 198 508.49 2 L
0 Z
N
0 0 612 792 C
0 12 Q
0 X
0 0 0 1 0 0 0 K
(1) 191.33 514 T
(Abstract) 207 514 T
2 10 Q
(The NIST STEP Class Library is a C++ softw) 207 490.31 T
(are toolkit designed to pro) 390.95 490.31 T
(vide softw) 495.79 490.31 T
(are) 537.63 490.31 T
(\322b) 207 478.31 T
(uilding blocks\323 for de) 216.24 478.31 T
(v) 303.48 478.31 T
(eloping STEP softw) 308.33 478.31 T
(are applications. It has e) 388.79 478.31 T
(v) 485.46 478.31 T
(olv) 490.26 478.31 T
(ed o) 502.89 478.31 T
(v) 519.68 478.31 T
(er past) 524.53 478.31 T
(years along with ISO 10303-23 Product Data Representation and Exchange: C++) 207 466.31 T
(Programming Language Binding to the Standard Data Access Interf) 207 454.31 T
(ace \050SD) 478.52 454.31 T
(AI\051 Speci\336-) 510.05 454.31 T
(cation. Experience g) 207 442.31 T
(ained in implementing SCL has been important for pro) 288.87 442.31 T
(viding feed-) 508.15 442.31 T
(back into the C++ binding and SD) 207 430.31 T
(AI. This paper presents basic data structures used in) 343.99 430.31 T
(the SCL to implement an EXPRESS data dictionary and to instantiate instances of enti-) 207 418.31 T
(ties. Design decisions with respect to EXPRESS inheritance mechanisms which are) 207 406.31 T
(dif) 207 394.31 T
(\336cult to implement in C++ are discussed. These include multiple inheritance and) 217.86 394.31 T
(comple) 207 382.31 T
(x inheritance via AND and ANDOR constructs in EXPRESS. Design decisions) 236.29 382.31 T
-0.16 (are discussed that allo) 207 370.31 P
-0.16 (w support of an early binding to an EXPRESS schema along with) 294.32 370.31 P
(late binding style data access. Finally) 207 358.31 T
(, implementation issues that ha) 355.78 358.31 T
(v) 479.19 358.31 T
(e been o) 484.04 358.31 T
(v) 517.21 358.31 T
(ercome) 522.06 358.31 T
(related to implementing EXPRESS aggre) 207 346.31 T
(g) 372.4 346.31 T
(ates using C++ templates are discussed.) 377.35 346.31 T
72 302.95 558 305.98 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
207 304.46 558 304.46 2 L
0.25 H
2 Z
0 X
0 0 0 1 0 0 0 K
N
72 304.46 198 304.46 2 L
0 Z
N
0 0 612 792 C
0 12 Q
0 X
0 0 0 1 0 0 0 K
(2) 191.33 309.98 T
(Intr) 207 309.98 T
(oduction) 226.09 309.98 T
2 10 Q
-0.06 (The NIST STEP Class Library \050SCL\051 is a set of C++ class libraries designed to be used) 207 282.29 P
-0.23 (as a starting point for b) 207 270.29 P
-0.23 (uilding applications based on an EXPRESS [ISO 10303-11] data) 298.14 270.29 P
(speci\336cation) 207 258.29 T
2 8 Q
(1) 257.55 262.29 T
2 10 Q
(. The softw) 261.55 258.29 T
(are pro) 306.72 258.29 T
(vides a dictionary of EXPRESS schema information) 334.61 258.29 T
(and functionality for representing and manipulating instances of EXPRESS objects.) 207 246.29 T
(SCL w) 207 228.29 T
(as de) 234.96 228.29 T
(v) 254.98 228.29 T
(eloped with se) 259.83 228.29 T
(v) 317.35 228.29 T
(eral purposes in mind. Most notably it has been useful for) 322.2 228.29 T
(v) 207 216.29 T
(alidating emer) 211.75 216.29 T
(ging concepts for STEP implementation methods and for de) 269.06 216.29 T
(v) 508.79 216.29 T
(eloping) 513.64 216.29 T
(softw) 207 204.29 T
(are for STEP-based applications. De) 229.12 204.29 T
(v) 374.67 204.29 T
(elopers of SCL ha) 379.52 204.29 T
(v) 451.81 204.29 T
(e iterated through the) 456.66 204.29 T
-0.25 (follo) 207 192.29 P
-0.25 (wing acti) 225.64 192.29 P
-0.25 (vities: STEP standards de) 262.08 192.29 P
-0.25 (v) 363.6 192.29 P
-0.25 (elopment, de) 368.45 192.29 P
-0.25 (v) 419.62 192.29 P
-0.25 (elopment of SCL based on STEP) 424.47 192.29 P
(standards, and feedback into the standard as a result of implementation e) 207 180.29 T
(xperience.) 497.35 180.29 T
(P) 207 168.29 T
(articular attention has been de) 212.41 168.29 T
(v) 332.13 168.29 T
(oted to implementing STEP P) 336.93 168.29 T
(art 21: Implementation) 456.24 168.29 T
(Methods - Clear T) 207 156.29 T
(e) 279.9 156.29 T
(xt Encoding [ISO 10303-21], and P) 284.19 156.29 T
(arts 22 [ISO 10303-22] and 23) 426.25 156.29 T
72 100.98 558 131.01 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
207 108.98 351 108.98 2 L
0.25 H
2 Z
0 X
0 0 0 1 0 0 0 K
N
0 0 612 792 C
2 9 Q
0 X
0 0 0 1 0 0 0 K
(1.  This document assumes a basic knowledge of EXPRESS and C++ [Stroustrup90].) 207 94.98 T
FMENDPAGE
%%EndPage: "1" 1
%%Page: "2" 2
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
122 55.01 528 66.96 R
7 X
0 0 0 1 0 0 0 K
V
0 9 Q
0 X
(EXPRESS User Gr) 230 60.96 T
(oup: October 1995) 307.85 60.96 T
54 750.02 540 750.02 2 L
7 X
V
2 H
0 Z
0 X
N
54 730.15 540 742.18 R
7 X
V
0 X
(Design of a Software Librar) 162 736.18 T
(y f) 279.12 736.18 T
(or Implementing EXPRESS: The NIST STEP Class Librar) 289.44 736.18 T
(y) 529.6 736.18 T
54 726.98 540 726.98 2 L
7 X
V
0.25 H
0 X
N
54 74.02 540 74.02 2 L
7 X
V
2 Z
0 X
N
(2) 54 60.96 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
54 87.98 540 686.02 R
7 X
V
2 10 Q
0 X
([ISO 10303-23] the Standard Data Access Interf) 189 679.35 T
(ace \050SD) 382.18 679.35 T
(AI\051 and associated C++) 413.71 679.35 T
(language binding. Other purposes of SCL include to:) 189 667.35 T
3 7 Q
(n) 189 649.35 T
2 10 Q
(help industry adopt STEP) 202.54 649.35 T
(,) 304.49 649.35 T
3 7 Q
(n) 189 634.35 T
2 10 Q
(help applications and tools conform to STEP) 202.54 634.35 T
(, and) 380.87 634.35 T
3 7 Q
(n) 189 619.35 T
2 10 Q
(stimulate commercial de) 202.54 619.35 T
(v) 300.61 619.35 T
(elopment of STEP) 305.46 619.35 T
(.) 378.24 619.35 T
(This paper discusses some of the more adv) 189 604.35 T
(anced features of SCL and highlights design) 360.11 604.35 T
(choices made and implementation challenges f) 189 592.35 T
(aced. The topics discussed are:) 375.81 592.35 T
3 7 Q
(n) 189 574.35 T
2 10 Q
(the softw) 202.54 574.35 T
(are en) 239.38 574.35 T
(vironment including softw) 263.13 574.35 T
(are libraries and components \050section 3\051) 369.14 574.35 T
3 7 Q
(n) 189 559.35 T
2 10 Q
(the late-bound data dictionary implementation \050section 4\051,) 202.54 559.35 T
3 7 Q
(n) 189 544.35 T
2 10 Q
(generic constructs used to instantiate entities and attrib) 202.54 544.35 T
(utes \050section 5\051,) 421.48 544.35 T
3 7 Q
(n) 189 529.35 T
2 10 Q
(schema-speci\336c constructs used to instantiate entities \050section 5\051,) 202.54 529.35 T
3 7 Q
(n) 189 514.35 T
2 10 Q
(entity instantiation implementations according to EXPRESS inheritance used) 202.54 514.35 T
(\050ONEOF/OR, AND, and multiple\051 \050section 5\051, and) 202.54 502.35 T
3 7 Q
(n) 189 487.35 T
2 10 Q
(challenges in the implementation of aggre) 202.54 487.35 T
(g) 370.42 487.35 T
(ates using C++ template \050section 6\051.) 375.37 487.35 T
-0.1 (F) 189 472.35 P
-0.1 (or more information on the SCL architecture and the o) 194.41 472.35 P
-0.1 (v) 411.35 472.35 P
-0.1 (erall design of the libraries the) 416.2 472.35 P
(reader is referred to the follo) 189 460.35 T
(wing publications:) 303.43 460.35 T
3 7 Q
(n) 189 442.35 T
2 10 Q
(Architecture for the V) 202.54 442.35 T
(alidation T) 290.01 442.35 T
(esting System Softw) 332.92 442.35 T
(are [Morris92]) 415.05 442.35 T
3 7 Q
(n) 189 427.35 T
2 10 Q
(V) 202.54 427.35 T
(alidation T) 208.65 427.35 T
(esting System: Reusable Softw) 251.56 427.35 T
(are Component Design [Morris92b]) 375.63 427.35 T
3 7 Q
(n) 189 412.35 T
2 10 Q
(Data Probe: A T) 202.54 412.35 T
(ool for EXPRESS-Based Data [Morris93]) 267.56 412.35 T
3 7 Q
(n) 189 397.35 T
2 10 Q
(Data Probe User\325) 202.54 397.35 T
(s Guide [Sauder93]) 271.41 397.35 T
54 353.99 540 357.02 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
189 355.5 540 355.5 2 L
0.25 H
2 Z
0 X
0 0 0 1 0 0 0 K
N
54 355.5 180 355.5 2 L
0 Z
N
0 0 612 792 C
0 12 Q
0 X
0 0 0 1 0 0 0 K
(3) 173.33 361.02 T
(Over) 189 361.02 T
(vie) 216.47 361.02 T
(w of the SCL Software En) 232.97 361.02 T
(vir) 377.84 361.02 T
(onment) 392.28 361.02 T
2 10 Q
(SCL consists of schema-independent softw) 189 333.33 T
(are and softw) 361.66 333.33 T
(are that is generated for a) 415.43 333.33 T
(particular schema. The schema-independent softw) 189 321.33 T
(are components:) 389.68 321.33 T
3 7 Q
(n) 189 303.33 T
2 10 Q
(generate schema-dependent softw) 202.54 303.33 T
(are components,) 337.95 303.33 T
3 7 Q
(n) 189 288.33 T
2 10 Q
(pro) 202.54 288.33 T
(vide C++ base classes for schema-dependent generated classes to inherit from,) 215.72 288.33 T
(and) 202.54 276.33 T
3 7 Q
(n) 189 261.33 T
2 10 Q
(pro) 202.54 261.33 T
(vide generic data structures to be initialized at run-time for a particular schema.) 215.72 261.33 T
(Figure 1 sho) 189 246.33 T
(ws the four components used to generate schema-speci\336c code for SCL.) 238.75 246.33 T
(These components are:) 189 234.33 T
3 7 Q
(n) 189 216.33 T
2 10 Q
(a \336le containing an EXPRESS speci\336cation,) 202.54 216.33 T
3 7 Q
(n) 189 201.33 T
2 10 Q
(the EXPRESS to C++ translator \050a.k.a. fede) 202.54 201.33 T
(x_plus\051,) 377.82 201.33 T
3 7 Q
(n) 189 186.33 T
2 10 Q
(the NIST EXPRESS T) 202.54 186.33 T
(oolkit [Libes93a], and) 292.58 186.33 T
3 7 Q
(n) 189 171.33 T
2 10 Q
(the EXPRESS Pretty Printer T) 202.54 171.33 T
(oolkit [Libes93b].) 323.97 171.33 T
(Fede) 189 156.33 T
(x_plus generates a C++ class library representation of an EXPRESS schema with) 208.29 156.33 T
(the help of the other tw) 189 144.33 T
(o toolkits sho) 281.94 144.33 T
(wn. Fede) 335.59 144.33 T
(x_plus uses the NIST EXPRESS T) 372.1 144.33 T
(oolkit) 511.03 144.33 T
(to parse the EXPRESS schema, v) 189 132.33 T
(alidate the EXPRESS syntax, perform limited) 322.63 132.33 T
-0.17 (semantic checking, and b) 189 120.33 P
-0.17 (uild an in-memory dictionary of the EXPRESS schema. Using) 289.36 120.33 P
(the EXPRESS T) 189 108.33 T
(oolkit schema dictionary and formatting routines from the EXPRESS) 254.32 108.33 T
FMENDPAGE
%%EndPage: "2" 2
%%Page: "3" 3
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
72 750.02 558 750.02 2 L
7 X
0 0 0 1 0 0 0 K
V
2 H
0 Z
0 X
N
72 730.15 558 742.18 R
7 X
V
0 9 Q
0 X
(Over) 207 736.18 T
(vie) 227.6 736.18 T
(w of the SCL Software En) 239.98 736.18 T
(vir) 348.63 736.18 T
(onment) 359.46 736.18 T
72 726.98 558 726.98 2 L
7 X
V
0.25 H
0 X
N
72 74.02 558 74.02 2 L
7 X
V
2 Z
0 X
N
133 55.01 539 66.96 R
7 X
V
0 X
(EXPRESS User Gr) 241 60.96 T
(oup: October 1995) 318.85 60.96 T
(3) 553 60.96 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
72 87.98 558 686.02 R
7 X
V
2 10 Q
0 X
(Pretty Printing T) 207 679.35 T
(oolkit, fede) 273.43 679.35 T
(x_plus then generates a C++ code representation of the) 318.83 679.35 T
(schema called the Schema library) 207 667.35 T
(.) 340.76 667.35 T
(The Schema library generated from fede) 207 649.35 T
(x_plus uses schema-independent constructs) 368.74 649.35 T
-0.05 (from the STEP Core library) 207 637.35 P
-0.05 (. The STEP Core library is part of the STEP Class Libraries) 317.24 637.35 P
(component sho) 207 625.35 T
(wn in \336gure 1. The Schema library contains routines for initializing an) 267.58 625.35 T
-0.29 (EXPRESS-schema-speci\336c dictionary at run-time using constructs from the STEP Core) 207 613.35 P
(library) 207 601.35 T
(. It also contains the schema-speci\336c classes used to instantiate EXPRESS enti-) 233.01 601.35 T
(ties and types. Using inheritance these generated entity and type classes) 207 589.35 T
2 8 Q
(2) 493.89 593.35 T
2 10 Q
( e) 497.89 589.35 T
(xtend) 504.68 589.35 T
(constructs de\336ned in the STEP Core library to be EXPRESS-schema-speci\336c.) 207 577.35 T
72 546.98 558 560.02 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
207 554.04 558 554.04 2 L
0.25 H
2 Z
0 X
0 0 0 1 0 0 0 K
N
72 554.04 198 554.04 2 L
0 Z
N
0 0 612 792 C
0 9 Q
0 X
0 0 0 1 0 0 0 K
(FIGURE  1) 72 540.98 T
2 10 Q
(Ov) 207 540.98 T
(ervie) 219.07 540.98 T
(w of Components in the SCL Softw) 238.81 540.98 T
(are En) 382.05 540.98 T
(vironment) 407.47 540.98 T
(SCL implements an early binding [ISO 10303-22 section 4.7] to an EXPRESS schema) 207 166.96 T
(with early and late bound access to instantiations of EXPRESS entities and types. An) 207 154.96 T
72 110.98 558 141.01 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
207 118.98 351 118.98 2 L
0.25 H
2 Z
0 X
0 0 0 1 0 0 0 K
N
0 0 612 792 C
2 9 Q
0 X
0 0 0 1 0 0 0 K
(2.  The terms entity class and type class will be used to refer to a class generated to represent an) 207 104.98 T
(EXPRESS-schema-specific entity and type respectively.) 207 94.98 T
30.35 191.63 599.65 537.98 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
220.21 197.98 561.52 451.32 R
6 X
0 0 0 1 0 0 0 K
V
1 H
2 Z
N
409.92 364.48 560.64 455.32 R
4 X
V
0.5 H
N
219.35 451.98 560.64 528.98 R
V
N
249.93 373.28 352.43 423.28 18 RR
7 X
V
0 X
N
260.24 385.02 342.12 411.53 R
7 X
V
2 12 Q
0 X
(fede) 260.24 403.53 T
(x_plus code) 280.71 403.53 T
(generator) 260.24 389.53 T
244.09 460.23 358.26 507.73 R
7 X
V
1 H
0 X
N
263.57 478.54 338.79 489.43 R
7 X
V
0 X
(EXPRESS \336le) 263.57 481.43 T
423.51 374.94 549.34 421.61 R
7 X
V
0 X
N
446.38 392.79 526.47 403.76 R
7 X
V
0 X
(Schema Library) 446.38 395.76 T
435.17 458.98 537.67 508.98 18 RR
7 X
V
0.5 H
0 X
N
445.48 470.73 527.36 497.24 R
7 X
V
0 X
(schema-speci\336c) 445.48 489.24 T
(application) 445.48 475.24 T
423.51 290.9 549.34 337.57 R
7 X
V
1 H
0 X
N
432.45 293.56 541.83 333.13 R
7 X
V
0 X
(STEP Class Libraries) 432.45 325.13 T
(\050STEP Core, Editor) 432.45 311.13 T
(,) 526.3 311.13 T
(Utils, User Interf) 432.45 297.13 T
(ace\051) 513.97 297.13 T
423.51 206.86 549.34 253.53 R
7 X
V
0 X
N
431.73 224.71 541.11 235.68 R
7 X
V
0 X
(C++ Standard Library) 431.73 227.68 T
90 450 1.5 1.5 270 301.18 443.42 GG
301.18 441.92 304.98 441.92 301.18 428.68 297.38 441.92 4 Y
3 H
0 Z
N
301.18 441.92 304.98 441.92 301.18 428.68 297.38 441.92 4 Y
V
301.18 458.65 301.18 443.42 2 L
2 Z
N
90 450 1.5 1.5 403 397.82 G
404.5 397.82 404.5 401.61 417.74 397.82 404.5 394.02 4 Y
0 Z
N
404.5 397.82 404.5 401.61 417.74 397.82 404.5 394.02 4 Y
V
352.35 397.82 403 397.82 2 L
2 Z
N
485.85 433.02 488.49 433.02 485.85 423.8 483.2 433.02 4 Y
1 H
0 Z
N
485.85 433.02 488.49 433.02 485.85 423.8 483.2 433.02 4 Y
V
485.85 457.82 485.85 433.52 2 L
2 Z
N
485.85 350.02 488.49 350.02 485.85 340.8 483.2 350.02 4 Y
0 Z
N
485.85 350.02 488.49 350.02 485.85 340.8 483.2 350.02 4 Y
V
485.85 374.82 485.85 350.52 2 L
2 Z
N
485.85 265.35 488.49 265.35 485.85 256.13 483.2 265.35 4 Y
0 Z
N
485.85 265.35 488.49 265.35 485.85 256.13 483.2 265.35 4 Y
V
485.85 290.15 485.85 265.85 2 L
2 Z
N
259.85 436.15 291.51 448.65 R
6 X
V
0 X
(input) 259.85 440.65 T
J
J
362.02 403.98 393.68 416.48 R
6 X
V
0 X
(output) 362.02 408.48 T
324.42 510.15 429.24 523.48 R
4 X
V
0 X
(Schema Dependent) 324.42 515.48 T
324.42 510.15 429.24 523.48 R
0.5 H
4 X
N
280.51 290.94 406.34 337.61 R
7 X
V
1 H
0 X
N
283.73 309.79 405.11 320.76 R
7 X
V
0 X
(NIST EXPRESS T) 283.73 312.76 T
(oolkit) 374.12 312.76 T
303.85 348.02 306.49 348.02 303.85 338.8 301.2 348.02 4 Y
0 Z
N
303.85 348.02 306.49 348.02 303.85 338.8 301.2 348.02 4 Y
V
303.85 372.82 303.85 348.52 2 L
2 Z
N
231.51 232.94 357.34 279.61 R
7 X
V
0 X
N
234.73 242.79 356.11 269.76 R
7 X
V
0 X
-0.1 (EXPRESS Pretty Printer) 234.73 261.76 P
(T) 234.73 247.76 T
(oolkit) 241.1 247.76 T
269.68 291.35 272.33 291.35 269.68 282.13 267.04 291.35 4 Y
0 Z
N
269.68 291.35 272.33 291.35 269.68 282.13 267.04 291.35 4 Y
V
269.68 373.32 269.68 291.85 2 L
2 Z
N
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
95.89 204.98 211.72 259.98 R
7 X
V
4 F
0 X
(indicates:) 95.89 251.98 T
2 F
(input or output) 95.89 237.98 T
(dependenc) 95.89 223.98 T
(y on library) 147.02 223.98 T
J
J
90 450 1.5 1.5 70 238.98 G
71.5 238.98 71.5 242.78 84.74 238.98 71.5 235.19 4 Y
3 H
0 Z
N
71.5 238.98 71.5 242.78 84.74 238.98 71.5 235.19 4 Y
V
39.35 238.98 70 238.98 2 L
2 Z
N
76.97 227.98 76.97 230.63 86.19 227.98 76.97 225.34 4 Y
1 H
0 Z
N
76.97 227.98 76.97 230.63 86.19 227.98 76.97 225.34 4 Y
V
37.35 227.98 76.47 227.98 2 L
2 Z
N
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
302.85 207.32 414.35 218.15 R
6 X
V
0 X
(Schema Independent) 302.85 210.15 T
302.85 207.32 414.35 218.15 R
6 X
N
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 612 792 C
FMENDPAGE
%%EndPage: "3" 3
%%Page: "4" 4
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
122 55.01 528 66.96 R
7 X
0 0 0 1 0 0 0 K
V
0 9 Q
0 X
(EXPRESS User Gr) 230 60.96 T
(oup: October 1995) 307.85 60.96 T
54 750.02 540 750.02 2 L
7 X
V
2 H
0 Z
0 X
N
54 730.15 540 742.18 R
7 X
V
0 X
(Design of a Software Librar) 162 736.18 T
(y f) 279.12 736.18 T
(or Implementing EXPRESS: The NIST STEP Class Librar) 289.44 736.18 T
(y) 529.6 736.18 T
54 726.98 540 726.98 2 L
7 X
V
0.25 H
0 X
N
54 74.02 540 74.02 2 L
7 X
V
2 Z
0 X
N
(4) 54 60.96 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
54 87.98 540 686.02 R
7 X
V
2 10 Q
0 X
(early binding to an EXPRESS schema as de\336ned by the SD) 189 679.35 T
(AI means that schema-) 426.92 679.35 T
(speci\336c constructs are de\336ned and bound to an application at compile-time rather than) 189 667.35 T
(look) 189 655.35 T
(ed up and bound to generic constructs at run-time. The Schema library de\336nes this) 206.68 655.35 T
(early binding in the form of C++ class de\336nitions representing EXPRESS-schema-) 189 643.35 T
(speci\336c types and entities. The early-bound class de\336nitions representing entities) 189 631.35 T
(include early-bound style attrib) 189 619.35 T
(ute access functions for the entities. The names of the) 314.06 619.35 T
(attrib) 189 607.35 T
(ute access member functions are based on the attrib) 209.91 607.35 T
(ute name as de\336ned in the) 415.77 607.35 T
(schema; the) 189 595.35 T
(y are bound to an application at compile-time.) 236.34 595.35 T
(SCL also pro) 189 577.35 T
(vides late-bound style access functions for attrib) 241.63 577.35 T
(utes of entity instances.) 434.73 577.35 T
-0.15 (The STEP Core library de\336nes constructs to generically access attrib) 189 565.35 P
-0.15 (ute v) 462.67 565.35 P
-0.15 (alues and enti-) 481.98 565.35 P
-0.06 (ties de\336ned in the Schema library) 189 553.35 P
-0.06 (. All entity classes inherit this generic run-time access) 322.21 553.35 P
(capability from a common supertype class. The generated entity class constructors) 189 541.35 T
(initialize these inherited constructs necessary to pro) 189 529.35 T
(vide late-bound style access. This) 395.48 529.35 T
(late-bound access capability allo) 189 517.35 T
(ws applications to be written generically so that the) 319 517.35 T
(same application code may be bound to an) 189 505.35 T
(y number of schemas.) 359.1 505.35 T
(Schema-dependent or schema-independent application code may be de) 189 487.35 T
(v) 472.29 487.35 T
(eloped using) 477.14 487.35 T
(SCL; ho) 189 475.35 T
(we) 222.37 475.35 T
(v) 233.78 475.35 T
(er) 238.63 475.35 T
(, e) 246 475.35 T
(x) 255.29 475.35 T
(ecutable applications will al) 260.14 475.35 T
(w) 371.97 475.35 T
(ays be schema-dependent. Applications) 379.09 475.35 T
(de) 189 463.35 T
(v) 198.19 463.35 T
(eloped using SCL early-bound access functions are by their nature schema depen-) 203.04 463.35 T
(dent. Schema-independent applications may be de) 189 451.35 T
(v) 389.27 451.35 T
(eloped by only using SCL late-) 394.12 451.35 T
(bound functionality) 189 439.35 T
(. Schema-independent applications may be compiled into schema-) 266.96 439.35 T
-0.31 (independent object \336les b) 189 427.35 P
-0.31 (ut must still be bound to a Schema library at link-time creating) 290.37 427.35 P
-0.39 (a schema-speci\336c e) 189 415.35 P
-0.39 (x) 265.82 415.35 P
-0.39 (ecutable. Schema-independent SCL application object code may be) 270.67 415.35 P
(link) 189 403.35 T
(ed with dif) 204.46 403.35 T
(ferent Schema Class libraries to create dif) 247.54 403.35 T
(ferent schema-dependent) 414.47 403.35 T
(e) 189 391.35 T
(x) 193.29 391.35 T
(ecutables.) 198.14 391.35 T
(The follo) 189 373.35 T
(wing summarizes the libraries included in the SCL:) 225.69 373.35 T
3 7 Q
(n) 189 355.35 T
2 10 Q
(Schema library - EXPRESS-schema-speci\336c C++ code generated by fede) 202.54 355.35 T
(x_plus.) 496.94 355.35 T
(De\336nes schema-speci\336c entity and type classes, attrib) 202.54 343.35 T
(ute speci\336c \050early bound\051) 417.58 343.35 T
(access functions, and initialization functions for an EXPRESS dictionary) 202.54 331.35 T
(. Based on) 493.81 331.35 T
(the STEP Core library) 202.54 319.35 T
3 7 Q
(n) 189 304.35 T
2 10 Q
(STEP Core library - schema-independent data structures for entities, types, and a) 202.54 304.35 T
(data dictionary) 202.54 292.35 T
(. Schema-independent code implementing reading/writing/v) 261.6 292.35 T
(alidating) 501.6 292.35 T
(functions for STEP data, and dynamic \050late bound\051 attrib) 202.54 280.35 T
(ute access functions) 429.81 280.35 T
3 7 Q
(n) 189 265.35 T
2 10 Q
(Data Editor library - code supporting a STEP-speci\336c data editor) 202.54 265.35 T
3 7 Q
(n) 189 250.35 T
2 10 Q
(Utils library - general purpose utility code) 202.54 250.35 T
3 7 Q
(n) 189 235.35 T
2 10 Q
(User Interf) 202.54 235.35 T
(ace libraries - implement a graphical STEP speci\336c data editor and) 246.03 235.35 T
(schema information bro) 202.54 223.35 T
(wsing tool based on SCL called Data Probe [Morris93,) 297.83 223.35 T
(Sauder93].) 202.54 211.35 T
54 167.99 540 171.02 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
189 169.51 540 169.51 2 L
0.25 H
2 Z
0 X
0 0 0 1 0 0 0 K
N
54 169.51 180 169.51 2 L
0 Z
N
0 0 612 792 C
0 12 Q
0 X
0 0 0 1 0 0 0 K
(4) 173.33 175.02 T
(The EXPRESS Data Dictionar) 189 175.02 T
(y) 355.16 175.02 T
2 10 Q
(SCL pro) 189 147.33 T
(vides a dictionary of EXPRESS schema information. The STEP Core library) 223.02 147.33 T
(pro) 189 135.33 T
(vides C++ container classes for creating a schema-speci\336c dictionary at run time. A) 202.18 135.33 T
(Schema library \050generated by fede) 189 123.33 T
(x_plus on a per schema basis\051 pro) 326.58 123.33 T
(vides schema-) 461.96 123.33 T
(speci\336c initialization functions for creation of an EXPRESS dictionary based on STEP) 189 111.33 T
-0.16 (Core library constructs. The dictionary contains information from the EXPRESS model) 189 99.33 P
FMENDPAGE
%%EndPage: "4" 4
%%Page: "5" 5
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
72 750.02 558 750.02 2 L
7 X
0 0 0 1 0 0 0 K
V
2 H
0 Z
0 X
N
72 730.15 558 742.18 R
7 X
V
0 9 Q
0 X
(The EXPRESS Data Dictionar) 207 736.18 T
(y) 331.62 736.18 T
72 726.98 558 726.98 2 L
7 X
V
0.25 H
0 X
N
72 74.02 558 74.02 2 L
7 X
V
2 Z
0 X
N
133 55.01 539 66.96 R
7 X
V
0 X
(EXPRESS User Gr) 241 60.96 T
(oup: October 1995) 318.85 60.96 T
(5) 553 60.96 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
72 87.98 558 686.02 R
7 X
V
2 10 Q
0 X
(on schemas, entities, de\336ned types, enumerations, selects, lists, sets, bags, arrays,) 207 679.35 T
(EXPRESS simple types) 207 667.35 T
2 8 Q
(3) 302.57 671.35 T
2 10 Q
( \050inte) 306.57 667.35 T
(ger) 327.25 667.35 T
(, real, number) 339.62 667.35 T
(, string, binary) 394.76 667.35 T
(, boolean, logical\051, and) 452.44 667.35 T
(e) 207 655.35 T
(xplicit, in) 211.29 655.35 T
(v) 249.23 655.35 T
(erse, and deri) 254.08 655.35 T
(v) 307.42 655.35 T
(ed attrib) 312.27 655.35 T
(utes. Dictionary entries are pointed to by man) 345.12 655.35 T
(y) 527.72 655.35 T
(constructs in the toolkit thereby a) 207 643.35 T
(v) 340.4 643.35 T
(oiding unnecessary duplication of dictionary infor-) 345.2 643.35 T
(mation. F) 207 631.35 T
(or e) 245.19 631.35 T
(xample, all instantiations of an entity point to the dictionary entry for the) 260.31 631.35 T
(entity) 207 619.35 T
(. All attrib) 229.13 619.35 T
(ute dictionary entries point to a type dictionary entry de\336ning the) 270.32 619.35 T
(attrib) 207 607.35 T
(ute\325) 227.91 607.35 T
(s type. These types of pointers pro) 242.91 607.35 T
(vide man) 380.24 607.35 T
(y routes into the dictionary infor-) 417.03 607.35 T
(mation.) 207 595.35 T
(The SCL dictionary is represented by the Re) 207 577.35 T
(gistry class. Schemas, entities, and de\336ned) 384.88 577.35 T
(types are each contained in their o) 207 565.35 T
(wn subdictionary) 343.38 565.35 T
(. These subdictionaries can be) 411.89 565.35 T
(accessed through the Re) 207 553.35 T
(gistry) 303.77 553.35 T
(. The Re) 325.9 553.35 T
(gistry pro) 359.91 553.35 T
(vides insertion, deletion, look-up, and) 398.37 553.35 T
(tra) 207 541.35 T
(v) 217.35 541.35 T
(ersal operations for each of the subdictionaries. The constructor for the Re) 222.2 541.35 T
(gistry) 519.2 541.35 T
(class accepts as an ar) 207 529.35 T
(gument a pointer to a function from the Schema library) 291.23 529.35 T
(. The func-) 511.38 529.35 T
(tion passed into the Re) 207 517.35 T
(gistry constructor is in) 297.96 517.35 T
(v) 387.28 517.35 T
(ok) 392.08 517.35 T
(ed to initialize the dictionary) 401.98 517.35 T
(.) 516.32 517.35 T
(The Schema library is generated to contain tw) 207 499.35 T
(o types of initialization functions: a) 391.03 499.35 T
(dictionary initialization function and one or more schema initialization functions. The) 207 487.35 T
-0.29 (dictionary initialization function initializes the EXPRESS dictionary for all the schemas) 207 475.35 P
-0.4 (in the EXPRESS model. It is al) 207 463.35 P
-0.4 (w) 329.79 463.35 P
-0.4 (ays generated using the same function prototype so that) 336.91 463.35 P
-0.09 (generically written application code using the function only needs to be compiled once.) 207 451.35 P
(At link time the function is bound to a Schema-library-speci\336c implementation. T) 207 439.35 T
(o) 533.4 439.35 T
(change a generically written application to be initialized for a dif) 207 427.35 T
(ferent schema, the) 466.14 427.35 T
(application need only be relink) 207 415.35 T
(ed so the dictionary initialization function in the ne) 330.77 415.35 T
(w) 534.95 415.35 T
(Schema library is bound to the application.) 207 403.35 T
(The dictionary initialization function calls the other type of initialization function, the) 207 385.35 T
(schema initialization function, to populate the dictionary) 207 373.35 T
(. Schema initialization func-) 432.72 373.35 T
(tions are named based on the name of the schema the) 207 361.35 T
(y are generated to initialize. The) 419.58 361.35 T
(dictionary initialization function calls a schema initialization function for each schema) 207 349.35 T
(that is intended to be used with an application.) 207 337.35 T
2 8 Q
(4) 392.82 341.35 T
2 10 Q
(The dictionary to be initialized \050instantiated as a Re) 207 319.35 T
(gistry class\051 is passed as an ar) 413.49 319.35 T
(gu-) 532.73 319.35 T
-0.21 (ment to each initialization function called. The dictionary initialization function accepts) 207 307.35 P
(the dictionary to be initialized as a pointer to Re) 207 295.35 T
(gistry ar) 399.33 295.35 T
(gument. The dictionary initial-) 432.2 295.35 T
(ization function calls all the schema initialization functions with the same Re) 207 283.35 T
(gistry) 514.88 283.35 T
(pointer as an ar) 207 271.35 T
(gument. Each schema initialization function initializes the Re) 268.19 271.35 T
(gistry) 514.13 271.35 T
(dictionary with the EXPRESS schema information it w) 207 259.35 T
(as generated to initialize.) 427.73 259.35 T
-0.34 (A Schema library contains se) 207 241.35 P
-0.34 (v) 322.58 241.35 P
-0.34 (eral source \336les. F) 327.43 241.35 P
-0.34 (or each schema from the EXPRESS the) 399.58 241.35 P
-0.28 (Schema library contains a header \336le containing schema-speci\336c class de\336nitions \050.h\051, a) 207 229.35 P
(corresponding \336le de\336ning class member functions \050.cc\051, and a \336le containing the) 207 217.35 T
(schema initialization function \050.init.cc\051. In addition to the schema-speci\336c \336les three) 207 205.35 T
(additional \336les are al) 207 193.35 T
(w) 290.5 193.35 T
(ays included. The \336rst \336le, schema.h, contains the dictionary) 297.62 193.35 T
(initialization function prototype, the schema initialization function prototypes, and the) 207 181.35 T
(include \336les for each of the separate schema header \336les. A de) 207 169.35 T
(v) 456.12 169.35 T
(eloper using the early) 460.97 169.35 T
-0.06 (bound access functions need only include schema.h to use constructs from an) 207 157.35 P
-0.06 (y schema.) 515.62 157.35 P
72 123.98 558 154.01 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
207 131.98 351 131.98 2 L
0.25 H
2 Z
0 X
0 0 0 1 0 0 0 K
N
0 0 612 792 C
2 9 Q
0 X
0 0 0 1 0 0 0 K
(3.  The dictionary contains one entry for each EXPRESS simple type.) 207 117.98 T
(4.  It is recommended that an EXPRESS long form be used. Use of multiple schemas sometimes) 207 104.98 T
(results in compiler errors based on the ordering of generated C++ class declarations.) 207 94.98 T
FMENDPAGE
%%EndPage: "5" 5
%%Page: "6" 6
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
122 55.01 528 66.96 R
7 X
0 0 0 1 0 0 0 K
V
0 9 Q
0 X
(EXPRESS User Gr) 230 60.96 T
(oup: October 1995) 307.85 60.96 T
54 750.02 540 750.02 2 L
7 X
V
2 H
0 Z
0 X
N
54 730.15 540 742.18 R
7 X
V
0 X
(Design of a Software Librar) 162 736.18 T
(y f) 279.12 736.18 T
(or Implementing EXPRESS: The NIST STEP Class Librar) 289.44 736.18 T
(y) 529.6 736.18 T
54 726.98 540 726.98 2 L
7 X
V
0.25 H
0 X
N
54 74.02 540 74.02 2 L
7 X
V
2 Z
0 X
N
(6) 54 60.96 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
54 87.98 540 686.02 R
7 X
V
2 10 Q
0 X
(The second \336le, schema.cc, de\336nes the dictionary initialization function. Lastly) 189 679.35 T
(, as a) 505.81 679.35 T
(con) 189 667.35 T
(v) 203.04 667.35 T
(enience to de) 207.89 667.35 T
(v) 260.4 667.35 T
(elopers a \336le, mak) 265.25 667.35 T
(e_schema, is generated which contains a macro) 338.47 667.35 T
(de\336nition de\336ning all the object \336les that need to be b) 189 655.35 T
(uilt for the schema. This \336le may) 404.35 655.35 T
(be included in a generic Mak) 189 643.35 T
(e\336le for b) 305.26 643.35 T
(uilding Schema libraries.) 343.94 643.35 T
(The dictionary entries for entities and types) 189 625.35 T
2 8 Q
(5) 362.86 629.35 T
2 10 Q
( may be used to instantiate instances of) 366.86 625.35 T
(EXPRESS entities and types respecti) 189 613.35 T
(v) 337.08 613.35 T
(ely) 341.93 613.35 T
(. As part of the initialization of a dictionary) 353.5 613.35 T
(entry for an entity or type, a pointer to a function is assigned a function which will) 189 601.35 T
-0.14 (create an instance of that entity or type. This additional dictionary functionality aides in) 189 589.35 P
-0.45 (the creation of schema-independent application code. It allo) 189 577.35 P
-0.45 (ws application programmers) 424.98 577.35 P
-0.37 (to create schema-speci\336c classes through the generic function pointer rather than calling) 189 565.35 P
(class constructors directly) 189 553.35 T
(.) 292.22 553.35 T
54 509.99 540 513.02 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
189 511.5 540 511.5 2 L
0.25 H
2 Z
0 X
0 0 0 1 0 0 0 K
N
54 511.5 180 511.5 2 L
0 Z
N
0 0 612 792 C
0 12 Q
0 X
0 0 0 1 0 0 0 K
(5) 173.33 517.02 T
(Entity Instantiation) 189 517.02 T
2 10 Q
(The concepts of inheritance in EXPRESS and C++ dif) 189 493.33 T
(fer) 406.12 493.33 T
(. C++ and EXPRESS support) 416.67 493.33 T
-0.19 (the concepts of single and multiple inheritance. Ho) 189 481.33 P
-0.19 (we) 391.3 481.33 P
-0.19 (v) 402.71 481.33 P
-0.19 (er) 407.56 481.33 P
-0.19 (, the def) 414.93 481.33 P
-0.19 (ault implementation of) 446.95 481.33 P
-0.01 (multiple inheritance in C++ dif) 189 469.33 P
-0.01 (fers from the multiple inheritance of EXPRESS. In C++) 313.3 469.33 P
-0.35 (multiple paths in an inheritance hierarch) 189 457.33 P
-0.35 (y from a single child to a common ancestor lead) 348.55 457.33 P
-0.1 (to as man) 189 445.33 P
-0.1 (y instantiations of the common ancestor as there are paths to it. Each instantia-) 226.97 445.33 P
(tion in C++ of the multiple parent is quali\336ed when accessed using the name of a child) 189 433.33 T
(in a distinct path. EXPRESS on the other hand of) 189 421.33 T
(fers no duplication of ancestors no) 385.97 421.33 T
(matter ho) 189 409.33 T
(w man) 226.8 409.33 T
(y paths in an inheritance hierarch) 253.59 409.33 T
(y lead to the common ancestor) 386.56 409.33 T
(.) 508.49 409.33 T
(EXPRESS also introduces the notion of AND inheritance which is not able to be) 189 397.33 T
(supported directly using C++ inheritance.) 189 385.33 T
(The follo) 189 367.33 T
(wing subsections describe SCL implementation strate) 225.69 367.33 T
(gies used to support) 440.25 367.33 T
(instantiation of entities using the dif) 189 355.33 T
(ferent notions of inheritance in EXPRESS. Section) 332.92 355.33 T
(5.1 discusses the implementation of entities whose inheritance hierarchies include only) 189 343.33 T
(single inheritance. Section 5.2 discusses the notion of comple) 189 331.33 T
(x inheritance. Section 5.3) 434.94 331.33 T
(discusses the implementation of entities that use multiple inheritance.) 189 319.33 T
0 F
(5.1) 166.1 289.33 T
(Instantiation of Single-Inherited Entities) 189 289.33 T
2 F
-0.33 (This section describes the data structures used to instantiate EXPRESS entities \050referred) 189 273.33 P
(to as single-inherited entities\051 where:) 189 261.33 T
3 7 Q
(n) 189 243.33 T
2 10 Q
(entities in the EXPRESS inheritance graph ha) 202.54 243.33 T
(v) 385.66 243.33 T
(e no more than one supertype at an) 390.51 243.33 T
(y) 530.05 243.33 T
(le) 202.54 231.33 T
(v) 209.51 231.33 T
(el in the graph, and) 214.36 231.33 T
3 7 Q
(n) 189 216.33 T
2 10 Q
(an instance of a supertype is established through instantiation of only one of its sub-) 202.54 216.33 T
(types at an) 202.54 204.33 T
(y le) 245.16 204.33 T
(v) 259.63 204.33 T
(el in the EXPRESS inheritance graph.) 264.48 204.33 T
-0.03 (The data structures de\336ned in this section pro) 189 189.33 P
-0.03 (vide a direct mapping between C++ inher-) 370.58 189.33 P
(itance and EXPRESS inheritance where the abo) 189 177.33 T
(v) 380.48 177.33 T
(e holds true.) 385.33 177.33 T
(In SCL a Schema library contains one C++ class for each entity de\336ned in the schema.) 189 159.33 T
-0.03 (Each entity class contains a data member for each attrib) 189 147.33 P
-0.03 (ute de\336ned for that entity in the) 411.58 147.33 P
(schema. The entity class also de\336nes member functions for assigning v) 189 135.33 T
(alues to and) 472.88 135.33 T
54 100.98 540 131.01 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
189 108.98 333 108.98 2 L
0.25 H
2 Z
0 X
0 0 0 1 0 0 0 K
N
0 0 612 792 C
2 9 Q
0 X
0 0 0 1 0 0 0 K
(5.  Only those types implemented as C++ classes.) 189 94.98 T
FMENDPAGE
%%EndPage: "6" 6
%%Page: "7" 7
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
72 750.02 558 750.02 2 L
7 X
0 0 0 1 0 0 0 K
V
2 H
0 Z
0 X
N
72 730.15 558 742.18 R
7 X
V
0 9 Q
0 X
(Entity Instantiation) 207 736.18 T
72 726.98 558 726.98 2 L
7 X
V
0.25 H
0 X
N
72 74.02 558 74.02 2 L
7 X
V
2 Z
0 X
N
133 55.01 539 66.96 R
7 X
V
0 X
(EXPRESS User Gr) 241 60.96 T
(oup: October 1995) 318.85 60.96 T
(7) 553 60.96 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
72 87.98 558 686.02 R
7 X
V
2 10 Q
0 X
-0.04 (retrie) 207 679.35 P
-0.04 (ving v) 227.85 679.35 P
-0.04 (alues from each attrib) 252.84 679.35 P
-0.04 (ute data member) 339.44 679.35 P
-0.04 (. These early-bound style access func-) 405.46 679.35 P
(tions are named based on the name of the attrib) 207 667.35 T
(ute. The entity classes use C++ inherit-) 395.93 667.35 T
(ance to inherit from an entity class representing an EXPRESS-de\336ned supertype,) 207 655.35 T
(thereby allo) 207 643.35 T
(wing access to ancestor attrib) 254.24 643.35 T
(ute data members and associated early-bound) 371.79 643.35 T
(attrib) 207 631.35 T
(ute access functions. F) 227.91 631.35 T
(or e) 318.3 631.35 T
(xample, instantiations of SdaiRectangles in \336gure 2) 333.42 631.35 T
(cause instantiation of the supertype SdaiShape as well. SdaiRectangle inherits) 207 619.35 T
(SdaiShape\325) 207 607.35 T
(s attrib) 252 607.35 T
(ute data members and attrib) 279.3 607.35 T
(ute access functions such as _item_name) 390.19 607.35 T
(and its Item_name\050\051 access functions.) 207 595.35 T
72 564.98 558 578.02 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
207 572.04 558 572.04 2 L
0.25 H
2 Z
0 X
0 0 0 1 0 0 0 K
N
72 572.04 198 572.04 2 L
0 Z
N
0 0 612 792 C
0 9 Q
0 X
0 0 0 1 0 0 0 K
(FIGURE  2) 72 558.98 T
1 F
(EXPRESS Entity and Corresponding Gener) 207 558.98 T
(ated Entity Instance C++ Class De\336nition) 380.99 558.98 T
2 10 Q
(The STEPentity class \050see \336gure 3\051 from the STEP Core library is used as a base class) 207 145.33 T
(for all classes used to instantiate entities. It de\336nes general purpose functionality) 207 133.33 T
(common to all entity classes. STEPentity also pro) 207 121.33 T
(vides functions for reading instances) 405.74 121.33 T
(from and writing instances to P) 207 109.33 T
(art 21 \336les, v) 332.12 109.33 T
(alidating entity attrib) 384.09 109.33 T
(ute v) 467.78 109.33 T
(alues, and) 487.25 109.33 T
(pro) 207 97.33 T
(viding generic \050late-bound\051 access to all attrib) 220.18 97.33 T
(ute v) 403.83 97.33 T
(alues associated with an entity) 423.3 97.33 T
72 87.98 558 686.02 C
75 170 555 555.98 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
192 192.02 552 543.02 R
7 X
0 0 0 1 0 0 0 K
V
2 10 Q
0 X
(class) 336 536.35 T
4 F
(SdaiShape) 357.94 536.35 T
2 F
(  :    public) 402.96 536.35 T
4 F
(STEP) 448.24 536.35 T
(entity) 473.05 536.35 T
2 F
( {) 497.49 536.35 T
(protected:) 336 522.35 T
(SdaiString _item_name ;) 354 508.35 T
(SdaiColor _item_color ;    //  OPTION) 354 494.35 T
(AL) 507.54 494.35 T
(SdaiInte) 354 480.35 T
(ger _number_of_sides ;) 387.18 480.35 T
(public:) 336 466.35 T
5 F
(constructor) 354 452.35 T
(s, destructor) 400.01 452.35 T
(s, etc.) 449.91 452.35 T
2 F
(const SdaiLabel Item_name\050\051 const;) 354 438.35 T
(v) 354 424.35 T
(oid Item_name \050const char * x\051;) 358.8 424.35 T
(const sdaiColor Item_color\050\051 const;) 354 410.35 T
(v) 354 396.35 T
(oid Item_color \050sdaiColor x\051;) 358.8 396.35 T
(const SdaiInte) 354 382.35 T
(ger Number_of_sides\050\051 const;) 410.79 382.35 T
(v) 354 368.35 T
(oid Number_of_sides \050SdaiInte) 358.8 368.35 T
(ger x\051;) 484.19 368.35 T
(};) 336 354.35 T
(class) 336 340.35 T
4 F
(SdaiRectangle) 357.94 340.35 T
2 F
(  :    public) 419.05 340.35 T
4 F
(SdaiShape) 464.33 340.35 T
2 F
(  {) 509.35 340.35 T
(protected:) 336 326.35 T
(SdaiReal _height ;) 354 312.35 T
(SdaiReal _width ;) 354 298.35 T
(public:) 336 284.35 T
5 F
(constructor) 354 270.35 T
(s, destructor) 400.01 270.35 T
(s, etc.) 449.91 270.35 T
2 F
(const SdaiLength_measure Height\050\051 const;) 354 256.35 T
(v) 354 242.35 T
(oid Height \050SdaiLength_measure x\051;) 358.8 242.35 T
(const SdaiLength_measure W) 354 228.35 T
(idth\050\051 const;) 473.58 228.35 T
(v) 354 214.35 T
(oid W) 358.8 214.35 T
(idth \050SdaiLength_measure x\051;) 383.12 214.35 T
(};) 336 200.35 T
-51 282.02 309 543.02 R
7 X
V
0 X
(TYPE label = STRING;) 84 536.35 T
(END_TYPE;) 84 522.35 T
(TYPE color = ENUMERA) 84 498.35 T
(TION OF \050red, green, blue,) 191.02 498.35 T
(yello) 84 486.35 T
(w) 103.75 486.35 T
(, orange, white, black, bro) 110.32 486.35 T
(wn\051;) 214.49 486.35 T
(END_TYPE;) 84 472.35 T
(ENTITY shape) 84 448.35 T
(SUPER) 84 434.35 T
(TYPE OF \050ONEOF \050circle, triangle, rectangle\051\051;) 114.52 434.35 T
(item_name : label;) 97.54 420.35 T
(item_color : OPTION) 97.54 406.35 T
(AL color;) 184.96 406.35 T
(number_of_sides : INTEGER;) 97.54 392.35 T
(END_ENTITY) 84 378.35 T
(;) 144.73 378.35 T
(ENTITY rectangle) 84 354.35 T
(SUPER) 84 340.35 T
(TYPE OF \050square\051) 114.52 340.35 T
(SUBTYPE OF \050shape\051;) 84 326.35 T
(height : length_measure;) 97.54 312.35 T
(width : length_measure;) 97.54 298.35 T
(END_ENTITY) 84 284.35 T
(;) 144.73 284.35 T
113.43 177.59 377.43 188.07 R
7 X
V
0 X
(Early bound access functions) 248.43 181.41 T
349.3 265.45 M
 337.98 265.38 331.29 250.93 337.51 243.95 D
 339.82 241.37 349.73 239.01 337.04 234.4 D
 338.26 234.84 345.71 232.37 340.34 227.24 D
 333.12 220.34 340.01 210.04 351.18 211.72 D
1 H
2 Z
N
90 180 31.14 45.28 337.14 188.99 A
72 87.98 558 686.02 C
0 0 612 792 C
FMENDPAGE
%%EndPage: "7" 7
%%Page: "8" 8
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
122 55.01 528 66.96 R
7 X
0 0 0 1 0 0 0 K
V
0 9 Q
0 X
(EXPRESS User Gr) 230 60.96 T
(oup: October 1995) 307.85 60.96 T
54 750.02 540 750.02 2 L
7 X
V
2 H
0 Z
0 X
N
54 730.15 540 742.18 R
7 X
V
0 X
(Design of a Software Librar) 162 736.18 T
(y f) 279.12 736.18 T
(or Implementing EXPRESS: The NIST STEP Class Librar) 289.44 736.18 T
(y) 529.6 736.18 T
54 726.98 540 726.98 2 L
7 X
V
0.25 H
0 X
N
54 74.02 540 74.02 2 L
7 X
V
2 Z
0 X
N
(8) 54 60.96 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
54 87.98 540 686.02 R
7 X
V
2 10 Q
0 X
-0.36 (instance. STEPentity pro) 189 679.35 P
-0.36 (vides class data members for containing error information, P) 287.86 679.35 P
-0.36 (art) 527.31 679.35 P
(21 comments, the P) 189 667.35 T
(art 21 entity name \050e.g. #1\051, and a pointer to the dictionary entry) 267.74 667.35 T
(representing the entity) 189 655.35 T
(.) 277.78 655.35 T
54 624.98 540 638.02 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
189 632.04 540 632.04 2 L
0.25 H
2 Z
0 X
0 0 0 1 0 0 0 K
N
54 632.04 180 632.04 2 L
0 Z
N
0 0 612 792 C
0 9 Q
0 X
0 0 0 1 0 0 0 K
(FIGURE  3) 54 618.98 T
1 F
(P) 189 618.98 T
(ar) 194.64 618.98 T
(tial C++ Class De\336nition f) 203 618.98 T
(or STEP) 303.77 618.98 T
(entity) 337.33 618.98 T
2 10 Q
(The STEPentity class uses a list of attrib) 189 433.02 T
(utes to pro) 350.74 433.02 T
(vide generic access to the attrib) 392.81 433.02 T
(utes) 518.41 433.02 T
-0.33 (speci\336c to the entity classes. This is done through a link) 189 421.02 P
-0.33 (ed list data member containing a) 409.21 421.02 P
(generic attrib) 189 409.02 T
(ute class instantiation for each attrib) 241.84 409.02 T
(ute associated with the entity) 386.34 409.02 T
(. The) 501.79 409.02 T
(attrib) 189 397.02 T
(ute list is used to implement the reading, writing, v) 209.91 397.02 T
(alidating, and late-bound) 413.27 397.02 T
-0.27 (accessing functionality mentioned abo) 189 385.02 P
-0.27 (v) 341.64 385.02 P
-0.27 (e. The list is b) 346.49 385.02 P
-0.27 (uilt at run time by the constructors) 401.61 385.02 P
(of entities inheriting from STEPentity) 189 373.02 T
(. The ordering of the attrib) 340.02 373.02 T
(ute class list entries) 445.91 373.02 T
-0.03 (corresponds to the order in which the attrib) 189 361.02 P
-0.03 (ute v) 361.08 361.02 P
-0.03 (alues w) 380.52 361.02 P
-0.03 (ould be read from a P) 410.67 361.02 P
-0.03 (art 21 \336le.) 496.75 361.02 P
(The generic attrib) 189 349.02 T
(ute classes on the attrib) 259.89 349.02 T
(ute list are of type STEP) 353.01 349.02 T
(attrib) 450.91 349.02 T
(ute.) 471.82 349.02 T
54 318.65 540 331.68 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
189 325.71 540 325.71 2 L
0.25 H
2 Z
0 X
0 0 0 1 0 0 0 K
N
54 325.71 180 325.71 2 L
0 Z
N
0 0 612 792 C
0 9 Q
0 X
0 0 0 1 0 0 0 K
(FIGURE  4) 54 312.65 T
1 F
(P) 189 312.65 T
(ar) 194.64 312.65 T
(tial C++ Class De\336nition f) 203 312.65 T
(or STEP) 303.77 312.65 T
(attr) 337.42 312.65 T
(ib) 350.56 312.65 T
(ute) 357.38 312.65 T
2 10 Q
-0.37 (The STEP) 189 135.13 P
-0.37 (attrib) 229.87 135.13 P
-0.37 (ute class \050see \336gure 4\051 pro) 250.78 135.13 P
-0.37 (vides generic access to an attrib) 354.02 135.13 P
-0.37 (ute\325) 478.87 135.13 P
-0.37 (s v) 493.87 135.13 P
-0.37 (alue and) 504.64 135.13 P
-0.05 (its type. STEP) 189 123.13 P
-0.05 (attrib) 246.27 123.13 P
-0.05 (ute pro) 267.18 123.13 P
-0.05 (vides access to the attrib) 295.03 123.13 P
-0.05 (ute\325) 392.41 123.13 P
-0.05 (s dictionary information through) 407.41 123.13 P
(a data member which points to the dictionary entry for the attrib) 189 111.13 T
(ute. Information a) 445.15 111.13 T
(v) 516.88 111.13 T
(ail-) 521.63 111.13 T
(able from the attrib) 189 99.13 T
(ute\325) 265.73 99.13 T
(s dictionary entry includes:) 280.73 99.13 T
54 87.98 540 686.02 C
63.14 457.68 530.86 615.98 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
69.14 460.41 524.86 609.98 R
7 X
0 0 0 1 0 0 0 K
V
2 10 Q
0 X
(class) 213.14 603.32 T
4 F
(STEP) 235.08 603.32 T
(entity) 259.89 603.32 T
2 F
( : public) 284.33 603.32 T
4 F
(Entity_instance) 319.61 603.32 T
2 F
( {) 386.28 603.32 T
(public:) 213.14 589.32 T
(STEP) 231.14 575.32 T
(attrib) 254.33 575.32 T
(uteList attrib) 275.24 575.32 T
(utes;) 326.43 575.32 T
(// generic attrib) 351.14 575.32 T
(ute list) 412.04 575.32 T
(int STEP\336le _id;) 231.14 561.32 T
(// P) 351.14 561.32 T
(art 21 entity name e.g. #2) 364.61 561.32 T
(ErrorDescriptor _error;) 231.14 547.32 T
(// storage area for error information) 351.14 547.32 T
(SCLstring *p21Comment;) 231.14 533.32 T
(// storage area for comments) 351.14 533.32 T
(EntityDescriptor *eDesc;) 231.14 519.32 T
(// pointer to dictionary entry for entity) 351.14 519.32 T
(int _comple) 231.14 505.32 T
(x;) 278.49 505.32 T
(// indicates this is part of a comple) 324.14 505.32 T
(x instantiation) 461.48 505.32 T
5 F
(constructor) 231.14 491.32 T
(s, destructor) 277.15 491.32 T
(s, access functions, etc) 327.05 491.32 T
(r) 231.14 477.32 T
(ead, write) 234.66 477.32 T
(, validate entity functions) 274.56 477.32 T
2 F
(}) 213.14 463.32 T
54 87.98 540 686.02 C
0 0 612 792 C
54 87.98 540 686.02 C
61.71 159.79 532.29 309.65 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
67.71 165.08 522 303.65 R
7 X
0 0 0 1 0 0 0 K
V
2 10 Q
0 X
(class) 211.71 296.98 T
4 F
(STEP) 233.65 296.98 T
(attrib) 258.56 296.98 T
(ute) 282.8 296.98 T
2 F
( {) 296.13 296.98 T
(ErrorDescriptor _error;) 229.71 282.98 T
(// contains associated error information) 331.71 282.98 T
(unsigned int _deri) 229.71 268.98 T
(v) 301.68 268.98 T
(e : 1;) 306.53 268.98 T
(// has this attr been deri) 331.71 268.98 T
(v) 425.06 268.98 T
(ed by another attr?) 429.91 268.98 T
(const Attr *aDesc;) 229.71 254.98 T
(// attrib) 331.71 254.98 T
(ute dictionary entry) 360.68 254.98 T
(union { // discriminate use of ptr with underlying type info in aDesc) 229.71 240.98 T
5 F
(pointer for eac) 229.71 226.98 T
(h of the possible underlying attrib) 289 226.98 T
(ute types) 424.64 226.98 T
2 F
(} ptr;) 229.71 212.98 T
5 F
(constructor) 229.71 198.98 T
(s, destructor) 275.72 198.98 T
(s, access functions, etc) 325.62 198.98 T
(r) 229.71 184.98 T
(ead, write) 233.23 184.98 T
(, validate attrib) 273.13 184.98 T
(ute value functions) 334.88 184.98 T
2 F
(}) 211.71 170.98 T
54 87.98 540 686.02 C
0 0 612 792 C
FMENDPAGE
%%EndPage: "8" 8
%%Page: "9" 9
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
72 750.02 558 750.02 2 L
7 X
0 0 0 1 0 0 0 K
V
2 H
0 Z
0 X
N
72 730.15 558 742.18 R
7 X
V
0 9 Q
0 X
(Entity Instantiation) 207 736.18 T
72 726.98 558 726.98 2 L
7 X
V
0.25 H
0 X
N
72 74.02 558 74.02 2 L
7 X
V
2 Z
0 X
N
133 55.01 539 66.96 R
7 X
V
0 X
(EXPRESS User Gr) 241 60.96 T
(oup: October 1995) 318.85 60.96 T
(9) 553 60.96 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
72 87.98 558 686.02 R
7 X
V
3 7 Q
0 X
(n) 207 679.35 T
2 10 Q
(the attrib) 220.54 679.35 T
(ute name,) 256.17 679.35 T
3 7 Q
(n) 207 664.35 T
2 10 Q
(pointers to the dictionary entries for the attrib) 220.54 664.35 T
(ute\325) 402.26 664.35 T
(s type and o) 417.26 664.35 T
(wning entity) 465.06 664.35 T
(, and) 514.69 664.35 T
3 7 Q
(n) 207 649.35 T
2 10 Q
(unique, optional, and deri) 220.54 649.35 T
(v) 322.78 649.35 T
(ed information.) 327.63 649.35 T
(STEP) 207 634.35 T
(attrib) 230.19 634.35 T
(ute pro) 251.1 634.35 T
(vides access to the attrib) 279 634.35 T
(ute\325) 376.56 634.35 T
(s v) 391.56 634.35 T
(alue through a union data member) 402.7 634.35 T
(containing pointers. The union data member contains a pointer to each possible under-) 207 622.35 T
(lying attrib) 207 610.35 T
(ute type) 250.97 610.35 T
2 8 Q
(6) 282.91 614.35 T
2 10 Q
(. The pointer in the union data type is discriminated through the) 286.91 610.35 T
(pointer to the dictionary entry which contains type information for the attrib) 207 598.35 T
(ute. This) 510.93 598.35 T
(union data member points to the storage area for the attrib) 207 586.35 T
(ute de\336ned in the attrib) 438.98 586.35 T
(ute\325) 531.55 586.35 T
(s) 546.55 586.35 T
(de\336ning entity class) 207 574.35 T
2 8 Q
(7) 287 578.35 T
2 10 Q
(.) 291 574.35 T
-0.42 (The _deri) 207 556.35 P
-0.42 (v) 244.93 556.35 P
-0.42 (e data member \337ag in STEP) 249.78 556.35 P
-0.42 (attrib) 360.02 556.35 P
-0.42 (ute indicates a dif) 380.93 556.35 P
-0.42 (ferent aspect of EXPRESS) 450.25 556.35 P
-0.13 (DERIVE information from the deri) 207 544.35 P
-0.13 (v) 347.3 544.35 P
-0.13 (e \337ag in an attrib) 352.15 544.35 P
-0.13 (ute\325) 419.19 544.35 P
-0.13 (s dictionary entry) 434.19 544.35 P
-0.13 (. The _deri) 503.26 544.35 P
-0.13 (v) 546.34 544.35 P
-0.13 (e) 551.19 544.35 P
(\337ag in STEP) 207 532.35 T
(attrib) 257.97 532.35 T
(ute is used to specify that an attrib) 278.88 532.35 T
(ute is deri) 415.61 532.35 T
(v) 454.8 532.35 T
(ed \050by w) 459.65 532.35 T
(ay of an) 494.54 532.35 T
(EXPRESS DERIVE statement\051 in a subtype of the entity instance. A v) 207 520.35 T
(alue of \322true\323 in) 489.51 520.35 T
(this \336eld indicates that the v) 207 508.35 T
(alue w) 319.25 508.35 T
(ould be written as an asterisk in a P) 345.53 508.35 T
(art 21 \336le. In) 487.03 508.35 T
(contrast the deri) 207 496.35 T
(v) 271.18 496.35 T
(e \337ag in an attrib) 276.03 496.35 T
(ute\325) 343.6 496.35 T
(s dictionary entry speci\336es that the attrib) 358.6 496.35 T
(ute is) 521.16 496.35 T
(\322deri) 207 484.35 T
(ving\323 a supertype\325) 226.74 484.35 T
(s attrib) 300.06 484.35 T
(ute v) 327.36 484.35 T
(alue. An occurrence of a deri) 346.83 484.35 T
(v) 462.64 484.35 T
(e \337ag set to \322true\323 in) 467.49 484.35 T
(the dictionary w) 207 472.35 T
(ould cause the _deri) 271.89 472.35 T
(v) 351.9 472.35 T
(e \337ag in the STEP) 356.75 472.35 T
(attrib) 429.38 472.35 T
(ute for a supertype\325) 450.29 472.35 T
(s) 527.77 472.35 T
(attrib) 207 460.35 T
(ute to be set to \322true\323.) 227.91 460.35 T
(All SCL C++ classes used to instantiate entities \050subclasses of STEPentity\051, attrib) 207 442.35 T
(utes) 533.63 442.35 T
(\050STEP) 207 430.35 T
(attrib) 233.52 430.35 T
(ute\051, and types \050e.g. for enumerations, aggre) 254.43 430.35 T
(g) 430.9 430.35 T
(ates, selects, strings, etc.\051) 435.85 430.35 T
(kno) 207 418.35 T
(w ho) 221.75 418.35 T
(w to read, write, and v) 241.22 418.35 T
(alidate their v) 330.67 418.35 T
(alues. This beha) 385.41 418.35 T
(vior mak) 449.92 418.35 T
(es reading,) 485.65 418.35 T
(writing, and v) 207 406.35 T
(alidating v) 262.58 406.35 T
(alues conceptually v) 304.83 406.35 T
(ery simple. F) 386.33 406.35 T
(or e) 438.68 406.35 T
(xample, a class instanti-) 453.8 406.35 T
(ating an entity calls the base class STEPentity function to read an entity) 207 394.35 T
(. The STEPen-) 492.99 394.35 T
-0.2 (tity read function tra) 207 382.35 P
-0.2 (v) 288.14 382.35 P
-0.2 (erses its list of STEP) 292.99 382.35 P
-0.2 (attrib) 375.39 382.35 P
-0.2 (ute classes directing each STEP) 396.3 382.35 P
-0.2 (attrib) 522.57 382.35 P
-0.2 (ute) 543.48 382.35 P
(class to read its v) 207 370.35 T
(alue. Each STEP) 275.63 370.35 T
(attrib) 342.97 370.35 T
(ute class looks at its attrib) 363.88 370.35 T
(ute dictionary entry) 467.29 370.35 T
(pointer to determine its type. F) 207 358.35 T
(or types implemented as C++ classes STEP) 330.18 358.35 T
(attrib) 504.08 358.35 T
(ute) 524.99 358.35 T
(directs the type to read its v) 207 346.35 T
(alue. F) 317.29 346.35 T
(or types implemented as C++ b) 344.36 346.35 T
(uilt-in types STEP) 469.6 346.35 T
(at-) 543.35 346.35 T
-0.1 (trib) 207 334.35 P
-0.1 (ute uses the C++ input functions to read the v) 220.69 334.35 P
-0.1 (alue. Writing and v) 401.63 334.35 P
-0.1 (alidating v) 478.29 334.35 P
-0.1 (alues are) 520.44 334.35 P
(implemented in a similar manner) 207 322.35 T
(. Reading, writing, and v) 338.66 322.35 T
(alidating P) 437.57 322.35 T
(art 21 \336les are) 480.48 322.35 T
-0.26 (implemented by an SCL STEP\336le class in a similar manner by directing entities to read,) 207 310.35 P
(write, or v) 207 298.35 T
(alidate themselv) 248.13 298.35 T
(es.) 313.25 298.35 T
(Figure 5 summarizes the relationships between the entity classes \050for Shape and Rect-) 207 280.35 T
-0.02 (angle\051, the base class STEPentity) 207 268.35 P
-0.02 (, STEP) 339.3 268.35 P
-0.02 (attrib) 367.47 268.35 P
-0.02 (ute, and the dictionary entity and attrib) 388.38 268.35 P
-0.02 (ute) 543.3 268.35 P
(classes.) 207 256.35 T
-0.14 (Application code to create an entity may be written using schema-dependent or schema-) 207 238.35 P
(independent methods. Entity classes instantiated directly through use of the entity\325) 207 226.35 T
(s) 536.7 226.35 T
(class constructor w) 207 214.35 T
(ould cause application code to become schema-dependent and thus) 283.55 214.35 T
(could not be link) 207 202.35 T
(ed to w) 274.4 202.35 T
(ork with multiple schemas. Schema-independent application) 303.74 202.35 T
(code may be de) 207 190.35 T
(v) 269.23 190.35 T
(eloped by using dictionary objects to create entities.) 274.08 190.35 T
72 153.98 558 184.01 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
207 161.98 351 161.98 2 L
0.25 H
2 Z
0 X
0 0 0 1 0 0 0 K
N
0 0 612 792 C
2 9 Q
0 X
0 0 0 1 0 0 0 K
(6.  For EXPRESS types defined in the model only a pointer to the base class of the type is) 207 147.98 T
(included. For example, each select type defined in EXPRESS inherits from a base class called) 207 137.98 T
(SdaiSelect. The union data type contains a pointer to the base class SdaiSelect which at run time) 207 127.98 T
(is used to point to any of the defined select subclasses.) 207 117.98 T
-0.17 (7.  The entity class defining the attribute\325s storage space is a subclass of the STEPentity class con-) 207 104.98 P
(taining the list of STEPattributes.) 207 94.98 T
FMENDPAGE
%%EndPage: "9" 9
%%Page: "10" 10
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
122 55.01 528 66.96 R
7 X
0 0 0 1 0 0 0 K
V
0 9 Q
0 X
(EXPRESS User Gr) 230 60.96 T
(oup: October 1995) 307.85 60.96 T
54 750.02 540 750.02 2 L
7 X
V
2 H
0 Z
0 X
N
54 730.15 540 742.18 R
7 X
V
0 X
(Design of a Software Librar) 162 736.18 T
(y f) 279.12 736.18 T
(or Implementing EXPRESS: The NIST STEP Class Librar) 289.44 736.18 T
(y) 529.6 736.18 T
54 726.98 540 726.98 2 L
7 X
V
0.25 H
0 X
N
54 74.02 540 74.02 2 L
7 X
V
2 Z
0 X
N
(10) 54 60.96 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
54 87.98 540 686.02 R
7 X
V
54 672.98 540 686.02 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
189 680.04 540 680.04 2 L
0.25 H
2 Z
0 X
0 0 0 1 0 0 0 K
N
54 680.04 180 680.04 2 L
0 Z
N
0 0 612 792 C
0 9 Q
0 X
0 0 0 1 0 0 0 K
(FIGURE  5) 54 666.98 T
1 F
(C++ Class Relationships In) 189 666.98 T
(v) 297.36 666.98 T
(olv) 301.64 666.98 T
(ed in Single-Inher) 312.91 666.98 T
(ited Entity Instantiation) 383.58 666.98 T
1 7.2 Q
(8) 474.13 670.58 T
2 10 Q
-0.04 (The entity dictionary entries) 189 302.65 P
2 8 Q
-0.03 (9) 301.93 306.65 P
2 10 Q
-0.04 ( and the Re) 305.93 302.65 P
-0.04 (gistry class pro) 350.95 302.65 P
-0.04 (vide functionality necessary for) 411.28 302.65 P
(writing application code in a schema-independent f) 189 290.65 T
(ashion. Both pro) 393.86 290.65 T
(vide schema-inde-) 460.1 290.65 T
(pendent methods for creating entity instances. Both methods ultimately create entity) 189 278.65 T
(instances through use of a creation function found as part of each entity\325) 189 266.65 T
(s dictionary) 477.83 266.65 T
(entry) 189 254.65 T
(. The dictionary entry contains a function pointer initialized to point at a creation) 208.9 254.65 T
(function for the entity) 189 242.65 T
(. Once the appropriate dictionary entry has been accessed the) 275.84 242.65 T
(creation function may be in) 189 230.65 T
(v) 298.58 230.65 T
(ok) 303.38 230.65 T
(ed through the function pointer to create an entity) 313.28 230.65 T
(instance. The ne) 189 218.65 T
(w entity instance is returned through a pointer to the common entity) 254.01 218.65 T
-0.04 (base class STEPentity) 189 206.65 P
-0.04 (. The entity dictionary entry is accessible through a pointer found) 276.6 206.65 P
(in STEPentity or through a lookup function in the Re) 189 194.65 T
(gistry class \050see section 4 for a) 401.35 194.65 T
(description of Re) 189 182.65 T
(gistry\051.) 257.73 182.65 T
54 133.98 540 164.01 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
189 141.98 333 141.98 2 L
0.25 H
2 Z
0 X
0 0 0 1 0 0 0 K
N
0 0 612 792 C
2 9 Q
0 X
0 0 0 1 0 0 0 K
-0.06 (8.  These relationships are also involved in multiple-inherited entity instantiation. See section 5.3.) 189 127.98 P
(9.  Recall that each entity defined in EXPRESS has an associated dictionary entry class. Each) 189 114.98 T
-0.06 (entity dictionary entry is a schema-independent data structure created and filled in at run time for) 189 104.98 P
(an entity from a particular schema.) 189 94.98 T
54 87.98 540 686.02 C
54 327.32 540 663.98 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
77.86 393.9 138.99 429.31 R
0.5 H
2 Z
0 X
0 0 0 1 0 0 0 K
N
79.67 395.64 136.1 427.57 R
7 X
V
2 10 Q
0 X
(AttrListNode) 79.67 420.9 T
(ne) 79.67 408.9 T
(xt = null) 88.96 408.9 T
(attr) 79.67 396.9 T
77.16 416.02 138.28 416.02 2 L
N
148.89 400.13 148.89 403.11 159.26 400.13 148.89 397.15 4 Y
0 Z
N
148.89 400.13 148.89 403.11 159.26 400.13 148.89 397.15 4 Y
V
98.97 400.13 148.64 400.13 2 L
2 Z
N
77.86 572.96 138.99 608.37 R
N
79.67 574.71 136.1 606.63 R
7 X
V
0 X
(AttrListNode) 79.67 599.96 T
(ne) 79.67 587.96 T
(xt) 88.96 587.96 T
(attr) 79.67 575.96 T
77.16 595.08 138.28 595.08 2 L
N
148.89 579.19 148.89 582.17 159.26 579.19 148.89 576.21 4 Y
0 Z
N
148.89 579.19 148.89 582.17 159.26 579.19 148.89 576.21 4 Y
V
98.97 579.19 148.64 579.19 2 L
2 Z
N
144.34 572.81 146.54 570.81 137.35 565.15 142.14 574.82 4 Y
0 Z
N
144.34 572.81 146.54 570.81 137.35 565.15 142.14 574.82 4 Y
V
100.25 590.07 M
 115.63 591.36 131.25 588.37 139.32 582.6 D
 143.45 579.64 146.76 575.47 144.51 573 D
2 Z
N
77.86 483.43 138.99 518.84 R
N
79.67 485.17 136.1 517.1 R
7 X
V
0 X
(AttrListNode) 79.67 510.43 T
(ne) 79.67 498.43 T
(xt) 88.96 498.43 T
(attr) 79.67 486.43 T
77.16 505.55 138.28 505.55 2 L
N
148.89 489.66 148.89 492.64 159.26 489.66 148.89 486.68 4 Y
0 Z
N
148.89 489.66 148.89 492.64 159.26 489.66 148.89 486.68 4 Y
V
98.97 489.66 148.64 489.66 2 L
2 Z
N
144.34 483.28 146.54 481.28 137.35 475.62 142.14 485.29 4 Y
0 Z
N
144.34 483.28 146.54 481.28 137.35 475.62 142.14 485.29 4 Y
V
100.25 500.54 M
 115.63 501.83 131.25 498.84 139.32 493.07 D
 143.45 490.11 146.76 485.94 144.51 483.46 D
2 Z
N
77.86 438.66 138.99 474.08 R
N
79.67 440.41 136.1 472.33 R
7 X
V
0 X
(AttrListNode) 79.67 465.67 T
(ne) 79.67 453.67 T
(xt) 88.96 453.67 T
(attr) 79.67 441.67 T
77.16 460.78 138.28 460.78 2 L
N
148.89 444.89 148.89 447.87 159.26 444.89 148.89 441.92 4 Y
0 Z
N
148.89 444.89 148.89 447.87 159.26 444.89 148.89 441.92 4 Y
V
98.97 444.89 148.64 444.89 2 L
2 Z
N
144.34 438.52 146.54 436.51 137.35 430.85 142.14 440.52 4 Y
0 Z
N
144.34 438.52 146.54 436.51 137.35 430.85 142.14 440.52 4 Y
V
100.25 455.78 M
 115.63 457.06 131.25 454.07 139.32 448.3 D
 143.45 445.35 146.76 441.17 144.51 438.7 D
2 Z
N
77.86 528.19 138.99 563.61 R
N
79.67 529.94 136.1 561.86 R
7 X
V
0 X
(AttrListNode) 79.67 555.2 T
(ne) 79.67 543.2 T
(xt) 88.96 543.2 T
(attr) 79.67 531.2 T
77.16 550.31 138.28 550.31 2 L
N
148.89 534.42 148.89 537.4 159.26 534.42 148.89 531.45 4 Y
0 Z
N
148.89 534.42 148.89 537.4 159.26 534.42 148.89 531.45 4 Y
V
98.97 534.42 148.64 534.42 2 L
2 Z
N
144.34 528.05 146.54 526.04 137.35 520.39 142.14 530.05 4 Y
0 Z
N
144.34 528.05 146.54 526.04 137.35 520.39 142.14 530.05 4 Y
V
100.25 545.31 M
 115.63 546.59 131.25 543.6 139.32 537.83 D
 143.45 534.88 146.76 530.7 144.51 528.23 D
2 Z
N
256.85 413.49 531.37 653.11 R
7 X
V
4 15 Q
0 X
(STEPentity) 278.45 643.11 T
2 F
(Entity *eDesc;) 292.85 557.43 T
4 F
(SdaiShape) 278.45 538.43 T
2 F
(\050inherits from STEPentity\051) 349.73 538.43 T
(SdaiString _item_name;) 292.85 519.43 T
(SdaiColor _item_color;) 292.85 500.43 T
(SdaiInteger _number_of_sides;) 292.85 481.43 T
4 F
-0.3 (SdaiRectangle) 278.45 462.43 P
2 F
-0.3 (\050inherits from SdaiShape\051) 373.56 462.43 P
(SdaiReal _height;) 292.85 443.43 T
(SdaiReal _width;) 292.85 424.43 T
256.85 413.49 531.37 653.11 C
256.85 571.43 453.03 624.11 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
370.34 586.76 447.84 620.93 R
7 X
0 0 0 1 0 0 0 K
V
2 15 Q
0 X
(attributes;) 370.34 610.93 T
262.01 574.95 363.68 621.61 R
7 X
V
0.5 H
2 Z
0 X
N
266.18 577.45 359.51 619.11 R
7 X
V
2 10 Q
0 X
(STEP) 266.18 612.45 T
(attrib) 289.37 612.45 T
(uteList) 310.28 612.45 T
(head) 266.18 600.45 T
(tail) 266.18 588.45 T
263.01 606.97 362.01 606.97 2 L
N
256.85 413.49 531.37 653.11 C
54 327.32 540 663.98 C
249.81 413.49 538.42 654.76 R
0.5 H
2 Z
0 X
0 0 0 1 0 0 0 K
N
150.42 603.4 150.42 600.42 140.04 603.4 150.42 606.37 4 Y
0 Z
N
150.42 603.4 150.42 600.42 140.04 603.4 150.42 606.37 4 Y
V
150.67 603.4 263.8 603.4 2 L
2 Z
N
73.24 439.59 75.99 440.72 77.17 429.99 70.48 438.46 4 Y
0 Z
N
73.24 439.59 75.99 440.72 77.17 429.99 70.48 438.46 4 Y
V
73.14 439.82 M
 66.58 455.83 67.43 471.76 65.47 490.06 D
 61.4 528.02 58.17 572.11 67.59 609.77 D
 75.35 640.77 112.83 638.68 141.97 638.1 D
 167.56 637.6 199.02 621.04 217.05 613.31 D
 231.92 606.94 233.34 595.6 263.09 591.35 D
2 Z
N
249.65 639.52 538.57 639.52 2 L
N
250.18 533.05 539.1 533.05 2 L
N
250.64 555.3 539.56 555.3 2 L
N
249.81 455.92 538.73 455.92 2 L
N
250.26 478.16 539.2 478.16 2 L
N
279.61 533.42 280.77 536.16 289.17 529.38 278.45 530.68 4 Y
0 Z
N
279.61 533.42 280.77 536.16 289.17 529.38 278.45 530.68 4 Y
V
229.8 554.52 279.38 533.52 2 L
2 Z
N
277.3 509.9 277.3 512.87 287.68 509.9 277.3 506.92 4 Y
0 Z
N
277.3 509.9 277.3 512.87 287.68 509.9 277.3 506.92 4 Y
V
229.8 509.9 277.05 509.9 2 L
2 Z
N
279.33 482.88 278.36 485.7 289.15 486.23 280.29 480.06 4 Y
0 Z
N
279.33 482.88 278.36 485.7 289.15 486.23 280.29 480.06 4 Y
V
229.8 465.98 279.09 482.8 2 L
2 Z
N
279.61 443.11 278.45 445.85 289.17 447.15 280.76 440.37 4 Y
0 Z
N
279.61 443.11 278.45 445.85 289.17 447.15 280.76 440.37 4 Y
V
229.8 422.07 279.38 443.01 2 L
2 Z
N
281.29 421.16 279.4 423.45 289.3 427.76 283.18 418.86 4 Y
0 Z
N
281.29 421.16 279.4 423.45 289.3 427.76 283.18 418.86 4 Y
V
229.09 378.15 281.1 421 2 L
2 Z
N
59.8 334.51 130.63 361.43 R
N
63.35 336.64 127.8 358.6 R
7 X
V
2 10 Q
0 X
(Attr Dictionary) 63.35 351.93 T
(Entry) 63.35 339.93 T
369.76 334.51 440.59 361.43 R
N
373.3 336.64 437.76 358.6 R
7 X
V
0 X
(Attr Dictionary) 373.3 351.93 T
(Entry) 373.3 339.93 T
137.29 334.51 208.12 361.43 R
N
140.83 336.64 205.29 358.6 R
7 X
V
0 X
(Attr Dictionary) 140.83 351.93 T
(Entry) 140.83 339.93 T
214.78 334.51 285.61 361.43 R
N
218.32 336.64 282.78 358.6 R
7 X
V
0 X
(Attr Dictionary) 218.32 351.93 T
(Entry) 218.32 339.93 T
292.27 334.51 363.1 361.43 R
N
295.81 336.64 360.27 358.6 R
7 X
V
0 X
(Attr Dictionary) 295.81 351.93 T
(Entry) 295.81 339.93 T
446.2 361.01 526.72 387.27 R
N
450.22 363.08 523.5 384.51 R
7 X
V
0 X
(Entity Dictionary) 450.22 377.84 T
(Entry) 450.22 365.84 T
500.07 397.27 503.02 396.81 498.46 387.01 497.13 397.73 4 Y
0 Z
N
500.07 397.27 503.02 396.81 498.46 387.01 497.13 397.73 4 Y
V
382.34 560.85 M
 418.98 560.85 453.58 540.62 476.14 506.03 D
 496.25 475.18 506.12 435.74 500.11 397.52 D
2 Z
N
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
160.95 548.59 236.74 585.42 R
N
163.19 550.41 233.15 583.61 R
7 X
V
0 X
(STEP) 163.19 576.94 T
(attrib) 186.38 576.94 T
(ute) 207.29 576.94 T
(aDesc) 163.19 564.94 T
(\050C++ union\051 ptr) 163.19 552.94 T
160.74 573.26 236.81 573.26 2 L
N
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
160.95 504.43 236.74 541.26 R
N
163.19 506.24 233.15 539.45 R
7 X
V
0 X
(STEP) 163.19 532.78 T
(attrib) 186.38 532.78 T
(ute) 207.29 532.78 T
(aDesc) 163.19 520.78 T
(\050C++ union\051 ptr) 163.19 508.78 T
160.74 529.09 236.81 529.09 2 L
N
160.95 460.26 236.74 497.1 R
N
163.19 462.08 233.15 495.28 R
7 X
V
0 X
(STEP) 163.19 488.61 T
(attrib) 186.38 488.61 T
(ute) 207.29 488.61 T
(aDesc) 163.19 476.61 T
(\050C++ union\051 ptr) 163.19 464.61 T
160.74 484.93 236.81 484.93 2 L
N
160.95 416.1 236.74 452.93 R
N
163.19 417.92 233.15 451.12 R
7 X
V
0 X
(STEP) 163.19 444.45 T
(attrib) 186.38 444.45 T
(ute) 207.29 444.45 T
(aDesc) 163.19 432.45 T
(\050C++ union\051 ptr) 163.19 420.45 T
160.74 440.77 236.81 440.77 2 L
N
160.95 371.94 236.74 408.77 R
N
163.19 373.75 233.15 406.95 R
7 X
V
0 X
(STEP) 163.19 400.29 T
(attrib) 186.38 400.29 T
(ute) 207.29 400.29 T
(aDesc) 163.19 388.29 T
(\050C++ union\051 ptr) 163.19 376.29 T
160.74 396.6 236.81 396.6 2 L
N
147.67 372.44 150.65 372.43 147.64 362.06 144.69 372.45 4 Y
0 Z
N
147.67 372.44 150.65 372.43 147.64 362.06 144.69 372.45 4 Y
V
147.67 372.69 M
 147.91 456.1 153.99 521.94 161.09 521.94 D
2 Z
N
113.71 372.37 116.66 372.35 113.64 362.06 110.75 372.39 4 Y
0 Z
N
113.71 372.37 116.66 372.35 113.64 362.06 110.75 372.39 4 Y
V
113.71 372.62 M
 114.39 481.51 135.77 567.98 161.09 567.98 D
2 Z
N
242.32 372.41 245.29 372.47 242.53 362.06 239.35 372.35 4 Y
0 Z
N
242.32 372.41 245.29 372.47 242.53 362.06 239.35 372.35 4 Y
V
193.67 478.73 M
 219.05 478.73 241.12 432.23 242.32 372.66 D
2 Z
N
297.97 372.35 300.92 372.68 299.11 362.05 295.01 372.02 4 Y
0 Z
N
297.97 372.35 300.92 372.68 299.11 362.05 295.01 372.02 4 Y
V
195.09 434.11 M
 247.03 434.11 293.98 408.1 297.94 372.6 D
2 Z
N
362.86 368.5 364.68 370.85 371.04 362.13 361.03 366.16 4 Y
0 Z
N
362.86 368.5 364.68 370.85 371.04 362.13 361.03 366.16 4 Y
V
194.38 389.48 M
 271.49 389.48 341 385.52 362.66 368.66 D
2 Z
N
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
54 87.98 540 686.02 C
0 0 612 792 C
FMENDPAGE
%%EndPage: "10" 10
%%Page: "11" 11
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
72 750.02 558 750.02 2 L
7 X
0 0 0 1 0 0 0 K
V
2 H
0 Z
0 X
N
72 730.15 558 742.18 R
7 X
V
0 9 Q
0 X
(Entity Instantiation) 207 736.18 T
72 726.98 558 726.98 2 L
7 X
V
0.25 H
0 X
N
72 74.02 558 74.02 2 L
7 X
V
2 Z
0 X
N
133 55.01 539 66.96 R
7 X
V
0 X
(EXPRESS User Gr) 241 60.96 T
(oup: October 1995) 318.85 60.96 T
(11) 553 60.96 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
72 87.98 558 686.02 R
7 X
V
2 10 Q
0 X
(The Re) 207 679.35 T
(gistry class method a) 236.01 679.35 T
(v) 319.97 679.35 T
(ailable for schema-independent creation of entities is a) 324.72 679.35 T
(create function that accepts the name of an entity in an ar) 207 667.35 T
(gument of type string. Using) 435.37 667.35 T
(the string entity name the Re) 207 655.35 T
(gistry class locates the dictionary entry for the entity and) 322.12 655.35 T
(calls the creation function associated with the dictionary entry) 207 643.35 T
(. The resulting entity) 454.64 643.35 T
(instance is returned through a pointer to the base class STEPentity) 207 631.35 T
(.) 471.32 631.35 T
0 F
(5.2) 184.1 601.35 T
(Comple) 207 601.35 T
(x Entity Instantiation) 243.52 601.35 T
2 F
(This section describes the data structures used to instantiate entities where:) 207 585.35 T
3 7 Q
(n) 207 567.35 T
2 10 Q
-0.26 (an instance of a supertype is established through instantiation of more than one of its) 220.54 567.35 P
(subtypes at an) 220.54 555.35 T
(y le) 277.05 555.35 T
(v) 291.52 555.35 T
(el in the EXPRESS inheritance graph, and) 296.37 555.35 T
3 7 Q
(n) 207 540.35 T
2 10 Q
(P) 220.54 540.35 T
(art 21 requires the use of the e) 225.95 540.35 T
(xternal mapping method.) 346.6 540.35 T
(The term comple) 207 525.35 T
(x will be used to refer to entities where the abo) 275.17 525.35 T
(v) 462.76 525.35 T
(e applies.) 467.61 525.35 T
(Se) 207 507.35 T
(v) 216.75 507.35 T
(eral f) 221.6 507.35 T
(actors in\337uenced the choice of implementation of comple) 242.32 507.35 T
(x instances. These) 472.41 507.35 T
(include initial SCL design considerations, compatibility with the e) 207 495.35 T
(xisting SCL toolkit,) 472.13 495.35 T
(and EXPRESS considerations re) 207 483.35 T
(g) 337.12 483.35 T
(arding comple) 342.07 483.35 T
(x instances.) 399.41 483.35 T
(T) 207 465.35 T
(w) 212.31 465.35 T
(o f) 219.43 465.35 T
(actors in\337uenced initial design decisions in the de) 230.16 465.35 T
(v) 429.06 465.35 T
(elopment of SCL entity instan-) 433.91 465.35 T
-0.17 (tiation constructs. In an ef) 207 453.35 P
-0.17 (fort to pro) 310.23 453.35 P
-0.17 (vide an object oriented STEP toolkit, entity instanti-) 350.29 453.35 P
(ation constructs for entities were designed to tak) 207 441.35 T
(e adv) 400.48 441.35 T
(antage of bene\336ts of using C++) 421.61 441.35 T
-0.3 (inheritance. This w) 207 429.35 P
-0.3 (as done in spite of the f) 283.24 429.35 P
-0.3 (act that C++ inheritance is not able to directly) 374.68 429.35 P
(support comple) 207 417.35 T
(x inheritance in EXPRESS. These decisions were made kno) 268.79 417.35 T
(wing the) 508.23 417.35 T
(implementation of comple) 207 405.35 T
(x inheritance w) 312.4 405.35 T
(ould be af) 373.95 405.35 T
(fected. It w) 413.69 405.35 T
(as determined that the) 458.85 405.35 T
(use of comple) 207 393.35 T
(x instances w) 262.95 393.35 T
(ould be handled as e) 316.73 393.35 T
(xceptions. This decision w) 398.23 393.35 T
(as justi\336ed) 504.79 393.35 T
-0.2 (gi) 207 381.35 P
-0.2 (v) 214.53 381.35 P
-0.2 (en the lack of support for comple) 219.38 381.35 P
-0.2 (x inheritance of) 350.76 381.35 P
-0.2 (fered by C++ and the f) 412.86 381.35 P
-0.2 (act that at the) 502.72 381.35 P
(time comple) 207 369.35 T
(x inheritance w) 256.57 369.35 T
(as not commonly used.) 318.12 369.35 T
-0.03 (Based on se) 207 351.35 P
-0.03 (v) 254.46 351.35 P
-0.03 (eral requirements comple) 259.31 351.35 P
-0.03 (x entity instances were implemented using a late-) 360.74 351.35 P
(binding to the schema. When designing the data structures to support comple) 207 339.35 T
(x) 515.15 339.35 T
(instances, the design for single inheritance w) 207 327.35 T
(as once ag) 386.59 327.35 T
(ain con\336rmed. Some le) 428.19 327.35 T
(v) 520.71 327.35 T
(els of) 525.56 327.35 T
(consistenc) 207 315.35 T
(y in the implementation of entity instance data structures were sacri\336ced in) 248.51 315.35 T
(order to preserv) 207 303.35 T
(e the object-oriented nature of the toolkit. Still, compatibility require-) 270.16 303.35 T
-0.07 (ments with the e) 207 291.35 P
-0.07 (xisting SCL constructs remained for the comple) 272.47 291.35 P
-0.07 (x instances solution. In) 463.56 291.35 P
-0.09 (addition, the design needed to limit the proliferation of the number of possible comple) 207 279.35 P
-0.09 (x) 550.59 279.35 P
(instance data structures which, unless carefully a) 207 267.35 T
(v) 402.03 267.35 T
(oided in the data model, results from) 406.83 267.35 T
(ANDOR inheritance being the def) 207 255.35 T
(ault inheritance in EXPRESS. The resulting design) 344.09 255.35 T
-0.07 (pro) 207 243.35 P
-0.07 (vided for a late-bound style implementation based on constructs that already e) 220.18 243.35 P
-0.07 (xisted) 531.68 243.35 P
(in the SCL with a fe) 207 231.35 T
(w additions.) 287.58 231.35 T
-0.41 (The late-bound implementation means that comple) 207 213.35 P
-0.41 (x instances are not prespeci\336ed in the) 408.39 213.35 P
(form of schema-dependent generated C++ classes b) 207 201.35 T
(ut are b) 413.58 201.35 T
(uilt using generic data struc-) 443.37 201.35 T
(tures at run time \050with the help of dictionary information\051.) 207 189.35 T
(Some consistenc) 207 171.35 T
(y between comple) 273.79 171.35 T
(x and non-comple) 346.4 171.35 T
(x entity instances has been sacri-) 418.46 171.35 T
(\336ced while parts of the interf) 207 159.35 T
(ace remain the same. The interf) 322.71 159.35 T
(ace for reading, writing,) 448.68 159.35 T
(and v) 207 147.35 T
(alidating instances remain the same re) 228.69 147.35 T
(g) 381.01 147.35 T
(ardless of whether the instances are) 385.96 147.35 T
(comple) 207 135.35 T
(x or not. The dif) 236.29 135.35 T
(ferences arise when directly accessing information from the) 301.31 135.35 T
(underlying data structures. Since the comple) 207 123.35 T
(x instance implementation is late-bound,) 384.6 123.35 T
(the early-bound attrib) 207 111.35 T
(ute access functions are not implemented. These could be added) 293.45 111.35 T
-0.42 (later via generated casting functions. A function is pro) 207 99.35 P
-0.42 (vided for accessing entity element) 420.96 99.35 P
FMENDPAGE
%%EndPage: "11" 11
%%Page: "12" 12
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
122 55.01 528 66.96 R
7 X
0 0 0 1 0 0 0 K
V
0 9 Q
0 X
(EXPRESS User Gr) 230 60.96 T
(oup: October 1995) 307.85 60.96 T
54 750.02 540 750.02 2 L
7 X
V
2 H
0 Z
0 X
N
54 730.15 540 742.18 R
7 X
V
0 X
(Design of a Software Librar) 162 736.18 T
(y f) 279.12 736.18 T
(or Implementing EXPRESS: The NIST STEP Class Librar) 289.44 736.18 T
(y) 529.6 736.18 T
54 726.98 540 726.98 2 L
7 X
V
0.25 H
0 X
N
54 74.02 540 74.02 2 L
7 X
V
2 Z
0 X
N
(12) 54 60.96 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
54 87.98 540 686.02 R
7 X
V
2 10 Q
0 X
(parts of the comple) 189 679.35 T
(x instance data structures. Once an entity element is accessed the) 265.78 679.35 T
(interf) 189 667.35 T
(ace for late-bound style access to attrib) 210.56 667.35 T
(ute v) 366.43 667.35 T
(alues is consistent with non-comple) 385.9 667.35 T
(x) 528.52 667.35 T
(instances.) 189 655.35 T
54 624.98 540 638.02 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
189 632.04 540 632.04 2 L
0.25 H
2 Z
0 X
0 0 0 1 0 0 0 K
N
54 632.04 180 632.04 2 L
0 Z
N
0 0 612 792 C
0 9 Q
0 X
0 0 0 1 0 0 0 K
(FIGURE  6) 54 618.98 T
1 F
(P) 189 618.98 T
(ar) 194.64 618.98 T
(tial C++ Class De\336nition f) 203 618.98 T
(or STEPcomple) 303.77 618.98 T
(x) 366.52 618.98 T
2 10 Q
(Comple) 189 440.74 T
(x instances are implemented using the STEPentity \050see pre) 220.52 440.74 T
(vious section\051 and) 455.24 440.74 T
(STEPcomple) 189 428.74 T
(x \050see \336gure 6\051 classes. STEPcomple) 241.63 428.74 T
(x, a subtype of STEPentity) 389.79 428.74 T
(, uses the) 496.64 428.74 T
(constructs in STEPentity to de\336ne and manipulate the attrib) 189 416.74 T
(utes de\336ned for a single) 427.68 416.74 T
(entity part of a comple) 189 404.74 T
(x instance. Comple) 279.39 404.74 T
(x instances are b) 356.18 404.74 T
(uilt at run-time from STEP-) 422.35 404.74 T
(comple) 189 392.74 T
(x classes. One STEPcomple) 218.29 392.74 T
(x instance is created for each entity part included in) 330.35 392.74 T
(the mak) 189 380.74 T
(e-up of the comple) 220.84 380.74 T
(x instance. The attrib) 295.95 380.74 T
(utes for each entity part are created) 380.18 380.74 T
(within the STEPentity attrib) 189 368.74 T
(ute list based on entity and attrib) 301.31 368.74 T
(ute information in the) 431.66 368.74 T
(appropriate dictionary entries. STEPcomple) 189 356.74 T
(x contains constructs to link se) 364.38 356.74 T
(v) 487.18 356.74 T
(eral STEP-) 492.03 356.74 T
-0.39 (comple) 189 344.74 P
-0.39 (x classes together to form an entire comple) 218.29 344.74 P
-0.39 (x instance as the sum of the indi) 387.3 344.74 P
-0.39 (vidual) 512.89 344.74 P
(entities de\336ning the comple) 189 332.74 T
(x instance.) 299.68 332.74 T
(STEPcomple) 189 314.75 T
(x rede\336nes virtual functions in STEPentity for reading, writing, and v) 241.63 314.75 T
(ali-) 519.69 314.75 T
(dating the entity\325) 189 302.75 T
(s attrib) 256.78 302.75 T
(ute v) 284.08 302.75 T
(alues based on the con\336guration of STEPcomple) 303.55 302.75 T
(x data) 498.38 302.75 T
-0.27 (structures. The STEPcomple) 189 290.75 P
-0.27 (x read, write, and v) 303.02 290.75 P
-0.27 (alidate functions perform the operations) 378.88 290.75 P
(by calling the STEPentity read, write, or v) 189 278.75 T
(alidate function for each entity part making) 357.9 278.75 T
(up the comple) 189 266.75 T
(x instance. Figure 7 sho) 245.51 266.75 T
(ws the relationships between the STEPentity and) 340.53 266.75 T
(STEPcomple) 189 254.75 T
(x data structures for a particular comple) 241.63 254.75 T
(x instance.) 400.88 254.75 T
-0.3 (Comple) 189 236.75 P
-0.3 (x instances are created at run time by calling the STEPcomple) 220.52 236.75 P
-0.3 (x constructor with) 465.64 236.75 P
(a list of strings containing the names of the entities that mak) 189 224.75 T
(e up the comple) 429.72 224.75 T
(x instance.) 493.17 224.75 T
(The STEPcomple) 189 212.75 T
(x constructor processes each name in the list creating a list of STEP-) 259.68 212.75 T
(comple) 189 200.75 T
(x classes one for each entity contained in the list. Each STEPcomple) 218.29 200.75 T
(x class in) 491.99 200.75 T
(the list initializes a pointer data member to point to the dictionary entry for the entity) 189 188.75 T
(part it represents. It uses that dictionary entry to access the dictionary entries for the) 189 176.75 T
(attrib) 189 164.75 T
(utes and the attrib) 209.91 164.75 T
(utes\325 EXPRESS types. STEPcomple) 281.09 164.75 T
(x uses these attrib) 427.06 164.75 T
(ute dictio-) 498.24 164.75 T
(nary entries to create the list of STEP) 189 152.75 T
(attrib) 338.55 152.75 T
(ute classes where attrib) 359.46 152.75 T
(ute v) 452.29 152.75 T
(alues associated) 471.76 152.75 T
(with the entity part of the comple) 189 140.75 T
(x instance are stored. Attrib) 322.17 140.75 T
(ute types implemented as) 432.78 140.75 T
(C++ b) 189 128.75 T
(uilt-in types are created directly by STEPcomple) 214.25 128.75 T
(x. Attrib) 409.07 128.75 T
(ute types implemented) 442.76 128.75 T
-0.32 (as C++ classes are created by STEPcomple) 189 116.75 P
-0.32 (x through a creation function associated with) 359.81 116.75 P
(the type dictionary entry) 189 104.75 T
(.) 286.39 104.75 T
54 87.98 540 686.02 C
63.14 465.41 530.86 615.98 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
69.14 470.7 524.86 609.98 R
7 X
0 0 0 1 0 0 0 K
V
2 10 Q
0 X
(// STEPentity contains a boolean data member to indicate whether or not it) 213.14 603.32 T
(// is instantiated as a comple) 213.14 589.32 T
(x instance) 326.04 589.32 T
(class) 213.14 575.32 T
4 F
(STEPcomplex) 235.08 575.32 T
2 F
( : public) 295.64 575.32 T
4 F
(STEP) 330.92 575.32 T
(entity) 355.73 575.32 T
2 F
({) 382.67 575.32 T
(public:) 213.14 561.32 T
(STEPcomple) 231.14 547.32 T
(x *sc; // points to the ne) 283.77 547.32 T
(xt entity in the comple) 379.18 547.32 T
(x instance) 469.03 547.32 T
(STEPcomple) 231.14 533.32 T
(x *head; // points to the head entity in the comple) 283.77 533.32 T
(x instance) 481.39 533.32 T
(int visited; // used when reading) 231.14 519.32 T
5 F
(constructor) 231.14 505.32 T
(s, destructor) 277.15 505.32 T
(s, etc) 327.05 505.32 T
(r) 231.14 491.32 T
(ead, write) 234.66 491.32 T
(, validate entity functions) 274.56 491.32 T
2 F
(}) 213.14 477.32 T
54 87.98 540 686.02 C
0 0 612 792 C
FMENDPAGE
%%EndPage: "12" 12
%%Page: "13" 13
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
72 750.02 558 750.02 2 L
7 X
0 0 0 1 0 0 0 K
V
2 H
0 Z
0 X
N
72 730.15 558 742.18 R
7 X
V
0 9 Q
0 X
(Entity Instantiation) 207 736.18 T
72 726.98 558 726.98 2 L
7 X
V
0.25 H
0 X
N
72 74.02 558 74.02 2 L
7 X
V
2 Z
0 X
N
133 55.01 539 66.96 R
7 X
V
0 X
(EXPRESS User Gr) 241 60.96 T
(oup: October 1995) 318.85 60.96 T
(13) 553 60.96 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
72 87.98 558 686.02 R
7 X
V
72 672.98 558 686.02 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
207 680.04 558 680.04 2 L
0.25 H
2 Z
0 X
0 0 0 1 0 0 0 K
N
72 680.04 198 680.04 2 L
0 Z
N
0 0 612 792 C
0 9 Q
0 X
0 0 0 1 0 0 0 K
(FIGURE  7) 72 666.98 T
1 F
(C++ Class Relationships In) 207 666.98 T
(v) 315.36 666.98 T
(olv) 319.64 666.98 T
(ed in Comple) 330.91 666.98 T
(x Entity Instantiation) 383.66 666.98 T
0 10 Q
(5.3) 184.1 347.89 T
(Multiple-Inherited Entity Instantiation) 207 347.89 T
2 F
(This section describes the data structures used to instantiate EXPRESS entities where) 207 331.89 T
(the follo) 207 319.89 T
(wing conditions hold:) 240.36 319.89 T
3 7 Q
(n) 207 301.89 T
2 10 Q
(at least one entity in the EXPRESS inheritance graph specifying the entity to be) 220.54 301.89 T
(instantiated has) 220.54 289.89 T
5 F
(mor) 284.98 289.89 T
(e) 300.72 289.89 T
2 F
( than one supertype, and) 305.16 289.89 T
3 7 Q
(n) 207 274.89 T
2 10 Q
(an instance of a supertype is established through instantiation of only one of its sub-) 220.54 274.89 T
(types at an) 220.54 262.89 T
(y le) 263.16 262.89 T
(v) 277.63 262.89 T
(el in the EXPRESS inheritance graph) 282.48 262.89 T
2 8 Q
(10) 432.19 266.89 T
2 10 Q
(.) 440.19 262.89 T
(A multiple-inherited entity instance is represented by a generated class which inherits) 207 247.89 T
-0.19 (from STEPentity) 207 235.89 P
-0.19 (. The classes generated to represent multiple-inherited entities are iden-) 274.22 235.89 P
(tical to single-inherited entity classes e) 207 223.89 T
(xcept that the constructors of the multiple-inher-) 362.11 223.89 T
(ited classes dif) 207 211.89 T
(fer) 265.63 211.89 T
(. The constructors for multiple-inheritance create additional structure) 276.18 211.89 T
-0.14 (for representing the multiple parents. The representation of multiple-inherited instances) 207 199.89 P
(start with the same structure as single-inheritance entities b) 207 187.89 T
(ut link themselv) 443.43 187.89 T
(es to addi-) 507.73 187.89 T
(tional single-inheritance entities to represent multiple parents.) 207 175.89 T
(The SCL implementation of multiple-inherited entities creates a single-inherited entity) 207 157.89 T
-0.2 (based on a primary inheritance path) 207 145.89 P
2 8 Q
-0.16 (11) 349.03 149.89 P
2 10 Q
-0.2 (. The entity class associated with the primary path) 357.03 145.89 P
72 100.98 558 131.01 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
207 108.98 351 108.98 2 L
0.25 H
2 Z
0 X
0 0 0 1 0 0 0 K
N
0 0 612 792 C
2 9 Q
0 X
0 0 0 1 0 0 0 K
(10.  If this condition is not met the entity is complex and is handled as described previously.) 207 94.98 T
72 87.98 558 686.02 C
0 0 0 1 0 0 0 K
73.32 384.55 556.68 663.98 C
0 0 0 1 0 0 0 K
452.06 634.21 500.95 651.21 R
7 X
0 0 0 1 0 0 0 K
V
0.5 H
2 Z
0 X
N
111.78 598.3 193.24 626.91 R
N
115.86 600.56 189.98 623.9 R
7 X
V
2 12 Q
0 X
(Dictionary) 115.86 615.9 T
(Entry for A) 115.86 601.9 T
223.13 577.05 311.39 654.96 R
N
228.22 580.29 305.61 650.92 R
7 X
V
4 10 Q
0 X
(STEP) 228.22 644.26 T
(entity) 253.03 644.26 T
2 F
(attrib) 242.62 632.26 T
(utes) 263.53 632.26 T
(eDesc) 242.62 620.26 T
4 F
(STEPcomplex) 228.22 608.26 T
2 F
(sc) 242.62 596.26 T
(head) 242.62 584.26 T
223.13 483.98 311.39 561.89 R
N
228.22 487.22 305.61 557.85 R
7 X
V
4 F
0 X
(STEP) 228.22 551.18 T
(entity) 253.03 551.18 T
2 F
(attrib) 242.62 539.18 T
(utes) 263.53 539.18 T
(eDesc) 242.62 527.18 T
4 F
(STEPcomplex) 228.22 515.18 T
2 F
(sc) 242.62 503.18 T
(head) 242.62 491.18 T
223.13 390.9 311.39 468.82 R
N
228.22 394.15 305.61 464.78 R
7 X
V
4 F
0 X
(STEP) 228.22 458.11 T
(entity) 253.03 458.11 T
2 F
(attrib) 242.62 446.11 T
(utes) 263.53 446.11 T
(eDesc) 242.62 434.11 T
4 F
(STEPcomplex) 228.22 422.11 T
2 F
(sc = null) 242.62 410.11 T
(head) 242.62 398.11 T
455.61 637.61 497.39 647.81 R
7 X
V
2 12 Q
0 X
(Entity A) 455.61 639.81 T
485.37 577.19 532.12 594.19 R
7 X
V
0 X
N
488.77 580.59 528.72 590.79 R
7 X
V
0 X
-0.4 (Entity C) 488.77 582.79 P
423.32 577.19 470.07 594.19 R
7 X
V
0 X
N
426.72 580.59 466.67 590.79 R
7 X
V
0 X
-0.4 (Entity B) 426.72 582.79 P
444.55 600.6 444.55 615.9 2 L
2 H
N
506.6 601.45 506.6 615.5 2 L
N
444.34 615.9 506.39 615.9 2 L
N
475.58 632.05 475.58 615.9 2 L
N
111.78 505.23 193.24 533.84 R
0.5 H
N
115.86 507.49 189.98 530.83 R
7 X
V
0 X
(Dictionary) 115.86 522.83 T
(Entry for B) 115.86 508.83 T
111.78 412.15 193.24 440.77 R
N
115.86 414.41 189.98 437.76 R
7 X
V
0 X
(Dictionary) 115.86 429.76 T
(Entry for C) 115.86 415.76 T
127.93 632.3 193.24 660.91 R
N
131.2 634.56 190.62 657.9 R
7 X
V
0 X
(Attrib) 131.2 649.9 T
(ute) 159.63 649.9 T
(List for A) 131.2 635.9 T
127.93 539.22 193.24 567.84 R
N
131.2 541.48 190.62 564.83 R
7 X
V
0 X
(Attrib) 131.2 556.83 T
(ute) 159.63 556.83 T
(List for B) 131.2 542.83 T
127.93 446.15 193.24 474.77 R
N
131.2 448.41 190.62 471.76 R
7 X
V
0 X
(Attrib) 131.2 463.76 T
(ute) 159.63 463.76 T
(List for C) 131.2 449.76 T
235.45 634.71 192.96 649.16 2 L
N
204.02 617.37 204.6 614.45 193.84 615.33 203.44 620.29 4 Y
0 Z
N
204.02 617.37 204.6 614.45 193.84 615.33 203.44 620.29 4 Y
V
235.45 623.66 204.27 617.42 2 L
2 Z
N
236.3 448.56 193.8 463.01 2 L
N
204.87 431.23 205.45 428.31 194.69 429.19 204.29 434.14 4 Y
0 Z
N
204.87 431.23 205.45 428.31 194.69 429.19 204.29 434.14 4 Y
V
236.3 437.51 205.12 431.27 2 L
2 Z
N
237.15 541.21 194.65 555.66 2 L
N
205.72 523.87 206.3 520.95 195.54 521.84 205.14 526.79 4 Y
0 Z
N
205.72 523.87 206.3 520.95 195.54 521.84 205.14 526.79 4 Y
V
237.15 530.16 205.97 523.92 2 L
2 Z
N
320.93 561.64 322.27 558.98 311.66 556.98 319.59 564.3 4 Y
0 Z
N
320.93 561.64 322.27 558.98 311.66 556.98 319.59 564.3 4 Y
V
267.75 599.01 M
 293.04 599.01 315.81 592.9 325.28 583.57 D
 332.64 576.33 331.58 567 321.16 561.76 D
2 Z
N
320.93 468.99 322.27 466.34 311.66 464.33 319.59 471.65 4 Y
0 Z
N
320.93 468.99 322.27 466.34 311.66 464.33 319.59 471.65 4 Y
V
267.75 506.36 M
 293.04 506.36 315.81 500.25 325.28 490.92 D
 332.64 483.68 331.58 474.36 321.16 469.11 D
2 Z
N
320.43 630.1 319.35 627.33 310.76 633.88 321.52 632.87 4 Y
0 Z
N
320.43 630.1 319.35 627.33 310.76 633.88 321.52 632.87 4 Y
V
320.66 630.01 M
 336.02 624 339.95 612.95 331.55 604.01 D
 321.53 593.35 295.35 586.26 266.05 586.26 D
2 Z
N
322.46 633.74 321.38 630.97 312.78 637.52 323.55 636.52 4 Y
0 Z
N
322.46 633.74 321.38 630.97 312.78 637.52 323.55 636.52 4 Y
V
322.7 633.65 M
 361.2 618.63 379.79 584.16 369.62 552.26 D
 358.67 517.93 316.43 493.61 267.75 493.61 D
2 Z
N
324.22 639.34 323.01 636.62 314.75 643.54 325.42 642.05 4 Y
0 Z
N
324.22 639.34 323.01 636.62 314.75 643.54 325.42 642.05 4 Y
V
324.45 639.24 M
 376.65 616.06 403.99 558.21 392.86 502.48 D
 380.98 443.04 327.45 400.12 265.2 400.12 D
2 Z
N
406.09 545.35 544.65 571.7 R
7 X
V
0 X
(Implement an ABC entity) 406.09 563.7 T
(gi) 406.09 549.7 T
(v) 415.13 549.7 T
(en the abo) 420.95 549.7 T
(v) 470.09 549.7 T
(e hierarch) 475.91 549.7 T
(y) 523.49 549.7 T
(.) 528.71 549.7 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
2 H
90 450 2.5 2.5 506.79 597.5 A
90 450 2.5 2.5 444.07 597.5 A
0 0 0 1 0 0 0 K
72 87.98 558 686.02 C
0 0 612 792 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "13" 13
%%Page: "14" 14
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
122 55.01 528 66.96 R
7 X
0 0 0 1 0 0 0 K
V
0 9 Q
0 X
(EXPRESS User Gr) 230 60.96 T
(oup: October 1995) 307.85 60.96 T
54 750.02 540 750.02 2 L
7 X
V
2 H
0 Z
0 X
N
54 730.15 540 742.18 R
7 X
V
0 X
(Design of a Software Librar) 162 736.18 T
(y f) 279.12 736.18 T
(or Implementing EXPRESS: The NIST STEP Class Librar) 289.44 736.18 T
(y) 529.6 736.18 T
54 726.98 540 726.98 2 L
7 X
V
0.25 H
0 X
N
54 74.02 540 74.02 2 L
7 X
V
2 Z
0 X
N
(14) 54 60.96 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
54 87.98 540 686.02 R
7 X
V
2 10 Q
0 X
(will be referred to as the primary entity) 189 679.35 T
(. The C++ class constructors for the primary) 345.26 679.35 T
(entity create additional single-inherited entities to represent the additional parents.) 189 667.35 T
-0.14 (These additional parent entities are link) 189 655.35 P
-0.14 (ed through a list implemented using STEPentity) 346.24 655.35 P
(data members ne) 189 643.35 T
(xtMiEntity and headMiEntity) 256.61 643.35 T
(. When these additional parents are) 374.3 643.35 T
(created, multiple parents associated with them are ag) 189 631.35 T
(ain handled in the same manner) 400.57 631.35 T
(.) 526.94 631.35 T
-0.14 (The creation of a multiple-inherited instance is dependent upon the ordering of the C++) 189 613.35 P
(constructor calls and uses a constructor generated to handle the case of multiple inherit-) 189 601.35 T
(ance. When non-virtual C++ inheritance is used, the ordering of the constructor calls is) 189 589.35 T
(speci\336ed and guaranteed to start with the base class\325) 189 577.35 T
(s constructor and proceed do) 397.85 577.35 T
(wn) 512.57 577.35 T
-0.28 (through the parent classes\325 constructors until the constructor for the lo) 189 565.35 P
-0.28 (west-le) 466.51 565.35 P
-0.28 (v) 495.14 565.35 P
-0.28 (el class is) 499.99 565.35 P
-0.13 (called. Multiple-inherited entity classes are designed such that the resulting order of the) 189 553.35 P
-0.38 (constructor calls causes the primary entity\325) 189 541.35 P
-0.38 (s list of attrib) 358.46 541.35 P
-0.38 (utes to be created with a speci\336c) 410.18 541.35 P
-0.26 (order) 189 529.35 P
-0.26 (.) 209.55 529.35 P
2 8 Q
-0.2 (12) 212.05 533.35 P
2 10 Q
-0.26 ( When a multiple-inherited instance is created, all the constructors for entities in) 220.05 529.35 P
-0.37 (the primary inheritance path use the same constructor calls as single-inherited entities.) 189 517.35 P
2 8 Q
-0.3 (13) 529.87 521.35 P
2 10 Q
-0.1 (When a constructor is reached for an entity whose EXPRESS de\336nition is de\336ned to be) 189 505.35 P
-0.29 (multiple-inherited, it instantiates ne) 189 493.35 P
-0.29 (w single-inherited classes representing its additional) 330.1 493.35 P
(parents. The constructors used to create the additional parents accept as an ar) 189 481.35 T
(gument a) 496.79 481.35 T
-0.22 (pointer to the primary entity) 189 469.35 P
-0.22 (. This ne) 300.25 469.35 P
-0.22 (w parent entity uses this o) 334.29 469.35 P
-0.22 (v) 437.22 469.35 P
-0.22 (erloaded constructor for) 442.07 469.35 P
(each class created in its inheritance hierarch) 189 457.35 T
(y) 365 457.35 T
(. The constructors in this \322secondary\323) 369.35 457.35 T
(inheritance hierarch) 189 445.35 T
(y add the attrib) 268.64 445.35 T
(utes associated with each entity in the hierarch) 328.71 445.35 T
(y to) 515.01 445.35 T
(the STEP) 189 433.35 T
(attrib) 226.91 433.35 T
(ute list of the primary entity) 247.82 433.35 T
(, which w) 359.11 433.35 T
(as passed as an ar) 398.17 433.35 T
(gument to the) 468.52 433.35 T
(constructors. When a secondary parent entity reaches a constructor for an entity that is) 189 421.35 T
-0.05 (multiply inherited, it operates in the same manner creating additional parent entities for) 189 409.35 P
-0.11 (each additional parent and passing on the primary entity pointer) 189 397.35 P
-0.11 (. In this w) 442.71 397.35 P
-0.11 (ay a complete) 482.29 397.35 P
-0.27 (list of all the attrib) 189 385.35 P
-0.27 (utes is b) 261.63 385.35 P
-0.27 (uilt up in the proper order in the primary entity\325) 293.68 385.35 P
-0.27 (s attrib) 481.55 385.35 P
-0.27 (ute list.) 508.58 385.35 P
(Figure 8 illustrates the basic components of a multiply-inherited instantiation of an) 189 367.35 T
(entity G. The primary inheritance path is A, B, G. Entity G is instantiated in the same) 189 355.35 T
(manner as it w) 189 343.35 T
(ould be if it did not contain multiple inheritance. F) 247.5 343.35 T
(our entities are instan-) 449.57 343.35 T
-0.17 (tiated: one each for entities G, D, E, and F) 189 331.35 P
-0.17 (. Entities G, D, E, and F are link) 355.56 331.35 P
-0.17 (ed together to) 483.01 331.35 P
(form a complete entity G through a link) 189 319.35 T
(ed list \050implemented via the ne) 348.05 319.35 T
(xtMiEntity) 471.5 319.35 T
-0.21 (pointers\051 located in G, D, E, and F\325) 189 307.35 P
-0.21 (s STEPentity base classes. The \336rst entity element in) 328.04 307.35 P
-0.19 (this link) 189 295.35 P
-0.19 (ed list is entity G follo) 221.22 295.35 P
-0.19 (wed by entities D, E, and F) 309.76 295.35 P
-0.19 (. Each of the four entities ha) 416.7 295.35 P
-0.19 (v) 528.4 295.35 P
-0.19 (e) 533.25 295.35 P
-0.24 (a pointer) 189 283.35 P
-0.24 (, headMiEntity located in their STEPentity base class, which points at entity G.) 223.63 283.35 P
-0.25 (The headMiEntity data member is used by each entity making up entity G to indicate its) 189 271.35 P
-0.13 (ultimate identity as a G instance. Each entity instantiated to mak) 189 259.35 P
-0.13 (e up entity G also has a) 445.09 259.35 P
(pointer to its dictionary entry so that it kno) 189 247.35 T
(ws necessary information about itself used) 359.86 247.35 T
54 206.98 540 237.01 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
189 214.98 333 214.98 2 L
0.25 H
2 Z
0 X
0 0 0 1 0 0 0 K
N
0 0 612 792 C
2 9 Q
0 X
0 0 0 1 0 0 0 K
(11.  A single supertype/subtype path is followed in the EXPRESS inheritance graph from a root) 189 200.98 T
(parent down to the leaf entity defining the multiple-inherited instance. This path in the graph is) 189 190.98 T
-0.1 (defined by proceeding upward from the multiple-inherited entity through the parents that are first) 189 180.98 P
(mentioned in the EXPRESS SUBTYPE OF definition of the entity. This path will be referred to) 189 170.98 T
(as the primary inheritance path.) 189 160.98 T
(12.  The proper ordering of the attributes is the correct ordering for reading attributes from and) 189 147.98 T
(writing attributes to a Part 21 file.) 189 137.98 T
(13.  Recall that each of these constructors creates a STEPattribute class for each attribute it) 189 124.98 T
-0.19 (defines and adds the STEPattribute to the primary entity\325s STEPattribute list. Each STEPattribute) 189 114.98 P
(class points to the storage area for the attribute which is defined within the class being con-) 189 104.98 T
(structed.) 189 94.98 T
FMENDPAGE
%%EndPage: "14" 14
%%Page: "15" 15
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
72 750.02 558 750.02 2 L
7 X
0 0 0 1 0 0 0 K
V
2 H
0 Z
0 X
N
72 730.15 558 742.18 R
7 X
V
0 9 Q
0 X
(Entity Instantiation) 207 736.18 T
72 726.98 558 726.98 2 L
7 X
V
0.25 H
0 X
N
72 74.02 558 74.02 2 L
7 X
V
2 Z
0 X
N
133 55.01 539 66.96 R
7 X
V
0 X
(EXPRESS User Gr) 241 60.96 T
(oup: October 1995) 318.85 60.96 T
(15) 553 60.96 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
72 87.98 558 686.02 R
7 X
V
2 10 Q
0 X
(for reading, writing, v) 207 679.35 T
(alidating, etc. itself. Entity G\325) 294.79 679.35 T
(s STEP) 413.4 679.35 T
(attrib) 442.98 679.35 T
(ute list contains the) 463.89 679.35 T
(complete list of attrib) 207 667.35 T
(utes for all of G\325) 292.63 667.35 T
(s attrib) 358.73 667.35 T
(utes \050including ones inherited through B,) 386.03 667.35 T
(D, and F\051. This attrib) 207 655.35 T
(ute list is ordered according to ho) 291.24 655.35 T
(w the attrib) 424.86 655.35 T
(utes are read from or) 470.21 655.35 T
(written to a P) 207 643.35 T
(art 21 \336le.) 260.46 643.35 T
72 612.98 558 626.02 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
207 620.04 558 620.04 2 L
0.25 H
2 Z
0 X
0 0 0 1 0 0 0 K
N
72 620.04 198 620.04 2 L
0 Z
N
0 0 612 792 C
0 9 Q
0 X
0 0 0 1 0 0 0 K
(FIGURE  8) 72 606.98 T
1 F
(C++ Class Relationships In) 207 606.98 T
(v) 315.36 606.98 T
(olv) 319.64 606.98 T
(ed in Multiple-Inher) 330.91 606.98 T
(ited Entity Instantiation) 407.57 606.98 T
2 10 Q
(The creation of the data structures making up entity instance G in) 207 259.6 T
(v) 468.5 259.6 T
(olv) 473.3 259.6 T
(es the follo) 485.93 259.6 T
(wing) 530.12 259.6 T
(rele) 207 247.6 T
(v) 221.74 247.6 T
(ant actions in order:) 226.49 247.6 T
3 7 Q
(n) 207 229.6 T
2 10 Q
(G\325) 220.54 229.6 T
(s STEPentity constructor creates its STEP) 230.54 229.6 T
(attrib) 398.44 229.6 T
(ute list.) 419.35 229.6 T
3 7 Q
(n) 207 214.6 T
2 10 Q
(A) 220.54 214.6 T
(\325) 226.65 214.6 T
(s constructor adds A) 229.43 214.6 T
(\325) 310.25 214.6 T
(s attrib) 313.03 214.6 T
(utes to G\325) 340.33 214.6 T
(s STEP) 379.22 214.6 T
(attrib) 408.8 214.6 T
(ute list.) 429.71 214.6 T
3 7 Q
(n) 207 199.6 T
2 10 Q
(B\325) 220.54 199.6 T
(s constructor adds B\325) 229.99 199.6 T
(s attrib) 314.15 199.6 T
(utes to G\325) 341.45 199.6 T
(s STEP) 380.34 199.6 T
(attrib) 409.92 199.6 T
(ute list.) 430.83 199.6 T
3 7 Q
(n) 207 184.6 T
2 10 Q
(G\325) 220.54 184.6 T
(s constructor assigns its headMiEntity to point at itself and creates its alternate) 230.54 184.6 T
(parent D pro) 220.54 172.6 T
(viding a pointer to itself as an ar) 270.93 172.6 T
(gument to D\325) 399.9 172.6 T
(s constructor) 452.68 172.6 T
(.) 503.51 172.6 T
3 7 Q
(n) 207 157.6 T
2 10 Q
(D\325) 220.54 157.6 T
(s STEPentity constructor is called.) 230.54 157.6 T
3 7 Q
(n) 207 142.6 T
2 10 Q
(C\325) 220.54 142.6 T
(s constructor \050with a pointer to G ar) 229.99 142.6 T
(gument\051 adds C\325) 372.84 142.6 T
(s attrib) 438.95 142.6 T
(utes to G\325) 466.25 142.6 T
(s STEP) 505.14 142.6 T
(at-) 534.72 142.6 T
(trib) 220.54 130.6 T
(ute list.) 234.23 130.6 T
3 7 Q
(n) 207 115.6 T
2 10 Q
(D\325) 220.54 115.6 T
(s constructor \050with a pointer to G ar) 230.54 115.6 T
(gument\051 mak) 373.39 115.6 T
(es its headMiEntity point at G) 426.34 115.6 T
-0.27 (and creates its alternate parent E sending its G ar) 220.54 103.6 P
-0.27 (gument pointer in as an ar) 413.15 103.6 P
-0.27 (gument to) 515.76 103.6 P
(E\325) 220.54 91.6 T
(s constructor) 229.43 91.6 T
(.) 280.26 91.6 T
72 87.98 558 686.02 C
0 0 0 1 0 0 0 K
76.51 284.27 553.49 603.98 C
0 0 0 1 0 0 0 K
413.71 482.92 460.46 499.92 R
7 X
0 0 0 1 0 0 0 K
V
0.5 H
2 Z
0 X
N
213.11 287.67 303.91 365.59 R
N
218.35 290.92 301.37 361.55 R
7 X
V
4 10 Q
0 X
(STEP) 218.35 354.88 T
(entity) 243.16 354.88 T
2 F
(attrib) 232.75 342.88 T
(utes) 253.66 342.88 T
(eDesc) 232.75 330.88 T
(headMiEntity) 232.75 318.88 T
(ne) 232.75 306.88 T
(xtMiEntity =0) 242.04 306.88 T
4 F
(SdaiF) 218.35 294.88 T
417.11 486.32 457.06 496.52 R
7 X
V
2 F
0 X
(Entity G) 417.11 489.85 T
382.6 538.87 429.35 555.87 R
7 X
V
0 X
N
386 542.27 425.95 552.47 R
7 X
V
0 X
(Entity B) 386 545.8 T
444.65 538.87 491.4 555.87 R
7 X
V
0 X
N
448.05 542.27 488 552.47 R
7 X
V
0 X
(Entity D) 448.05 545.8 T
468.24 537.87 468.24 521.63 2 L
2 H
N
406.19 537.87 406.19 521.89 2 L
N
468.45 521.63 406.41 521.63 2 L
N
437.22 505.48 437.22 521.63 2 L
N
104.31 308.92 185.77 337.54 R
0.5 H
N
108.39 311.19 182.51 334.53 R
7 X
V
0 X
(Dictionary Entry) 108.39 327.86 T
(for F) 108.39 315.86 T
120.46 342.92 185.77 371.54 R
N
123.73 345.19 183.15 368.53 R
7 X
V
0 X
(Attr List for F) 123.73 361.86 T
228.83 345.33 186.33 359.78 2 L
N
197.4 328 197.98 325.08 187.22 325.96 196.82 330.92 4 Y
0 Z
N
197.4 328 197.98 325.08 187.22 325.96 196.82 330.92 4 Y
V
228.83 334.28 197.65 328.05 2 L
2 Z
N
383.32 579.3 430.06 596.3 R
7 X
V
0 X
N
386.71 582.7 426.66 592.9 R
7 X
V
0 X
(Entity A) 386.71 586.23 T
406.51 578.14 406.51 561.74 2 L
2 H
N
445.15 579.3 491.9 596.3 R
7 X
V
0.5 H
0 X
N
448.55 582.7 488.5 592.9 R
7 X
V
0 X
(Entity C) 448.55 586.23 T
468.35 578.14 468.35 561.74 2 L
2 H
N
213.11 484.02 303.91 586.58 R
0.5 H
N
218.35 488.3 301.37 581.27 R
7 X
V
4 F
0 X
(STEP) 218.35 574.6 T
(entity) 243.16 574.6 T
2 F
(attrib) 232.75 562.6 T
(utes) 253.66 562.6 T
(eDesc) 232.75 550.6 T
(headMiEntity) 232.75 538.6 T
(ne) 232.75 526.6 T
(xtMiEntity) 242.04 526.6 T
4 F
(SdaiA) 218.35 514.6 T
(SdaiB) 218.35 502.6 T
(SdaiG) 218.35 490.6 T
104.31 529.92 185.77 558.54 R
N
108.39 532.18 182.51 555.52 R
7 X
V
2 F
0 X
(Dictionary Entry) 108.39 548.86 T
(for G) 108.39 536.86 T
113.87 563.92 185.77 592.53 R
N
117.47 566.18 182.89 589.52 R
7 X
V
0 X
(Attr List for) 117.47 582.86 T
(A,B,C,E,D,F) 117.47 570.86 T
(,G) 168.62 570.86 T
228.83 566.33 186.33 580.78 2 L
N
197.4 548.99 197.98 546.07 187.22 546.96 196.82 551.91 4 Y
0 Z
N
197.4 548.99 197.98 546.07 187.22 546.96 196.82 551.91 4 Y
V
228.83 555.28 197.65 549.04 2 L
2 Z
N
498.91 579.3 545.66 596.3 R
7 X
V
0 X
N
502.31 582.7 542.26 592.9 R
7 X
V
0 X
(Entity E) 502.31 586.23 T
522.2 578.14 522.2 568.54 2 L
2 H
N
522.32 568.54 487.47 568.54 2 L
N
487.05 560.85 487.05 568.5 2 L
N
213.11 380.32 303.91 469.29 R
0.5 H
N
218.35 384.03 301.37 464.67 R
7 X
V
4 F
0 X
(STEP) 218.35 458.01 T
(entity) 243.16 458.01 T
2 F
(attrib) 232.75 446.01 T
(utes) 253.66 446.01 T
(eDesc) 232.75 434.01 T
(headMiEntity) 232.75 422.01 T
(ne) 232.75 410.01 T
(xtMiEntity) 242.04 410.01 T
4 F
(SdaiC) 218.35 398.01 T
(SdaiD) 218.35 386.01 T
104.31 412.62 185.77 441.24 R
N
108.39 414.88 182.51 438.23 R
7 X
V
2 F
0 X
(Dictionary Entry) 108.39 431.56 T
(for D) 108.39 419.56 T
120.46 446.62 185.77 475.24 R
N
123.73 448.88 183.15 472.23 R
7 X
V
0 X
(Attr List for) 123.73 465.56 T
(C,E,D) 123.73 453.56 T
228.83 449.03 186.33 463.48 2 L
N
197.4 431.69 197.98 428.78 187.22 429.66 196.82 434.61 4 Y
0 Z
N
197.4 431.69 197.98 428.78 187.22 429.66 196.82 434.61 4 Y
V
228.83 437.98 197.65 431.74 2 L
2 Z
N
500.75 538.87 547.5 555.87 R
7 X
V
0 X
N
504.15 542.27 544.1 552.47 R
7 X
V
0 X
(Entity F) 504.15 545.8 T
524.36 537.87 524.36 521.63 2 L
2 H
N
524.55 521.63 469.3 521.63 2 L
N
351.51 388.67 439.76 466.59 R
0.5 H
N
357.28 391.92 434.67 462.55 R
7 X
V
4 F
0 X
(STEP) 357.28 455.88 T
(entity) 382.09 455.88 T
2 F
(attrib) 371.68 443.88 T
(utes) 392.59 443.88 T
(eDesc) 371.68 431.88 T
(headMiEntity) 371.68 419.88 T
(Ne) 371.68 407.88 T
(xtMiEntity) 383.19 407.88 T
4 F
(SdaiE) 357.28 395.88 T
469.65 409.92 551.12 438.54 R
N
472.91 412.18 547.03 435.53 R
7 X
V
2 F
0 X
(Dictionary Entry) 472.91 428.86 T
(for E) 472.91 416.86 T
469.65 443.92 534.96 472.54 R
N
472.27 446.18 531.69 469.53 R
7 X
V
0 X
-0 (Attr List for E) 472.27 462.86 P
416.67 445.17 469.09 460.78 2 L
N
457.88 428.07 458.21 431.02 468.19 426.89 457.54 425.11 4 Y
0 Z
N
457.88 428.07 458.21 431.02 468.19 426.89 457.54 425.11 4 Y
V
403.33 434.33 457.63 428.1 2 L
2 Z
N
315.71 580.48 315.41 577.52 305.38 581.54 316.02 583.44 4 Y
0 Z
N
315.71 580.48 315.41 577.52 305.38 581.54 316.02 583.44 4 Y
V
292.58 541.68 M
 308.25 541.03 330.57 544.3 328.5 567.18 D
 327.84 574.53 322.49 579.79 315.96 580.45 D
2 Z
N
313.58 459.2 314.02 456.25 303.3 457.67 313.14 462.15 4 Y
0 Z
N
313.58 459.2 314.02 456.25 303.3 457.67 313.14 462.15 4 Y
V
290.11 528.95 M
 323.2 531.47 334.54 510.65 330.76 479.38 D
 329.99 472.98 324.96 460.9 313.82 459.24 D
2 Z
N
204.83 514.91 202.93 517.2 212.8 521.55 206.74 512.63 4 Y
0 Z
N
204.83 514.91 202.93 517.2 212.8 521.55 206.74 512.63 4 Y
V
228.8 424.38 M
 205.14 420.74 199.29 450.86 200.75 466.03 D
 202.18 480.8 194.99 506.71 204.64 514.75 D
2 Z
N
204.11 528.87 203.43 531.77 214.21 531.27 204.8 525.98 4 Y
0 Z
N
204.11 528.87 203.43 531.77 214.21 531.27 204.8 525.98 4 Y
V
229.17 321.83 M
 213.83 325.98 203.82 335.14 206.39 348.61 D
 215.34 395.5 193.33 450.17 189.17 496 D
 188.1 507.8 188.84 525.24 203.87 528.81 D
2 Z
N
341.48 431.55 340.46 434.34 351.23 435.12 342.51 428.75 4 Y
0 Z
N
341.48 431.55 340.46 434.34 351.23 435.12 342.51 428.75 4 Y
V
290 412.67 341.25 431.46 2 L
2 Z
N
318.97 587.98 319.53 585.05 308.77 586.04 318.41 590.9 4 Y
0 Z
N
318.97 587.98 319.53 585.05 308.77 586.04 318.41 590.9 4 Y
V
367.31 422.7 M
 350.42 447.55 354.02 476.32 350.11 503.86 D
 347.89 519.58 359.83 533.56 359.11 548.28 D
 357.93 572.51 342.75 592.5 319.22 588.02 D
2 Z
N
314.81 360.35 315.18 357.4 304.53 359.04 314.43 363.29 4 Y
0 Z
N
314.81 360.35 315.18 357.4 304.53 359.04 314.43 363.29 4 Y
V
368.16 410.85 M
 337.11 418.37 328.93 386.85 322.18 367.17 D
 321.07 363.92 318.56 360.82 315.06 360.38 D
2 Z
N
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
2 H
90 450 2.5 2.5 486.68 558.16 A
90 450 2.5 2.5 437.22 502.32 A
90 450 2.5 2.5 406.82 558.16 A
90 450 2.5 2.5 468.39 558.16 A
0 0 0 1 0 0 0 K
72 87.98 558 686.02 C
0 0 612 792 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "15" 15
%%Page: "16" 16
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
122 55.01 528 66.96 R
7 X
0 0 0 1 0 0 0 K
V
0 9 Q
0 X
(EXPRESS User Gr) 230 60.96 T
(oup: October 1995) 307.85 60.96 T
54 750.02 540 750.02 2 L
7 X
V
2 H
0 Z
0 X
N
54 730.15 540 742.18 R
7 X
V
0 X
(Design of a Software Librar) 162 736.18 T
(y f) 279.12 736.18 T
(or Implementing EXPRESS: The NIST STEP Class Librar) 289.44 736.18 T
(y) 529.6 736.18 T
54 726.98 540 726.98 2 L
7 X
V
0.25 H
0 X
N
54 74.02 540 74.02 2 L
7 X
V
2 Z
0 X
N
(16) 54 60.96 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
54 87.98 540 686.02 R
7 X
V
3 7 Q
0 X
(n) 189 679.35 T
2 10 Q
(E\325) 202.54 679.35 T
(s STEPentity constructor is called.) 211.43 679.35 T
3 7 Q
(n) 189 664.35 T
2 10 Q
(E\325) 202.54 664.35 T
(s constructor \050with a pointer to G ar) 211.43 664.35 T
(gument\051 mak) 354.28 664.35 T
(es its headMiEntity point at G) 407.23 664.35 T
(and adds E\325) 202.54 652.35 T
(s attrib) 249.2 652.35 T
(utes to G\325) 276.5 652.35 T
(s STEP) 315.39 652.35 T
(attrib) 344.97 652.35 T
(ute list.) 365.88 652.35 T
3 7 Q
(n) 189 637.35 T
2 10 Q
-0.14 (D\325) 202.54 637.35 P
-0.14 (s constructor \050with a pointer to G ar) 212.54 637.35 P
-0.14 (gument\051 assigns E to its ne) 354.43 637.35 P
-0.14 (xtMiEntity pointer) 461.09 637.35 P
-0.14 (.) 535.14 637.35 P
(It then adds D\325) 202.54 625.35 T
(s attrib) 261.7 625.35 T
(utes to G\325) 289 625.35 T
(s STEP) 327.89 625.35 T
(attrib) 357.47 625.35 T
(ute list.) 378.38 625.35 T
3 7 Q
(n) 189 610.35 T
2 10 Q
-0.09 (G\325) 202.54 610.35 P
-0.09 (s constructor assigns entity D to its ne) 212.54 610.35 P
-0.09 (xtMiEntity pointer \050no) 363.72 610.35 P
-0.09 (w forming a list of G) 453.86 610.35 P
(pointing to D pointing to E\051.) 202.54 598.35 T
3 7 Q
(n) 189 583.35 T
2 10 Q
(G\325) 202.54 583.35 T
(s constructor creates its alternate parent F sending a pointer to itself in as an ar) 212.54 583.35 T
(gu-) 525.91 583.35 T
(ment to the constructor) 202.54 571.35 T
(.) 294.48 571.35 T
3 7 Q
(n) 189 556.35 T
2 10 Q
(F\325) 202.54 556.35 T
(s STEPentity constructor is called and by def) 210.88 556.35 T
(ault assigns ne) 391.04 556.35 T
(xtMiEntity to be null.) 449.22 556.35 T
3 7 Q
(n) 189 541.35 T
2 10 Q
(F\325) 202.54 541.35 T
(s constructor \050with a pointer to G ar) 210.88 541.35 T
(gument\051 mak) 353.73 541.35 T
(es its headMiEntity point at G) 406.68 541.35 T
(and adds F\325) 202.54 529.35 T
(s attrib) 248.65 529.35 T
(utes to G\325) 275.95 529.35 T
(s STEP) 314.84 529.35 T
(attrib) 344.42 529.35 T
(ute list.) 365.33 529.35 T
3 7 Q
(n) 189 514.35 T
2 10 Q
(G\325) 202.54 514.35 T
(s constructor appends entity F to its ne) 212.54 514.35 T
(xtMiEntity pointer list \050no) 366.55 514.35 T
(w forming a list) 471.59 514.35 T
(of G pointing to D pointing to E pointing to F\051.) 202.54 502.35 T
3 7 Q
(n) 189 487.35 T
2 10 Q
(G\325) 202.54 487.35 T
(s constructor adds G\325) 212.54 487.35 T
(s attrib) 297.25 487.35 T
(utes to G\325) 324.55 487.35 T
(s STEP) 363.44 487.35 T
(attrib) 393.02 487.35 T
(ute list.) 413.93 487.35 T
(Attrib) 189 472.35 T
(ute v) 212.69 472.35 T
(alues are read, written, and v) 232.16 472.35 T
(alidated in the same manner as single-inherited) 347.15 472.35 T
(entity instantiations.) 189 460.35 T
54 416.99 540 420.02 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
189 418.5 540 418.5 2 L
0.25 H
2 Z
0 X
0 0 0 1 0 0 0 K
N
54 418.5 180 418.5 2 L
0 Z
N
0 0 612 792 C
0 12 Q
0 X
0 0 0 1 0 0 0 K
(6) 173.33 424.02 T
(T) 189 424.02 T
(emplate Issues in Dealing with Ag) 195.61 424.02 T
(gregates) 388.88 424.02 T
2 10 Q
(This section describes tw) 189 400.33 T
(o problems and solutions that came up when implementing) 289.72 400.33 T
(aggre) 189 388.33 T
(g) 211.06 388.33 T
(ates in SCL using templates as speci\336ed in the \336rst Committee Draft v) 216.01 388.33 T
(ersion of) 497.52 388.33 T
(P) 189 376.33 T
(art 23. The \336rst problem occurred when trying to e) 194.41 376.33 T
(xtend the P) 397 376.33 T
(art 23 implementation.) 441.85 376.33 T
(The second problem related directly to the P) 189 364.33 T
(art 23 speci\336ed implementation.) 366.32 364.33 T
(T) 189 346.33 T
(w) 194.31 346.33 T
(o requirements of the SCL aggre) 201.43 346.33 T
(g) 332.09 346.33 T
(ate implementation were that it match the P) 337.04 346.33 T
(art 23) 511.04 346.33 T
(speci\336cation of aggre) 189 334.33 T
(g) 274.94 334.33 T
(ates and that it be e) 279.89 334.33 T
(xtendable to accommodate reading and) 356.67 334.33 T
(writing of STEP P) 189 322.33 T
(art 21 e) 262.47 322.33 T
(xchange \336les. In addition, it w) 292.31 322.33 T
(as desired that the aggre) 413.59 322.33 T
(g) 510.08 322.33 T
(ate) 515.03 322.33 T
(implementation be able to accommodate the SCL design where higher le) 189 310.33 T
(v) 479.82 310.33 T
(el objects) 484.67 310.33 T
(could pass of) 189 298.33 T
(f tasks such as reading, writing, and v) 241.52 298.33 T
(alidating to lo) 392.08 298.33 T
(wer le) 447.39 298.33 T
(v) 471.85 298.33 T
(el or contained) 476.7 298.33 T
(objects. F) 189 286.33 T
(or e) 227.74 286.33 T
(xample, when the SCL \336le object STEP\336le reads a \336le, it determines the) 242.86 286.33 T
(entity to be read, creates the entity) 189 274.33 T
(, and tells the entity to read its v) 325.82 274.33 T
(alue. F) 453.62 274.33 T
(or each) 480.69 274.33 T
-0.35 (attrib) 189 262.33 P
-0.35 (ute associated with the ne) 209.91 262.33 P
-0.35 (wly created entity class, the entity tells the corresponding) 311 262.33 P
(STEP) 189 250.33 T
(attrib) 212.19 250.33 T
(ute object to read its v) 233.1 250.33 T
(alue. Each STEP) 321.45 250.33 T
(attrib) 388.79 250.33 T
(ute that has an underlying type) 409.7 250.33 T
(representation as a class tells the type object to read its v) 189 238.33 T
(alue. F) 415.1 238.33 T
(ollo) 442.17 238.33 T
(wing this style of) 457.48 238.33 T
(implementation, the P) 189 226.33 T
(art 23-speci\336ed aggre) 276.91 226.33 T
(g) 363.4 226.33 T
(ate template classes for set, list, bag, and) 368.35 226.33 T
(array were e) 189 214.33 T
(xtended to de\336ne template functions for reading, writing, and v) 238.26 214.33 T
(alidating) 491.03 214.33 T
(their o) 189 202.33 T
(wn v) 214.58 202.33 T
(alues. These aggre) 234.05 202.33 T
(g) 308.04 202.33 T
(ate functions were implemented such that aggre) 312.99 202.33 T
(g) 503.91 202.33 T
(ate) 508.86 202.33 T
(template instantiations containing element types implemented as classes follo) 189 190.33 T
(wed this) 498.73 190.33 T
-0.12 (same scheme using the element type classes\325 read, write, and v) 189 178.33 P
-0.12 (alidate functions to read,) 439.12 178.33 P
(write, and v) 189 166.33 T
(alidate the aggre) 236.24 166.33 T
(g) 302.18 166.33 T
(ate elements.) 307.13 166.33 T
-0.14 (Since some EXPRESS types in the SCL \050and in SD) 189 148.33 P
-0.14 (AI\051 are implemented as classes \050e.g.) 393.69 148.33 P
(selects\051 and some are implemented as C++ b) 189 136.33 T
(uilt-in types \050e.g. int\051 a compile-time) 367.55 136.33 T
-0.39 (problem arises when an aggre) 189 124.33 P
-0.39 (g) 306.69 124.33 P
-0.39 (ate template instantiation attempts to in) 311.64 124.33 P
-0.39 (v) 466.77 124.33 P
-0.39 (ok) 471.57 124.33 P
-0.39 (e an element\325) 481.47 124.33 P
-0.39 (s) 534 124.33 P
(class member function. The compiler e) 189 112.33 T
(xpects template softw) 344.93 112.33 T
(are code to be able to) 432.04 112.33 T
(handle an) 189 100.33 T
(y possible template instantiation without respect to program logic. That is,) 227.45 100.33 T
FMENDPAGE
%%EndPage: "16" 16
%%Page: "17" 17
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
72 750.02 558 750.02 2 L
7 X
0 0 0 1 0 0 0 K
V
2 H
0 Z
0 X
N
72 730.15 558 742.18 R
7 X
V
0 9 Q
0 X
(T) 207 736.18 T
(emplate Issues in Dealing with Ag) 211.96 736.18 T
(gregates) 356.91 736.18 T
72 726.98 558 726.98 2 L
7 X
V
0.25 H
0 X
N
72 74.02 558 74.02 2 L
7 X
V
2 Z
0 X
N
133 55.01 539 66.96 R
7 X
V
0 X
(EXPRESS User Gr) 241 60.96 T
(oup: October 1995) 318.85 60.96 T
(17) 553 60.96 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
72 87.98 558 686.02 R
7 X
V
2 10 Q
0 X
(e) 207 679.35 T
(v) 211.19 679.35 T
(en though conditions could be added to the code that w) 216.04 679.35 T
(ould not allo) 436.47 679.35 T
(w an element\325) 486.78 679.35 T
(s) 542.88 679.35 T
(function to be called when the underlying element is not implemented as a class, the) 207 667.35 T
(compiler will not allo) 207 655.35 T
(w it.) 293.14 655.35 T
(The solution to the problem w) 207 637.35 T
(as to mo) 327.73 637.35 T
(v) 361.47 637.35 T
(e the implementation of the desired acti) 366.32 637.35 T
(vity) 524.38 637.35 T
(from template functions to non-template functions. Each of these non-template func-) 207 625.35 T
-0.05 (tions shares the same name b) 207 613.35 P
-0.05 (ut is dif) 322.9 613.35 P
-0.05 (ferentiated by the type of an ar) 353.11 613.35 P
-0.05 (gument which deter-) 475.35 613.35 P
(mines the v) 207 601.35 T
(ersion of the function that gets in) 252.96 601.35 T
(v) 384.77 601.35 T
(ok) 389.57 601.35 T
(ed at run-time. F) 399.47 601.35 T
(or e) 465.98 601.35 T
(xample, the) 481.1 601.35 T
(template function to read a v) 207 589.35 T
(alue w) 321.45 589.35 T
(as changed to simply call a non-template function) 347.73 589.35 T
(using a name that is common among all v) 207 577.35 T
(ersions of the function. The ar) 373.51 577.35 T
(gument passed) 493.86 577.35 T
(into the read function is the template type-v) 207 565.35 T
(ariable indicating the type currently associ-) 381.45 565.35 T
(ated with the template. Since the non-template read function is really se) 207 553.35 T
(v) 493.37 553.35 T
(eral functions) 498.22 553.35 T
(all sharing the same name, the template type that the template is currently associated) 207 541.35 T
(with determines which non-template read function gets in) 207 529.35 T
(v) 437.4 529.35 T
(ok) 442.2 529.35 T
(ed at run-time. A read) 452.1 529.35 T
(function that is in) 207 517.35 T
(v) 276.88 517.35 T
(ok) 281.68 517.35 T
(ed with a class as an ar) 291.58 517.35 T
(gument then instructs the class to read its) 383.04 517.35 T
(v) 207 505.35 T
(alue. A read function that accepts an inte) 211.75 505.35 T
(ger may simply call a function prede\336ned to) 374.89 505.35 T
(read an inte) 207 493.35 T
(ger) 253.5 493.35 T
(. The solution to this problem results from mo) 265.72 493.35 T
(ving an action that w) 449.74 493.35 T
(ould) 533.52 493.35 T
(require one template function to deal with se) 207 481.35 T
(v) 385.33 481.35 T
(eral types \050which is what template func-) 390.18 481.35 T
(tions must al) 207 469.35 T
(w) 258.02 469.35 T
(ays do\051 in more than one w) 265.14 469.35 T
(ay \050indi) 373.91 469.35 T
(vidual types could not do this\051 to indi-) 404.49 469.35 T
-0 (vidual non-template functions \050which are not required to deal with more than one type\051) 207 457.35 P
(that only deal with one type in their o) 207 445.35 T
(wn w) 356.74 445.35 T
(ay) 378.58 445.35 T
(. The concept of polymorphism \050one func-) 387.37 445.35 T
-0.33 (tion with man) 207 433.35 P
-0.33 (y forms\051 in C++ w) 261.75 433.35 P
-0.33 (as used to separate the actions of reading dif) 334.94 433.35 P
-0.33 (ferent types) 509.23 433.35 P
(into dif) 207 421.35 T
(ferent functions at run-time.) 235.92 421.35 T
(A side ef) 207 403.35 T
(fect of this solution is that it limits the general purpose nature of the template) 242.85 403.35 T
(implementation. The result of o) 207 391.35 T
(v) 333.23 391.35 T
(erloading a function in) 338.08 391.35 T
(v) 428.5 391.35 T
(ocation to be bound to se) 433.3 391.35 T
(v) 533.32 391.35 T
(eral) 538.17 391.35 T
-0.39 (function implementations based on EXPRESS types is that the template implementation) 207 379.35 P
(may then only be instantiated for use with EXPRESS types. Instantiation of a template) 207 367.35 T
(aggre) 207 355.35 T
(g) 229.06 355.35 T
(ate with a type not de\336ned within EXPRESS w) 234.01 355.35 T
(ould cause a compile time error) 422.8 355.35 T
(.) 548.61 355.35 T
(The template implementation may) 207 343.35 T
(, ho) 343.84 343.35 T
(we) 358.59 343.35 T
(v) 370 343.35 T
(er) 374.85 343.35 T
(, easily be e) 382.22 343.35 T
(xtended by de\336ning the appro-) 429.28 343.35 T
(priate functions for dealing with the ne) 207 331.35 T
(w type. \050This limitation is of course not rele) 362.28 331.35 T
(v) 537.85 331.35 T
(ant) 542.6 331.35 T
(to applications that only instantiate templates for use with EXPRESS types.\051) 207 319.35 T
(The second problem that arose when implementing the aggre) 207 301.35 T
(g) 451.25 301.35 T
(ate templates according) 456.2 301.35 T
(to P) 207 289.35 T
(art 23 in) 222.69 289.35 T
(v) 255.62 289.35 T
(olv) 260.42 289.35 T
(ed the function CreateNestedAggre) 273.05 289.35 T
(g) 414.25 289.35 T
(ate. P) 419.2 289.35 T
(art 23 speci\336es that the) 441.27 289.35 T
(CreateNestedAggre) 207 277.35 T
(g) 285.71 277.35 T
(ate function shall add an empty aggre) 290.66 277.35 T
(g) 440.48 277.35 T
(ate to the contents of an) 445.43 277.35 T
(e) 207 265.35 T
(xisting aggre) 211.29 265.35 T
(g) 263.08 265.35 T
(ate when the e) 268.03 265.35 T
(xisting aggre) 325.36 265.35 T
(g) 377.15 265.35 T
(ate is de\336ned to contain elements of type) 382.1 265.35 T
(aggre) 207 253.35 T
(g) 229.06 253.35 T
(ate. If the aggre) 234.01 253.35 T
(g) 296.61 253.35 T
(ate\325) 301.56 253.35 T
(s element type is not de\336ned to be an aggre) 316 253.35 T
(g) 488.88 253.35 T
(ate, an error) 493.83 253.35 T
(indicator shall be set.) 207 241.35 T
(The problem with implementing CreateNestedAggre) 207 223.35 T
(g) 417.93 223.35 T
(ate w) 422.88 223.35 T
(as similar to the \336rst) 444.16 223.35 T
(problem b) 207 211.35 T
(ut the solution dif) 247.63 211.35 T
(fered. The problem arose from trying to de\336ne a template) 318.22 211.35 T
(function that w) 207 199.35 T
(ould create an aggre) 267.45 199.35 T
(g) 348.1 199.35 T
(ate for some template instantiations and not create) 353.05 199.35 T
(one for others. T) 207 187.35 T
(o create an aggre) 272.85 187.35 T
(g) 340.72 187.35 T
(ate element of type aggre) 345.67 187.35 T
(g) 446.6 187.35 T
(ate a create-aggre) 451.55 187.35 T
(g) 521.91 187.35 T
(ate) 526.86 187.35 T
(function must be called on the aggre) 207 175.35 T
(g) 352.38 175.35 T
(ate element type. Since all aggre) 357.33 175.35 T
(g) 487.15 175.35 T
(ates are imple-) 492.1 175.35 T
-0.38 (mented as templates, the create-aggre) 207 163.35 P
-0.38 (g) 355.54 163.35 P
-0.38 (ate function is a template function. As a result the) 360.49 163.35 P
(compiler requires that an) 207 151.35 T
(y possible type the aggre) 306.55 151.35 T
(g) 405.83 151.35 T
(ate could be instantiated for must) 410.78 151.35 T
(ha) 207 139.35 T
(v) 216.24 139.35 T
(e a create-aggre) 221.09 139.35 T
(g) 284.23 139.35 T
(ate template function. This is only possible when the element type) 289.18 139.35 T
-0.05 (used to instantiate the aggre) 207 127.35 P
-0.05 (g) 318.31 127.35 P
-0.05 (ate is an aggre) 323.26 127.35 P
-0.05 (g) 380.44 127.35 P
-0.05 (ate. Instantiation of the aggre) 385.39 127.35 P
-0.05 (g) 501.96 127.35 P
-0.05 (ate with an) 506.92 127.35 P
-0.05 (y) 550.55 127.35 P
(non-aggre) 207 115.35 T
(g) 247.39 115.35 T
(ate type causes a compilation error) 252.34 115.35 T
(.) 390.92 115.35 T
FMENDPAGE
%%EndPage: "17" 17
%%Page: "18" 18
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
122 55.01 528 66.96 R
7 X
0 0 0 1 0 0 0 K
V
0 9 Q
0 X
(EXPRESS User Gr) 230 60.96 T
(oup: October 1995) 307.85 60.96 T
54 750.02 540 750.02 2 L
7 X
V
2 H
0 Z
0 X
N
54 730.15 540 742.18 R
7 X
V
0 X
(Design of a Software Librar) 162 736.18 T
(y f) 279.12 736.18 T
(or Implementing EXPRESS: The NIST STEP Class Librar) 289.44 736.18 T
(y) 529.6 736.18 T
54 726.98 540 726.98 2 L
7 X
V
0.25 H
0 X
N
54 74.02 540 74.02 2 L
7 X
V
2 Z
0 X
N
(18) 54 60.96 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
54 87.98 540 686.02 R
7 X
V
2 10 Q
0 X
(The solution to this problem in) 189 679.35 T
(v) 312.22 679.35 T
(olv) 317.02 679.35 T
(ed creating template specialization functions.) 329.65 679.35 T
(T) 189 667.35 T
(emplate specialization functions are used to o) 194.41 667.35 T
(v) 376.45 667.35 T
(erride template functions for certain) 381.3 667.35 T
(types with which the template has been instantiated. The approach w) 189 655.35 T
(as to o) 464.13 655.35 T
(v) 490.09 655.35 T
(erride the) 494.94 655.35 T
(template functions for non-aggre) 189 643.35 T
(g) 320.21 643.35 T
(ate element types. The choice w) 325.16 643.35 T
(as to o) 453.36 643.35 T
(v) 479.32 643.35 T
(erride these) 484.17 643.35 T
(types since their number) 189 631.35 T
(, though possibly lar) 286.64 631.35 T
(ge, equals the number of non-aggre) 368.13 631.35 T
(g) 509.61 631.35 T
(ate) 514.56 631.35 T
(types that are de\336ned in the EXPRESS and the number is \336nite. In contrast, although) 189 619.35 T
(there are a \336nite number of aggre) 189 607.35 T
(g) 322.14 607.35 T
(ates de\336ned in an) 327.09 607.35 T
(y one schema, the implementation) 396.65 607.35 T
(of an aggre) 189 595.35 T
(g) 233.83 595.35 T
(ate is a template. T) 238.78 595.35 T
(emplates are meant to be instantiable with an) 313.9 595.35 T
(y de\336ned) 494 595.35 T
(type including templates \050as is necessary when aggre) 189 583.35 T
(g) 400.75 583.35 T
(ates are nested\051. Thus, it is not) 405.7 583.35 T
(possible to write template specialization functions to single out instantiations of) 189 571.35 T
(templates that may be instantiated with templates and so on.) 189 559.35 T
(The template specialization functions de\336ne functions that will be called instead of the) 189 541.35 T
(def) 189 529.35 T
(ault function when the template has been instantiated with the type for which a) 201.67 529.35 T
(specialization function has been written. These specialization functions simply set an) 189 517.35 T
(error indicating that the CreateNestedAggre) 189 505.35 T
(g) 364.36 505.35 T
(ate function has been ille) 369.31 505.35 T
(g) 469.14 505.35 T
(ally called. The) 474.09 505.35 T
-0.25 (def) 189 493.35 P
-0.25 (ault CreateNestedAggre) 201.67 493.35 P
-0.25 (g) 297.63 493.35 P
-0.25 (ate function is then free to call the appropriate create-aggre-) 302.58 493.35 P
(g) 189 481.35 T
(ate template function since the compiler e) 193.95 481.35 T
(xpects that all types not implementing the) 360.99 481.35 T
-0.22 (create-aggre) 189 469.35 P
-0.22 (g) 238.26 469.35 P
-0.22 (ate function ha) 243.21 469.35 P
-0.22 (v) 302.01 469.35 P
-0.22 (e been accounted for through template specialization func-) 306.86 469.35 P
(tions) 189 457.35 T
2 8 Q
(14) 208.45 461.35 T
2 10 Q
(.) 216.45 457.35 T
(The specialization functions\325 discriminating ar) 189 439.35 T
(gument type) 375.46 439.35 T
2 8 Q
(15) 425.18 443.35 T
2 10 Q
( must match the template) 433.18 439.35 T
(type e) 189 427.35 T
(xactly in order to be called. Entity) 213.01 427.35 T
(, enumeration, and select types in SCL are all) 348.73 427.35 T
(implemented as generated classes based on an EXPRESS speci\336cation. Each of these) 189 415.35 T
(generated types inherits from its o) 189 403.35 T
(wn common supertype. Specialization functions) 325.12 403.35 T
(written to catch the common supertype were ne) 189 391.35 T
(v) 378.43 391.35 T
(er in) 383.28 391.35 T
(v) 400.93 391.35 T
(ok) 405.73 391.35 T
(ed when the template w) 415.63 391.35 T
(as) 510.51 391.35 T
(instantiated with an) 189 379.35 T
(y of the subtypes actually implementing the type. F) 267.18 379.35 T
(or this reason it) 472.3 379.35 T
(w) 189 367.35 T
(as necessary to generate aggre) 196.12 367.35 T
(g) 317.03 367.35 T
(ate-specialization functions for the classes used to) 321.98 367.35 T
(represent entity) 189 355.35 T
(, enumeration, and select types.) 250.28 355.35 T
(A side ef) 189 337.35 T
(fect of this solution is that it limits the general purpose nature of the template) 224.85 337.35 T
(implementation. A template specialization function must e) 189 325.35 T
(xist for all non-nested aggre-) 423 325.35 T
-0.16 (g) 189 313.35 P
-0.16 (ate instantiations or a compile-time error will occur when a template is instantiated for) 193.95 313.35 P
-0.04 (a type that is missing the specialization function. The result of requiring that a template) 189 301.35 P
(specialization function must e) 189 289.35 T
(xist for all non-nested aggre) 308.56 289.35 T
(g) 420.61 289.35 T
(ate instantiations is that the) 425.56 289.35 T
(template implementation may then only be instantiated for use with EXPRESS types.) 189 277.35 T
(The template implementation may) 189 265.35 T
(, ho) 325.84 265.35 T
(we) 340.59 265.35 T
(v) 352 265.35 T
(er) 356.85 265.35 T
(, easily be e) 364.22 265.35 T
(xtended by de\336ning the appro-) 411.28 265.35 T
-0.12 (priate template specialization functions for dealing with the ne) 189 253.35 P
-0.12 (w type. This limitation is) 437.79 253.35 P
(of course not rele) 189 241.35 T
(v) 258.45 241.35 T
(ant to applications that only instantiate templates for use with) 263.2 241.35 T
(EXPRESS types.) 189 229.35 T
-0.38 (Se) 189 211.35 P
-0.38 (v) 198.75 211.35 P
-0.38 (eral other problems occurred with the use of templates to implement aggre) 203.6 211.35 P
-0.38 (g) 497.22 211.35 P
-0.38 (ates. The) 502.17 211.35 P
(biggest of these problems w) 189 199.35 T
(as in dealing with v) 301.11 199.35 T
(arious v) 379.19 199.35 T
(endors\325 C++ compiler\325) 410.98 199.35 T
(s) 502.25 199.35 T
-0.25 (handling of templates. In man) 189 187.35 P
-0.25 (y cases, the implementation of aggre) 307.54 187.35 P
-0.25 (g) 452.76 187.35 P
-0.25 (ates using templates) 457.71 187.35 P
54 143.98 540 174.01 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
189 151.98 333 151.98 2 L
0.25 H
2 Z
0 X
0 0 0 1 0 0 0 K
N
0 0 612 792 C
2 9 Q
0 X
0 0 0 1 0 0 0 K
-0.06 (14.  Note - compilers handle these functions differently and thus this solution imposes portability) 189 137.98 P
(problems.) 189 127.98 T
-0.14 (15.  The specialization function that gets invoked is determined by its function prototype. That is,) 189 114.98 P
(the function is called with the current template type sent in as an argument. At run time, this) 189 104.98 T
(causes the specialization function with the matching function prototype to be invoked.) 189 94.98 T
FMENDPAGE
%%EndPage: "18" 18
%%Page: "19" 19
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
72 750.02 558 750.02 2 L
7 X
0 0 0 1 0 0 0 K
V
2 H
0 Z
0 X
N
72 730.15 558 742.18 R
7 X
V
0 9 Q
0 X
(Conc) 207 736.18 T
(lusion) 229.32 736.18 T
72 726.98 558 726.98 2 L
7 X
V
0.25 H
0 X
N
72 74.02 558 74.02 2 L
7 X
V
2 Z
0 X
N
133 55.01 539 66.96 R
7 X
V
0 X
(EXPRESS User Gr) 241 60.96 T
(oup: October 1995) 318.85 60.96 T
(19) 553 60.96 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
72 87.98 558 686.02 R
7 X
V
2 10 Q
0 X
(as speci\336ed in P) 207 679.35 T
(art 23 pushed the compilers be) 271.57 679.35 T
(yond what the) 393.9 679.35 T
(y were able to support.) 450.41 679.35 T
-0.15 (Se) 207 667.35 P
-0.15 (v) 216.75 667.35 P
-0.15 (eral rounds of b) 221.6 667.35 P
-0.15 (ug reports, patches, and creati) 283.99 667.35 P
-0.15 (v) 402.55 667.35 P
-0.15 (e w) 407.39 667.35 P
-0.15 (ork-arounds had to occur in man) 421.3 667.35 P
-0.15 (y) 550.65 667.35 P
-0.03 (cases e) 207 655.35 P
-0.03 (v) 234.76 655.35 P
-0.03 (en to get the implementation to b) 239.61 655.35 P
-0.03 (uild, much less w) 371.47 655.35 P
-0.03 (ork correctly) 441.29 655.35 P
-0.03 (. Another major) 491.98 655.35 P
-0.32 (impact on the de) 207 643.35 P
-0.32 (v) 272.18 643.35 P
-0.32 (elopment of the aggre) 277.03 643.35 P
-0.32 (g) 363.41 643.35 P
-0.32 (ate implementation had to do with the length of) 368.36 643.35 P
(time and compiler options required to compile and link applications using templates.) 207 631.35 T
(Dif) 207 619.35 T
(ferent compilers required dif) 220.08 619.35 T
(ferent compiler switches which often were not well-) 334.52 619.35 T
(documented. The use of templates greatly increased the time it took to b) 207 607.35 T
(uild code and) 495.37 607.35 T
(test programs using templates thus trying the patience of de) 207 595.35 T
(v) 444.78 595.35 T
(elopers and greatly) 449.63 595.35 T
(increasing de) 207 583.35 T
(v) 259.79 583.35 T
(elopment time. Ov) 264.64 583.35 T
(erall though, the SCL implementation of aggre) 339.21 583.35 T
(g) 525.99 583.35 T
(ates) 530.94 583.35 T
(w) 207 571.35 T
(as useful for pro) 214.12 571.35 T
(viding input back into the speci\336ed implementation for P) 279.23 571.35 T
(art 23 and) 507.41 571.35 T
(v) 207 559.35 T
(erifying that the ideas presented were implementable.) 211.85 559.35 T
72 515.99 558 519.02 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
207 517.5 558 517.5 2 L
0.25 H
2 Z
0 X
0 0 0 1 0 0 0 K
N
72 517.5 198 517.5 2 L
0 Z
N
0 0 612 792 C
0 12 Q
0 X
0 0 0 1 0 0 0 K
(7) 191.33 523.02 T
(Conc) 207 523.02 T
(lusion) 236.76 523.02 T
2 10 Q
(Implementation of the SCL softw) 207 499.33 T
(are toolkit has been useful for v) 341.34 499.33 T
(alidating P) 467.73 499.33 T
(art 23 soft-) 510.64 499.33 T
-0.43 (w) 207 487.33 P
-0.43 (are implementation ideas and pro) 214.12 487.33 P
-0.43 (viding practical feedback into its de) 345.58 487.33 P
-0.43 (v) 486.24 487.33 P
-0.43 (elopment before) 491.09 487.33 P
(obtaining appro) 207 475.33 T
(v) 269.9 475.33 T
(al and commitment for use as an international standard. The public) 274.65 475.33 T
-0.38 (a) 207 463.33 P
-0.38 (v) 211.24 463.33 P
-0.38 (ailability of SCL and tools based on SCL has also been successful in lo) 215.99 463.33 P
-0.38 (wering the cost) 495.53 463.33 P
(of in) 207 451.33 T
(v) 225.21 451.33 T
(estment in the de) 230.06 451.33 T
(v) 297.86 451.33 T
(elopment and prototyping ef) 302.71 451.33 T
(forts for STEP by industry and) 416.06 451.33 T
(academia.) 207 439.33 T
(The STEP Class Library and related tools are in the public domain and are a) 207 421.33 T
(v) 511.75 421.33 T
(ailable) 516.5 421.33 T
-0.41 (from NIST through the STEP On-Line Information Service \050SOLIS\051 [Rinaudot]. SOLIS) 207 409.33 P
(may be accessed by one of three methods:) 207 397.33 T
3 7 Q
(n) 207 379.33 T
2 10 Q
(anon) 220.54 379.33 T
(ymous ftp: ftp.cme.nist.go) 239.83 379.33 T
(v \050129.6.32.54\051) 344.96 379.33 T
3 7 Q
(n) 207 364.33 T
2 10 Q
(e-mail: nptserv) 220.54 364.33 T
(er@cme.nist.go) 280.66 364.33 T
(v) 343.6 364.33 T
3 7 Q
(n) 207 349.33 T
2 10 Q
(w) 220.54 349.33 T
(orld wide web: gopher://elib) 227.66 349.33 T
(.cme.nist.go) 340.86 349.33 T
(v or http://elib) 389.32 349.33 T
(.cme.nist.go) 446.15 349.33 T
(v:70/) 494.61 349.33 T
-0.02 (The softw) 207 334.33 P
-0.02 (are is located in the directory pub/subject/sc4/tools/nist and documentation is) 247.15 334.33 P
(in pub/subject/sc4/national/usa/nist/docs.) 207 322.33 T
(Contact the Manuf) 207 304.33 T
(acturing Systems Inte) 281.89 304.33 T
(gration Di) 368.4 304.33 T
(vision \050npt-info@cme.nist.go) 408.98 304.33 T
(v or) 526.65 304.33 T
-0.21 (301-975-3508\051 for more information on ho) 207 292.33 P
-0.21 (w to obtain the softw) 377.61 292.33 P
-0.21 (are or for other informa-) 461.11 292.33 P
(tion related to the w) 207 280.33 T
(ork.) 286.89 280.33 T
72 236.97 558 239.99 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
207 238.48 558 238.48 2 L
0.25 H
2 Z
0 X
0 0 0 1 0 0 0 K
N
72 238.48 198 238.48 2 L
0 Z
N
0 0 612 792 C
0 12 Q
0 X
0 0 0 1 0 0 0 K
(8) 191.33 243.99 T
(Ac) 207 243.99 T
(kno) 222.1 243.99 T
(wleg) 243.25 243.99 T
(ements) 270.05 243.99 T
2 10 Q
(Da) 207 220.3 T
(vid Helfrick w) 218.46 220.3 T
(as the principal de) 276.68 220.3 T
(v) 349.47 220.3 T
(eloper of the SCL aggre) 354.32 220.3 T
(g) 450.26 220.3 T
(ate implementation. He) 455.21 220.3 T
(disco) 207 208.3 T
(v) 227.96 208.3 T
(ered the aggre) 232.81 208.3 T
(g) 289.3 208.3 T
(ate problems and solutions presented in this paper) 294.25 208.3 T
(.) 493.4 208.3 T
FMENDPAGE
%%EndPage: "19" 19
%%Page: "20" 20
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
122 55.01 528 66.96 R
7 X
0 0 0 1 0 0 0 K
V
0 9 Q
0 X
(EXPRESS User Gr) 230 60.96 T
(oup: October 1995) 307.85 60.96 T
54 750.02 540 750.02 2 L
7 X
V
2 H
0 Z
0 X
N
54 730.15 540 742.18 R
7 X
V
0 X
(Design of a Software Librar) 162 736.18 T
(y f) 279.12 736.18 T
(or Implementing EXPRESS: The NIST STEP Class Librar) 289.44 736.18 T
(y) 529.6 736.18 T
54 726.98 540 726.98 2 L
7 X
V
0.25 H
0 X
N
54 74.02 540 74.02 2 L
7 X
V
2 Z
0 X
N
(20) 54 60.96 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
54 87.98 540 701.02 R
7 X
V
54 685.99 540 689.02 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
189 687.5 540 687.5 2 L
0.25 H
2 Z
0 X
0 0 0 1 0 0 0 K
N
54 687.5 180 687.5 2 L
0 Z
N
0 0 612 792 C
0 12 Q
0 X
0 0 0 1 0 0 0 K
(9) 173.33 693.02 T
(Ref) 189 693.02 T
(erences) 208.21 693.02 T
2 F
(ISO 10303-11:1994) 108 667.99 T
5 F
(Industrial automation systems and integration Product data) 206.66 667.99 T
(representation and exchange\321Part 11: Description methods: The) 189 653.99 T
(EXPRESS language reference manual) 189 639.99 T
2 F
(.) 372.64 639.99 T
(ISO 10303-21:1994) 108 619.99 T
5 F
(Industrial automation systems and integration\321Product data) 206.66 619.99 T
(representation and exchange\321Part 21: Implementation methods: Clear) 189 605.99 T
(text encoding of the exchange structure) 189 591.99 T
2 F
(.) 377.96 591.99 T
(ISO 10303-22) 108 571.99 T
5 F
(Industrial automation systems and integration\321Product data) 189 571.99 T
(representation and exchange\321Part 22: Implementation methods: STEP) 189 557.99 T
(data access interface) 189 543.99 T
2 F
(.) 290.32 543.99 T
(ISO 10303-23) 108 523.99 T
5 F
(Industrial automation systems and integration\321Product data) 189 523.99 T
(representation and exchange\321Part 23: Implementation methods: C++) 189 509.99 T
(language binding to SDAI) 189 495.99 T
2 F
(.) 314.66 495.99 T
(Libes93a) 108 475.99 T
(Don Libes,) 189 475.99 T
5 F
(The NIST EXPRESS Toolkit - Design and Implementation) 245.33 475.99 T
2 F
(,) 522.98 475.99 T
(Proceedings of the Seventh Annual ASME Engineering Database) 189 461.99 T
(Symposium, San Diego, CA, August 9-11, 1993.) 189 447.99 T
(Libes93b) 108 427.99 T
(Don Libes,) 189 427.99 T
5 F
(Exppp - An EXPRESS Pretty Printer) 245.33 427.99 T
2 F
(, NISTIR 5292 \050NTIS) 420.97 427.99 T
(PB94 - 120797/AS\051, Gaithersburg, MD, November 1993.) 189 413.99 T
(Morris92) 108 393.99 T
(KC Morris,) 189 393.99 T
5 F
(Architecture for the Validation Testing System Software,) 247.33 393.99 T
2 F
(NISTIR 4742, National Institute of Standards and Technology,) 189 379.99 T
(Gaithersburg, MD, January 1992.) 189 365.99 T
(Morris92b) 108 345.99 T
(KC Morris, D. Sauder, S. Ressler,) 189 345.99 T
5 F
(Validation Testing System: Reusable) 355.32 345.99 T
(Software Component Design,) 189 331.99 T
2 F
( NISTIR 4937, National Institute of) 330 331.99 T
(Standards and Technology, Gaithersburg, MD, October 1992.) 189 317.99 T
(Morris93) 108 297.99 T
-0.82 (KC Morris,) 189 297.99 P
5 F
-0.82 (Data Probe:  A Tool for EXPRESS \320 based Data,) 245.69 297.99 P
-0.82 (Proceedings) 477.83 297.99 P
(of the Seventh Annual ASME Database Symposium - Engineering Data) 189 283.99 T
(Management: Key to Success in a Global Market) 189 269.99 T
2 F
(, American Society of) 425.29 269.99 T
(Mechanical Engineers, New York, August 1993.) 189 255.99 T
(Rinaudot) 108 235.99 T
(Gaylen R. Rinaudot,) 189 235.99 T
5 F
(The IGES/PDES Organization: STEP On-Line) 290.66 235.99 T
(Information Service \050SOLIS\051) 189 221.99 T
2 F
(, NISTIR 5511, National Institute of) 326.98 221.99 T
(Standards and Technology, Gaithersburg MD, October 1994.) 189 207.99 T
(Sauder93) 108 187.99 T
-0.86 (David Sauder,) 189 187.99 P
5 F
-0.86 (Data Probe User\325s Guide) 258.93 187.99 P
2 F
-0.86 (, NISTIR 5141, National Institute) 379.99 187.99 P
(of Standards and Technology, Gaithersburg, MD, March 1993.) 189 173.99 T
(Stroustrup90) 108 153.99 T
(B. Stroustrup, ANSI X3J16/90-0020,) 189 153.99 T
5 F
(C++ Language System Reference) 370.67 153.99 T
(Manual) 189 139.99 T
2 F
(.) 226.33 139.99 T
2 10 Q
(Documents from the National Institute of Standards and Technology are available) 160.14 121.33 T
(through the National Technical Information Service \050NTIS\051, Springfield, VA, 22161.) 153.61 107.33 T
(To request the documents use the NISTIR number.) 222.07 93.33 T
FMENDPAGE
%%EndPage: "20" 20
%%Trailer
%%BoundingBox: 0 0 612 792
%%PageOrder: Ascend
%%Pages: 20
%%DocumentFonts: Helvetica-Bold
%%+ Helvetica
%%+ Times-Roman
%%+ ZapfDingbats
%%+ Times-Bold
%%+ Times-Italic
%%EOF
